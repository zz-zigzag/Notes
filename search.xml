<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>我的Chrome插件列表</title>
    <url>/2018/04/my-chrome-plugins.html</url>
    <content><![CDATA[<blockquote>
<p>用Chrome八九年了，插件一点的一点积累越来越多，之前写过<a href="/2016/10/some-plugin-of-improving-efficiency-for-chrome">一些提高效率的Chrome插件</a>，这里做个完整总结备份，供自己记录和大家参考。</p>
<p>以下插件是我目前Chrome中的插件，之前被删了的当然就不会列出了，也有一些插件，虽然将来可能不会再用，但毕竟曾经陪伴过我一段时间，也没有删除而是在此列出来了。</p>
</blockquote>
<p><img src="/images/beauty/chrome-logo.png" alt="来张图片轻松一下"></p>
<a id="more"></a>

<h1 id="保持常开"><a href="#保持常开" class="headerlink" title="保持常开"></a>保持常开</h1><ol>
<li><a href="https://chrome.google.com/webstore/detail/%E4%B8%80%E9%94%AE%E7%AE%A1%E7%90%86%E6%89%80%E6%9C%89%E6%89%A9%E5%B1%95/niemebbfnfbjfojajlmnbiikmcpjkkja" target="_blank" rel="noopener">一键管理所有扩展</a> 因为扩展越来越多，经常需要打开<code>chrome://extensions/</code> 是很不方便的，因为Chrome有些插件会常开常关，此外Chrome比较臃肿，开扩展多了会占用较多内存。</li>
<li><a href="https://chrome.google.com/webstore/detail/adblock/gighmmpiobklfepjocnamgkkbiglidom" target="_blank" rel="noopener">AdBlock</a> 拦截广告的，可能是装的第一个Chrome插件</li>
<li><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">Proxy SwitchyOmega</a> 管理Chrome代理，可以做到根据网址动态适配，配合SSH或Shadowsocks，相当有用。</li>
<li><a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb" target="_blank" rel="noopener">Vimium</a> 仿照Vim快捷键，可以使用键盘浏览网页，更方便的是可以便捷搜索书签和浏览记录，一上手就离不开</li>
<li><a href="https://chrome.google.com/webstore/detail/the-great-suspender/klbibkeccnjlkjkiokjodocebajanakg" target="_blank" rel="noopener">The Great Suspender</a> 经常有Chrome上面开着几十个标签的习惯，Chrome可是很吃内存的，动辄占用上G的内存，这个插件就是把超过一定时间没浏览的网页挂起，可设置全部【挂起/激活】的快捷键</li>
<li><a href="https://chrome.google.com/webstore/detail/gayhub/mdcffelghikdiafnfodjlgllenhlnejl" target="_blank" rel="noopener">GayHub</a> 作为一个每天使用Github的程序员，常开这个也情有可原了，更方便的使用Github</li>
<li><a href="https://chrome.google.com/webstore/detail/%E6%8E%98%E9%87%91/lecdifefmmfjnjjinhaennhdlmcaeeeb" target="_blank" rel="noopener">掘金</a> 替换新标签页，为掘金（程序员）的头条</li>
<li><a href="https://chrome.google.com/webstore/detail/raindropio-save-button-fo/ldgfbffkinooeloadekpmfoklnobpien" target="_blank" rel="noopener">Raindrop.io: “Save Button” for Web</a> 一直在寻找一个能收藏网页的服务，后来碰到了这个，我用它保存阅读过得好文章，便于以后自己查阅</li>
<li><a href="https://chrome.google.com/webstore/detail/shouqu/ofmcnfnfchmhlchdifeobmjjhmkijpnf" target="_blank" rel="noopener">收趣</a> 国内优秀的稍后阅读产品，之前使用Pocket，后来用收趣，稍后阅读功能强大，可从各个途径收藏，可推送Kindle。不同于Raindrop，我用这个做稍后阅读，并非收藏功能。</li>
<li><a href="https://chrome.google.com/webstore/detail/simpread-reader-view/ijllcpnolfcooahcekpamkbidhejabll" target="_blank" rel="noopener">简悦 - SimpRead</a> 国内有一款良心产品，官方广告【简】单阅读，愉【悦】心情 ，</li>
</ol>
<h1 id="偶尔使用"><a href="#偶尔使用" class="headerlink" title="偶尔使用"></a>偶尔使用</h1><ol>
<li>LessPass 随机生成密码使用，保存于Chrome，不占用脑子记。</li>
<li>Tampermonkey，油猴脚本，常用其看各大视频网站VIP</li>
</ol>
<h1 id="论文学术"><a href="#论文学术" class="headerlink" title="论文学术"></a>论文学术</h1><ol>
<li>Google学术搜索按钮</li>
<li>Google 翻译</li>
</ol>
<h1 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h1><h2 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h2><ol>
<li>Stylish-为任意网站自定义主题</li>
<li>Stylus，和上面那个长的很像</li>
</ol>
<h2 id="夜间模式"><a href="#夜间模式" class="headerlink" title="夜间模式"></a>夜间模式</h2><ol>
<li>Midnight Lizard 适配所有网站，比第二个好用</li>
<li>Dark Mode 适配所有网站，经常不好看</li>
<li>Darkness - 精美的深色主题，适配谷歌脸书等特定网站</li>
</ol>
<h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><h2 id="新标签页"><a href="#新标签页" class="headerlink" title="新标签页"></a>新标签页</h2><ol>
<li>Infinity新标签页，陪伴我一段时间，但后来觉得用不上了</li>
<li>Rowe News New Tab</li>
</ol>
<h2 id="标签搜索"><a href="#标签搜索" class="headerlink" title="标签搜索"></a>标签搜索</h2><ol>
<li>Neater Bookmarks 官宣：灵巧实用的弹出书签</li>
<li>Chromarks - Chrome Bookmarks Menu，搜标签的，外观难看点，不过确实好用</li>
</ol>
<h2 id="收藏标签"><a href="#收藏标签" class="headerlink" title="收藏标签"></a>收藏标签</h2><ol>
<li>Larder: Bookmarking for developers，现在用收趣和Raindrop了</li>
<li>Evernote Web Clipper ，保存到Evernote，好多年未再使用了</li>
<li>Save to Pocket</li>
<li>Send to Kindle for Google Chrome</li>
<li>Wakelet，Save any webpage, anywhere.</li>
</ol>
<h2 id="整理网页（标签）"><a href="#整理网页（标签）" class="headerlink" title="整理网页（标签）"></a>整理网页（标签）</h2><ol>
<li>OneTab 把所有打开的网页暂时收藏在一个页面上，降低内存</li>
<li>Tabs Outliner，把当前打开的网页，作为一个组暂时记下，之后再用可瞬间恢复，我想找一个能持久化云存储的这样的服务。比如我正在研究什么，开了10个网页，可以持久化保存此分组，过两天继续使用。</li>
<li>SuperSorter 这个真是整理收藏夹的，但是慎用，好像会导致乱序</li>
</ol>
<h2 id="其他关于标签"><a href="#其他关于标签" class="headerlink" title="其他关于标签"></a>其他关于标签</h2><ol>
<li>SimpleUndoClose 打开关闭的标签</li>
<li>Full Page Screen Capture，截网页整图，更常用FastStone Capture，无论录屏还是截图</li>
</ol>
<h1 id="记"><a href="#记" class="headerlink" title="记"></a>记</h1><ol>
<li>Google Keep Chrome 谷歌的产品确实优秀，只是暂时没养成习惯使用或没相应的需求</li>
</ol>
<h1 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h1><ol>
<li>cVim，许多人说比Vimium好用，更强大，但我是先入为主习惯后者了。</li>
<li>Steward - a command launcher 官宣：启动器/便捷管理扩展/应用/标签/历史记录等。神器，功能强大，入手慢些，有许多功能同Vim，有点重，暂未上手</li>
</ol>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ol>
<li>GitHub File Icon，有了GayHub，这个暂时不用了</li>
<li>SimilarWeb - 网站流量来源和排名</li>
<li>Markdown Here 官宣：用Markdown写一封漂亮的电子邮件</li>
<li>Listen 1 整合几大音乐平台，偶尔听歌使用</li>
<li>Noisli，偶尔直接上网站，听水声</li>
<li>番茄土豆，遇见庞大长期任务的时候，会打开这个，买个会员，静静的使用</li>
<li>Super Auto Refresh，有时候需要刷新网页</li>
<li>IE Tab 官宣：以IE内核显示网页。好多年以前偶尔使用，现在基本不用了，用IE的机会不多了</li>
</ol>
<h1 id="开发常用"><a href="#开发常用" class="headerlink" title="开发常用"></a>开发常用</h1><ol>
<li>ElasticSearch Head</li>
<li>Page Ruler</li>
<li>Wappalyzer，看当前网站使用的框架，技术栈，以及那些第三方服务</li>
<li>WhatRuns ，同上基本一致</li>
<li>WhatFont，点击网页文字，可识别出其字体</li>
</ol>
<p>文章最后来一张大图，我的<code>chrome://extensions</code>，要右键打开才能看得清</p>
<p><img src="/images/my-chrome-plugin-list.jpg" alt=""></p>
]]></content>
      <categories>
        <category>总结备份</category>
      </categories>
      <tags>
        <tag>plugin</tag>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>PowerDesigner协作环境配置</title>
    <url>/2018/03/PowerDesigner-sync-setup.html</url>
    <content><![CDATA[<h1 id="PowerDesigner协作环境配置"><a href="#PowerDesigner协作环境配置" class="headerlink" title="PowerDesigner协作环境配置"></a>PowerDesigner协作环境配置</h1><h2 id="配置本机odbc数据源"><a href="#配置本机odbc数据源" class="headerlink" title="配置本机odbc数据源"></a>配置本机odbc数据源</h2><p>在Oracle数据库上建一个用户用于pd使用，然后配置windows odbc数据源。如果pd为64位则配置64位数据源，参考<a href="https://www.cnblogs.com/ericli/p/6806080.html" target="_blank" rel="noopener">windows10 建立ODBC数据源</a></p>
<a id="more"></a>
<h2 id="配置Repository"><a href="#配置Repository" class="headerlink" title="配置Repository"></a>配置Repository</h2><p>菜单栏 Repository –&gt; Repository Definitions新增一个，使用刚建的odbc数据源。<br><img src="/images/PowerDesigner-sync-setup/1.jpg" alt="img"></p>
<h2 id="接数据库和管理用户"><a href="#接数据库和管理用户" class="headerlink" title="接数据库和管理用户"></a>接数据库和管理用户</h2><p>菜单栏 Repository–&gt; Connect，输入一个用于登录的账号密码，如果是第一次初始化协作配置，会让配置一个ADMIN用户密码<br><img src="/images/PowerDesigner-sync-setup/2.jpg" alt="img"><br>初始化完毕之后，可通过Repository –&gt; Administration-&gt; Users来管理用户，如下图建立一个zhangxiaodong的用户，可查看或重置密码，分配所属用户组以及设置权限等<br><img src="/images/PowerDesigner-sync-setup/3.jpg" alt="img"><br>之后，可使用新建的用户登陆了，如下图，新用户登录会提示修改密码。<br><img src="/images/PowerDesigner-sync-setup/4.jpg" alt="img"></p>
<h2 id="上传和下载（check-in-check-out）"><a href="#上传和下载（check-in-check-out）" class="headerlink" title="上传和下载（check in/check out）"></a>上传和下载（check in/check out）</h2><p>菜单栏 Repository –&gt; check in/check out，选择相应文档操作即可</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>setup</tag>
        <tag>version control</tag>
        <tag>PowerDesigner</tag>
      </tags>
  </entry>
  <entry>
    <title>Enterprise Architect协作环境配置</title>
    <url>/2018/03/Enterprise-Architect-sync-setup.html</url>
    <content><![CDATA[<h1 id="Enterprise-Architect协作环境配置"><a href="#Enterprise-Architect协作环境配置" class="headerlink" title="Enterprise Architect协作环境配置"></a>Enterprise Architect协作环境配置</h1><h2 id="配置一个SVN-server"><a href="#配置一个SVN-server" class="headerlink" title="配置一个SVN server"></a>配置一个SVN server</h2><p>在SVN server新建一个仓库用于EA协作使用，此处为名称为ea<br><img src="/images/Enterprise-Architect-sync-setup/1.jpg" alt="img"></p>
<a id="more"></a>
<h2 id="初次上传EA项目"><a href="#初次上传EA项目" class="headerlink" title="初次上传EA项目"></a>初次上传EA项目</h2><ol>
<li>本地新建一个目录，如d:\UserData\Desktop\协作配置\svn-打卡与考勤管理系统，把上一步新建的仓库检出到本地，此时目录为空，只有.svn配置文件。</li>
<li>在EA项目中，右键项目-&gt;Package Control -&gt;Version Control setting，填入如下信息保存。<br><img src="/images/Enterprise-Architect-sync-setup/2.jpg" alt="img"></li>
<li>右键项目-&gt;Package Control -&gt; AddBranch to Version Control 选中刚才新建的确定即可，此时会在目录中自动生成项目文件。<br><img src="/images/Enterprise-Architect-sync-setup/3.jpg" alt="img"></li>
</ol>
<h2 id="初次下载EA项目"><a href="#初次下载EA项目" class="headerlink" title="初次下载EA项目"></a>初次下载EA项目</h2><ol>
<li>使用SVN客户端工具把仓库中文件检出。</li>
<li>新建空项目，右键-&gt; Package Control-&gt;Import a Model Branch，选择svn目录下的EAB文件，如图<br><img src="/images/Enterprise-Architect-sync-setup/4.jpg" alt="img"><br>参考上一步补充版本控制信息，保存关闭后会自动导入项目。</li>
</ol>
<h2 id="协作编辑"><a href="#协作编辑" class="headerlink" title="协作编辑"></a>协作编辑</h2><p>在要编辑的包上右键-&gt; Package Control里面有协作编辑的功能，需要注意，编辑文件之前需要检出（check out），检出状态其他人不可再检出编辑，编辑完成及时检入（check in）。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>setup</tag>
        <tag>Enterprise Architect</tag>
        <tag>version control</tag>
      </tags>
  </entry>
  <entry>
    <title>关于硬链接、软链接和快捷方式</title>
    <url>/2018/02/symbolic-link.html</url>
    <content><![CDATA[<h1 id="关于硬链接、软链接和快捷方式"><a href="#关于硬链接、软链接和快捷方式" class="headerlink" title="关于硬链接、软链接和快捷方式"></a>关于硬链接、软链接和快捷方式</h1><h2 id="硬链接、软链接"><a href="#硬链接、软链接" class="headerlink" title="硬链接、软链接"></a>硬链接、软链接</h2><p>在UNIX/Linux文件系统中，文件类型分为普通文件、目录文件、设备文件和符号链接等几类。每个文件的存储包含三部分，分别是文件名(filename)、文件说明(inode)、数据块(data block)。打开文件时，通过文件名找到inode id，然后找到inode，根据inode信息找到数据块。</p>
<blockquote>
<p>关于inode，参考<a href="http://www.ruanyifeng.com/blog/2011/12/inode.html" target="_blank" rel="noopener">阮一峰的【理解inode】</a>，其中阐述比较详细，也介绍了软硬链接。</p>
</blockquote>
<p>系统允许不同文件名，对应到同一inode，这就是所谓的<strong>硬链接（hard links）</strong>，可使用<code>ln</code>命令创建。此外，inode中会记录指向自己文件名的个数，方便删除操作，即个数为0才会回收数据块。</p>
<p>而<strong>软链接（symlink）又称符号链接</strong>是一种特殊类型的文件，它指向源文件，甚至指向其他文件系统（远端）的文件，当然所指向的文件也可能被删了，此时类似于空指针，可使用<code>ln -s</code> 命令创建。需要注意，软链接可用相对地址或绝对地址，如果相对地址的软链接，移动之后可能会失效。删除目录软链接时，切记<code>rm smlink</code>而不是<code>rm smlink/</code>后者会</p>
<p><strong>目录不允许创建硬链接</strong>，试想，如果不同目录下的子目录指向同一个目录（inode)，可能会存在子目录中包含父目录的情况，造成目录死循环，如<code>cp</code>等命令会失效。这是因为硬链接太逼真了，无法区分这个是源文件还是硬链接，都是平等的，目前文件系统的设计，无法处理这种情况；但是，<strong>可以对目录建立软链接</strong>，它只是一种特殊类型的文件，里面存储了源文件的路径，在遍历目录时只把它当成一种文件来看待。需要注意的是，在复制目录时，是可以对目录下的文件均复制为硬链接的，<code>cp -al</code>，但这和对目录创建硬链接是有本质区别的。此处可参考如：</p>
<blockquote>
<p><a href="https://unix.stackexchange.com/questions/22394/why-are-hard-links-to-directories-not-allowed-in-unix-linux" target="_blank" rel="noopener">Why are hard links to directories not allowed in UNIX/Linux?</a><br><a href="https://askubuntu.com/questions/210741/why-are-hard-links-not-allowed-for-directories" target="_blank" rel="noopener">Why are hard links not allowed for directories?</a></p>
</blockquote>
<a id="more"></a>

<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><h3 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h3><p>硬链接的使用较少，有一句话如下</p>
<blockquote>
<p>You generally should not use hard links anyway</p>
</blockquote>
<p>也就是不建议使用硬链接，确实应用场景不多，但存在即合理，有时用其拷贝文件防止误删。</p>
<h3 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h3><p>我们通常使用的都是软链接，它是操作系统级别的，大部分情况会应用程序被当成实实在在真实文件/目录一样，以下应用场景皆为这个原理。Linux系统中就存在大量软链接，常见的有</p>
<h4 id="文件软链接"><a href="#文件软链接" class="headerlink" title="文件软链接"></a>文件软链接</h4><ol>
<li><p>比如某包安装目录下的可执行文件，会被软链接到<code>$PATH</code>中，如<code>/usr/bin</code>中</p>
</li>
<li><p>重命名。一些库文件<code>.so</code>等，会通过软链接去掉后面的版本，方便动态编译使用，经常遇到一些开源包编译不通过，缺少相关动态链接库，需要这样加个软链接解决一下，如常见的libz</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">libz.so -&gt; libz.so.1.2.7  </span><br><span class="line">libz.so.1 -&gt; libz.so.1.2.7</span><br><span class="line">libz.so.1.2.7</span><br></pre></td></tr></table></figure></li>
<li><p>将某些无用文件指向 <code>/dev/null</code>，如某日志<code>ln -s /dev/null /data/temp.log</code></p>
</li>
</ol>
<h4 id="目录软链接"><a href="#目录软链接" class="headerlink" title="目录软链接"></a>目录软链接</h4><ol>
<li>分区容量扩容，某分区容量吃紧，可以通过将其他分区的目录软链接过来使用。或者文件移动过去，再软链接回来保持原路径不变，既节省了容量，也免除了路径更改带来的配置修改。</li>
<li>在版本升级中，更改路径名之后，会建立软链接到旧目录兼容旧版本。</li>
<li>将目录的软链接放到网盘目录中，网盘会同步此目录。</li>
</ol>
<h2 id="Windows中建立软链接"><a href="#Windows中建立软链接" class="headerlink" title="Windows中建立软链接"></a>Windows中建立软链接</h2><p>使用<code>mklink</code>在Windows中建立软硬链接，默认给文件建立软链接，如果给目录建立软链接，需要加<code>/D</code>参数，硬链接需要<code>/H</code>参数。此外NTFS格式的磁盘还特有一种Junction，和软链接类似，且只能用于文件夹。</p>
<h2 id="关于复制和剪切软硬链接"><a href="#关于复制和剪切软硬链接" class="headerlink" title="关于复制和剪切软硬链接"></a>关于复制和剪切软硬链接</h2><p>弄清了软硬链接的原理，对复制和粘贴的结果会有一个预期，Linux下复制和剪切均符合预期，<strong>windows下复制软链接时会复制源目标，变为普通文件或目录</strong>，对文件夹Junction的剪切，会使其变为普通文件夹，并且把子文件全剪切过来。</p>
<h2 id="快捷方式"><a href="#快捷方式" class="headerlink" title="快捷方式"></a>快捷方式</h2><p>最后说说快捷方式，它是更高层一点的应用，不同于软硬链接是文件管理和操作系统层面的东西。Windows环境下，它是一种后缀名为<code>.lnk</code>的普通文件，被系统的桌面环境，资源管理器(explorer.exe)解析。它类似于软链接，但是功能更丰富些，可以增加启动参数，快捷键等。</p>
<p>Linux的桌面系统也有类似Windows快捷方式的东西。如Unity、KDE、GNOME，它们使用<a href="https://www.ibm.com/developerworks/cn/linux/l-cn-dtef/index.html" target="_blank" rel="noopener">Desktop Entry 文件标准</a>来描述程序启动配置信息，后缀为<code>.desktop</code>的文本文件，文本格式如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat goagent-gtk.desktop</span><br><span class="line"><span class="comment">#!/usr/bin/env xdg-open</span></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application</span><br><span class="line">Name=GoAgent GTK</span><br><span class="line">Comment=GoAgent GTK Launcher</span><br><span class="line">Categories=Network;Proxy;</span><br><span class="line">Exec=/usr/bin/env python <span class="string">"/home/zz_zigzag/software/agent/goagent-gtk.py"</span></span><br><span class="line">Icon=/home/zz_zigzag/software/agent/goagent-logo.png</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>统一放在/usr/share/applications下被桌面系统索引。</p>
<h2 id="参考连接-附录"><a href="#参考连接-附录" class="headerlink" title="参考连接|附录"></a>参考连接|附录</h2><blockquote>
<p><a href="https://en.wikipedia.org/wiki/Symbolic_link" target="_blank" rel="noopener">Symbolic link</a><br> <a href="https://www.ibm.com/developerworks/cn/linux/l-cn-hardandsymb-links/index.html" target="_blank" rel="noopener">理解 Linux 的硬链接与软链接</a><br><a href="http://www.binarythink.net/2013/06/windows-link/" target="_blank" rel="noopener">Windows的四种链接方式</a><br><a href="http://www.ruanyifeng.com/blog/2011/12/inode.html" target="_blank" rel="noopener">阮一峰的【理解inode】</a><br><a href="http://blog.csdn.net/xiaokang123456kao/article/details/74171875" target="_blank" rel="noopener">深入理解操作系统原理之文件系统</a></p>
</blockquote>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Linux</tag>
        <tag>file</tag>
      </tags>
  </entry>
  <entry>
    <title>最后一次总结正则表达式（RegExp）</title>
    <url>/2018/02/RegExp.html</url>
    <content><![CDATA[<h1 id="最后一次总结正则表达式（RegExp）"><a href="#最后一次总结正则表达式（RegExp）" class="headerlink" title="最后一次总结正则表达式（RegExp）"></a>最后一次总结正则表达式（RegExp）</h1><p>正则很强大，但有时候就是不知道如何用它，或想不起来用它，之前写过简单的<a href="https://notes.zz-zigzag.com/2016/04/regexp-grammar-introduction">RegExp 常用语法</a>，这次把语法再简单复习一遍，并努力的描述了正则的应用场景，再加上几个练习以加深印象，希望是自己最后一次总结正则。</p>
<a id="more"></a>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h3><table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>?</td>
<td>0或1次</td>
</tr>
<tr>
<td>+</td>
<td>1次或多次</td>
</tr>
<tr>
<td>*</td>
<td>0次或多次</td>
</tr>
<tr>
<td>{n,m}</td>
<td>n-m次</td>
</tr>
<tr>
<td>{n,}</td>
<td>n次或更多</td>
</tr>
<tr>
<td>{n}</td>
<td>n次</td>
</tr>
</tbody></table>
<h3 id="预定义类"><a href="#预定义类" class="headerlink" title="预定义类"></a>预定义类</h3><table>
<thead>
<tr>
<th>字符</th>
<th>等价类</th>
</tr>
</thead>
<tbody><tr>
<td>.</td>
<td>[^\n]</td>
</tr>
<tr>
<td>\d</td>
<td>[0-9]</td>
</tr>
<tr>
<td>\s</td>
<td>[ \f\n\r\t\v]</td>
</tr>
<tr>
<td>\S</td>
<td>[^ \f\n\r\t\v]</td>
</tr>
<tr>
<td>\w</td>
<td>[a-zA-Z_0-9]</td>
</tr>
<tr>
<td>\W</td>
<td>[^a-zA-Z_0-9]</td>
</tr>
</tbody></table>
<h3 id="边界"><a href="#边界" class="headerlink" title="边界"></a>边界</h3><p>并没有实际匹配任何字符，只是单纯匹配边界</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>^</td>
<td>开始</td>
</tr>
<tr>
<td>$</td>
<td>结尾</td>
</tr>
<tr>
<td>\b</td>
<td>单词开始或结束</td>
</tr>
<tr>
<td>\B</td>
<td>非单词开始或结束</td>
</tr>
</tbody></table>
<h3 id="贪婪"><a href="#贪婪" class="headerlink" title="贪婪"></a>贪婪</h3><p>正则表达式默认贪婪模式，在量词后面加<code>?</code>可启用非贪婪模式。</p>
<h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><ul>
<li>将量词作用于子表达式，如(zz_zigzag){2}</li>
<li>(?:exp)，会忽略该分组，不会匹配组号</li>
</ul>
<h4 id="后向引用"><a href="#后向引用" class="headerlink" title="后向引用"></a>后向引用</h4><p><code>\b(\w+)\b\s+\1\b</code>，可匹配<code>he he</code>这样的字符串，<code>\1</code>指的是分组1匹配的内容</p>
<h4 id="反向引用"><a href="#反向引用" class="headerlink" title="反向引用"></a>反向引用</h4><p>相比于后向引用的<code>\1</code>，在替换时，<code>$1</code>指的是分组1匹配的内容</p>
<h3 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h3><ul>
<li>exp(?=assert)，如\w(?=\d)，意为后面有一个数字的单词字符。</li>
<li>exp(?!assert)，如\w(?!\d)，意为后面无一个数字的单词字符。</li>
<li>(?&lt;=assert)exp</li>
<li>(?&lt;!assert)exp</li>
</ul>
<h3 id="使用时常用"><a href="#使用时常用" class="headerlink" title="使用时常用"></a>使用时常用</h3><table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>g</td>
<td>globle</td>
</tr>
<tr>
<td>i</td>
<td>ignore case</td>
</tr>
<tr>
<td>m</td>
<td>multiline</td>
</tr>
</tbody></table>
<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>本质上均为匹配</p>
<ol>
<li>校验，通常为全词匹配，校验输入等。<ul>
<li>如邮箱，中文姓名，身份证，日期，手机号，IP地址，小数金额等</li>
</ul>
</li>
<li>查找或提取特定字符串，爬虫常用<ul>
<li>提取网页中图片（img标签），超链接（href标签）等</li>
</ul>
</li>
<li>替换，新增或删除<ul>
<li>删除注释，见练习3</li>
<li>新增，见练习1</li>
</ul>
</li>
<li>判断（特殊校验，使用断言）<ul>
<li>判断密码强度</li>
</ul>
</li>
</ol>
<h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><ol>
<li>数字格式化，1234567890 -&gt; 1,234,567,890。<code>\B(?=(\d{3})+$)</code>替换为<code>&quot;,&quot;</code>，<code>\B</code>待替换的内容——边界。加后置断言，当且紧跟3的倍数个数字——<code>(\d{3})+</code>。</li>
<li>trim函数实现，即去掉字符串左右的空白字符。<code>(^\s*)|(\s*$)</code>替换为<code>&quot;&quot;</code></li>
<li>删除注释<ol>
<li>HTML，<code>&lt;!--(.*?)--&gt;</code></li>
<li>C/JAVA: <code>((?&lt;!:)\/\/.*)|(\/*(.\s)*?\*\/)</code><ul>
<li><code>(?&lt;!:)</code>排除前面包含:的情况，防止<code>http://</code>的情况</li>
<li>替换//和/**/</li>
</ul>
</li>
</ol>
</li>
<li>判断素数（奇技淫巧，装B用，性能和可读性没优势） <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function isPrime(num) &#123;</span><br><span class="line">    return !&#x2F;^1?$|^(11+?)\1+$&#x2F;.test(Array(num+1).join(&#39;1&#39;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>密码校验，要求包括字母，数字，特殊字符（_#$%等）<br> <code>^(?=.*\d)(?=.*[a-zA-Z])(?=.*[\W\_]).{8,16}$</code></li>
</ol>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><blockquote>
<ol>
<li><a href="http://www.regular-expressions.info/" target="_blank" rel="noopener">http://www.regular-expressions.info/</a> 类似官方</li>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">http://deerchao.net/tutorials/regex/regex.htm</a> 中文教程</li>
<li><a href="http://www.jb51.net/tools/regex_test.htm" target="_blank" rel="noopener">http://www.jb51.net/tools/regex_test.htm</a> 速查表</li>
<li><a href="https://www.cheatography.com/davechild/cheat-sheets/regular-expressions/" target="_blank" rel="noopener">https://www.cheatography.com/davechild/cheat-sheets/regular-expressions/</a> cheatsheet速查</li>
</ol>
</blockquote>
<h3 id="调试工具"><a href="#调试工具" class="headerlink" title="调试工具"></a>调试工具</h3><blockquote>
<ol>
<li><a href="https://www.debuggex.com/" target="_blank" rel="noopener">https://www.debuggex.com/</a> 最好用，但经常访问不到或服务出错</li>
<li><a href="https://regex101.com/" target="_blank" rel="noopener">https://regex101.com/</a> </li>
<li><a href="https://regexper.com/" target="_blank" rel="noopener">https://regexper.com/</a> 只是解析表达式，不能测试匹配，可本地化</li>
<li><a href="https://regexr.com/" target="_blank" rel="noopener">https://regexr.com/</a> 只是JS解析器</li>
</ol>
</blockquote>
<h3 id="常用正则"><a href="#常用正则" class="headerlink" title="常用正则"></a>常用正则</h3><blockquote>
<ol>
<li><a href="https://www.jianshu.com/p/e7bb97218946" target="_blank" rel="noopener">https://www.jianshu.com/p/e7bb97218946</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>CheatSheet</tag>
        <tag>RegExp</tag>
      </tags>
  </entry>
  <entry>
    <title>使用微信聊天记录统计信息</title>
    <url>/2017/09/wechat-db.html</url>
    <content><![CDATA[<h1 id="使用微信聊天记录统计信息"><a href="#使用微信聊天记录统计信息" class="headerlink" title="使用微信聊天记录统计信息"></a>使用微信聊天记录统计信息</h1><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>在公司食堂吃饭，由于每张饭卡每月需要缴纳150管理费，所以大家为了省钱几个或十几人共用一张饭卡，以此省钱。多人公用饭卡，这就涉及到一个记账的问题。充值需要记录，每人花费多少也要记录。</p>
<p>一种方案是，设计信息系统，大家吃完后自行记录，B/S或APP或文件，但多少有些不方便，容易忘记，造成坏账众多。后来找到简便易行之法——利用微信群，大家吃完后发送数字即可，除了记账，大家还可以互相监督，减少坏账。期间也想过微信公众号，类似桌游助手那种思路，或者小程序肯定也可以。但开发工作量较大，所有就一直用微信群做了。</p>
<p>但微信群统计有一个缺点，月末统计每人的花费比较麻烦。目前只能是，聊天记录按人筛选，然后手工输入到excel统计。这显然太麻烦了，一定要想个办法。</p>
<a id="more"></a>

<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>只要能导出聊天记录，就可以很简单的实现统计分析。但是偏偏微信的聊天记录好像不能导出文本或其他什么形式用于程序处理，所以此法不通。</p>
<p>另一种思路是读取微信PC端或移动端的本地数据库，直接统计。PC端不包含所有聊天记录，但微信移动端是会接受所以消息的，所以要拿到移动端的本地数据库，然后做一些统计即可。</p>
<h2 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h2><h3 id="获取数据库文件"><a href="#获取数据库文件" class="headerlink" title="获取数据库文件"></a>获取数据库文件</h3><p>借助谷歌，已经有人逆向微信APP，拿到本地数据库。</p>
<p>详情参照知乎的回答</p>
<blockquote>
<p><a href="https://www.zhihu.com/question/19924224" target="_blank" rel="noopener">https://www.zhihu.com/question/19924224</a></p>
</blockquote>
<p>这里简述一下，需要root的手机，拿到<code>/data/data/com.tencent.mm/MicroMsg/一个长串/EnMicroMsg.db</code>，文件为加密的，密钥为<code>md5(IMEI+UIN)</code>的前7位，手机序列号IMEI通常可在设置-&gt;关于中获得，或拨号键盘*#06#。我这里为IMEI1，UIN为用户信息号，可在<code>/data/data/com.tencent.mm/shared_prefs/system_config_prefs.xml</code>中获得，文件中default_uid的value即是。</p>
<h3 id="解密sqlite-database"><a href="#解密sqlite-database" class="headerlink" title="解密sqlite database"></a>解密sqlite database</h3><p>微信使用了<a href="https://github.com/sqlcipher/sqlcipher" target="_blank" rel="noopener">sqlcipher</a>做得加密，看来sqlcipher常用于安卓端sqlite数据库加密。</p>
<p>最初原本想在PC端引入sqlcipher的包连接db文件，后来发现sqlcipher主要是用于安卓应用，没找到普通java项目可用的库，于是作罢。</p>
<p>又了解到sqlcipher用了AES256做得加密，刚要手写AES解密，发现JDK自带AES为128位的，如若想用，还得下载额外的包，期间还去看过<a href="https://github.com/sqlcipher/sqlcipher" target="_blank" rel="noopener">sqlcipher</a>的加密部分的源码，后来想到AES还分不同类型，这样成功的几率不高呀，于是也作罢。</p>
<p>解铃还须系铃人，还是用sqlchipher来解密吧，安装和命令参照了<a href="https://luowei.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93/sqlite-encrypt-with-sqlcipher.html" target="_blank" rel="noopener">这篇</a>和<a href="http://caiyao.name/2016/08/17/linux%E4%BD%BF%E7%94%A8sqlcipher%E8%A7%A3%E5%AF%86sqlite/" target="_blank" rel="noopener">这篇</a>，多谢分享。</p>
<h4 id="安装sqlcipher"><a href="#安装sqlcipher" class="headerlink" title="安装sqlcipher"></a>安装sqlcipher</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install sqlcipher</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip -q sqlcipher-master.zip  </span><br><span class="line"><span class="built_in">cd</span> sqlcipher-master  </span><br><span class="line">sudo apt install openssl libssl-dev tcl tk sqlite3</span><br><span class="line">./configure --<span class="built_in">enable</span>-tempstore=yes CFLAGS=<span class="string">"-DSQLITE_HAS_CODEC"</span> LDFLAGS=<span class="string">"-lcrypto"</span></span><br><span class="line">make</span><br><span class="line">./sqlcipher</span><br></pre></td></tr></table></figure>
<h4 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h4><p>使用上一步得到的密钥，如key = ‘1234567’。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./sqlcipher EnMicroMsg.db</span><br><span class="line">sqlite&gt; PRAGMA key = <span class="string">'1234567'</span>;</span><br><span class="line">sqlite&gt; PRAGMA cipher_use_hmac = off;</span><br><span class="line">sqlite&gt; PRAGMA kdf_iter = 4000;</span><br><span class="line">sqlite&gt; ATTACH DATABASE <span class="string">'wechat.db'</span> AS wechat KEY <span class="string">''</span>;</span><br><span class="line">sqlite&gt; SELECT sqlcipher_export(<span class="string">'wechat'</span>);</span><br><span class="line">sqlite&gt; DETACH DATABASE wechat;</span><br></pre></td></tr></table></figure>
<p>或者一句话直接执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlcipher EnMicroMsg.db <span class="string">'PRAGMA key = "1234567"; PRAGMA cipher_use_hmac = off; PRAGMA kdf_iter = 4000; ATTACH DATABASE "wechat.db" AS wechat KEY "";SELECT sqlcipher_export("wechat");DETACH DATABASE wechat;'</span></span><br></pre></td></tr></table></figure>
<p> 即可得到普通未加密的wechat.db。<br>其中<code>PRAGMA cipher_use_hmac = off; PRAGMA kdf_iter = 4000;</code>可用<code>PRAGMA cipher_migrate;</code>代替。使用后者，会改变原文件，如<code>sqlcipher EnMicroMsg.db &#39;PRAGMA key = &quot;1234567&quot;; PRAGMA cipher_migrate; &#39;</code>，执行完后可使用<code>DB Browser for SQLite</code>输入密钥打开，然后菜单栏-&gt;文件-&gt;设置加密，密码为空即可清除密码。</p>
<h3 id="了解数据库结构"><a href="#了解数据库结构" class="headerlink" title="了解数据库结构"></a>了解数据库结构</h3><p>使用Browser打开数据库文件，大致浏览了一下表结构和数据，这里主要使用三个表：</p>
<ol>
<li>rcontact，通讯录表</li>
<li>chatroom，群聊表</li>
<li>message，聊天记录表</li>
</ol>
<p>message中每条记录即为一条聊天消息，包含着聊天对象<code>talker</code>，如果为群聊，message.talker=chatroom.chatroomname，message.content中存储形式为：”群成员wxid:\n内容”。</p>
<h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><p>编码过程比较容易，统计聊天记录会按照正则表达式匹配，这里要求群成员，饭费消息为单独一个数值。</p>
<p>具体代码见</p>
<blockquote>
<p><a href="https://github.com/zz-zigzag/wechat-db-parser" target="_blank" rel="noopener">https://github.com/zz-zigzag/wechat-db-parser</a></p>
</blockquote>
<p>由于程序较小，为实现方便舍弃了一些编码规则，比如函数的可重入性等，这里仅供参考。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>WeChat</tag>
        <tag>SQLite</tag>
        <tag>APP</tag>
        <tag>widget</tag>
      </tags>
  </entry>
  <entry>
    <title>SSH高级用法</title>
    <url>/2017/08/ssh-advanced-usage.html</url>
    <content><![CDATA[<h1 id="SSH高级用法"><a href="#SSH高级用法" class="headerlink" title="SSH高级用法"></a>SSH高级用法</h1><p>之前介绍过<a href="/2016/04/SSH-simple-manual.html">SSH入门使用</a>，现总结一些高级用法，主要包括以下三部分：反向代理、正向代理、代理上网。</p>
<a id="more"></a>

<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>以上三个使用功能分别使用SSH的<code>-R -L -D</code>功能</p>
<h3 id="SSH代理功能常用的几个参数"><a href="#SSH代理功能常用的几个参数" class="headerlink" title="SSH代理功能常用的几个参数"></a>SSH代理功能常用的几个参数</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-C 压缩所有数据</span></span><br><span class="line"><span class="deletion">-q 静默模式</span></span><br><span class="line"><span class="deletion">-T 不占用shell</span></span><br><span class="line"><span class="deletion">-f 后台执行</span></span><br><span class="line"><span class="deletion">-n 重定向stdin到/dev/null (-f用时推荐)</span></span><br><span class="line"><span class="deletion">-N 不执行远程指令</span></span><br></pre></td></tr></table></figure>
<p>如果登录出现异常，可使用<code>-vvv</code>显示调试信息。</p>
<h3 id="服务端设置"><a href="#服务端设置" class="headerlink" title="服务端设置"></a>服务端设置</h3><p>编辑<code>/etc/ssh/sshd_config</code></p>
<ul>
<li><code>GatewayPorts yes</code>可以在反向代理时服务端监听所有IP<code>0.0.0.0</code>而不是只有本机<code>127.0.0.1</code>。</li>
<li><code>ClientAliveInterval 60</code>每60秒给客户端发送心跳，<code>ClientAliveCountMax 3</code>超过三次不响应则关闭连接。</li>
<li>确保<code>GSSAPIAuthentication no</code>GSS认证方式关闭和<code>UseDNS no</code>DNS反向查询关闭，此设置可提高SSH登录的响应速度，确保<code>PasswordAuthentication yes</code>密码认证打开（通常默认公钥认证也为打开）。</li>
</ul>
<h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p>ssh client能访问到的所有服务（包括局域网和本机），通过ssh连接映射到ssh server的端口上去。示例</p>
<ul>
<li><code>ssh -CqTfnN -R 80:localhost:80 user@ssh_server</code> 将本机的80端口映射到服务端80端口</li>
<li><code>ssh -CqTfnN -R 8080:192.168.1.190:80 user@ssh_server</code> 将本局域网192.168.1.190的80端口映射到服务端8080端口</li>
</ul>
<p>如果ssh server在公网，可内网的服务映射到公网上去。<br>如将本机的远程桌面端口3389反向代理到公网，将内网HPC的SSH端口22代理到公网。</p>
<h2 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h2><p>将ssh server能访问到的服务（包括局域网和本机），映射到ssh client的端口。<br>示例 <code>ssh -CqTfnN -L 5901:vnc_server:5901 user@ssh_server</code> 将局域网vnc_server的5901端口映射为本机的5901端口，由于vnc服务通常未加密，使用ssh也可加强通讯安全。需要注意此时去<code>netstat</code>中查看，会发现本机存在<code>127.0.0.1:5901</code>的监听，并不是<code>0.0.0.0:5901</code>，这意味着只能本机访问。如果其他机器也需访问本地转发要使用<code>GatewayPorts</code>关键字，增加<code>-g</code>参数即可。</p>
<h2 id="代理上网"><a href="#代理上网" class="headerlink" title="代理上网"></a>代理上网</h2><p>常见的SSH代理上网，使用方法：<code>ssh -CqTfnN -D 1080 user@ssh_server</code>，本机开放1080端口，可以在Internet选项中设置代理服务器地址为<code>127.0.0.1:1080</code>即可，或使用Chrome的<code>SwitchyOmega</code>插件配置根据网址决定是否使用代理。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>只要ssh server端或client端能访问的服务均可通过ssh端口代理被双方网络中的终端访问，而且所有连接均为加密。要注意的是，需长期保持连接来维持转发功能，一旦网络不稳定则掉线，所以必要时可配置守护进程，如果用于代理上网，这也是相比于shadowsocks的劣势。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>SSH</tag>
        <tag>break</tag>
      </tags>
  </entry>
  <entry>
    <title>Redmine和Hmailserver安装配置</title>
    <url>/2017/07/Bitnami-Redmine-and-Hmailserver.html</url>
    <content><![CDATA[<h1 id="Redmine和Hmailserver安装配置"><a href="#Redmine和Hmailserver安装配置" class="headerlink" title="Redmine和Hmailserver安装配置"></a>Redmine和Hmailserver安装配置</h1><p>部署环境：windows server 2016</p>
<h2 id="Redmine"><a href="#Redmine" class="headerlink" title="Redmine"></a>Redmine</h2><p><a href="https://bitnami.com/stack/redmine" target="_blank" rel="noopener">Redmine</a>是一个项目管理工具，可下载带敏捷插件的版本<a href="https://bitnami.com/stack/redmine-plus-agile" target="_blank" rel="noopener">Redmine+Agile</a>，可以下载<code>Installer</code>或<code>Virtual Machines</code>，也可以在浏览器中查看DEMO。</p>
<a id="more"></a>
<p><img src="/images/redmine.png" alt=""><br>安装都很简单，期间会设置一个管理员账号和密码，此密码也为mysql中root的密码。windows版本的配置文件在<code>\apps\redmineplusagile\htdocs\config</code></p>
<h3 id="配置邮件服务"><a href="#配置邮件服务" class="headerlink" title="配置邮件服务"></a>配置邮件服务</h3><p>基本不用过多的配置，这里只是配置了邮箱，打开<code>configuration.yml</code>，邮箱配置如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">email_delivery:</span></span><br><span class="line">  <span class="attr">delivery_method:</span> <span class="string">:async_smtp</span></span><br><span class="line">  <span class="attr">async_smtp_settings:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="number">192.168</span><span class="number">.99</span><span class="number">.190</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">25</span></span><br><span class="line">    <span class="attr">domain:</span> <span class="string">puhua.com</span></span><br><span class="line">    <span class="attr">authentication:</span> <span class="string">:login</span></span><br><span class="line">    <span class="attr">user_name:</span> <span class="string">redmine@puhua.com</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">redmine</span></span><br></pre></td></tr></table></figure>

<h2 id="Hmailserver"><a href="#Hmailserver" class="headerlink" title="Hmailserver"></a><a href="https://www.hmailserver.com/" target="_blank" rel="noopener">Hmailserver</a></h2><p>Windows环境下的邮箱服务器，软件非常小，需要<code>.net framework 3.5</code>的支持。由于面的步骤安装了mysql，这里也顺便使用mysql做数据库。添加账号也很简单，然后在foxmail中配置客户端设置stmp/imap地址即可收发地址。如图配置了<code>zhangxiaodong@puhua.com</code><br><img src="/images/stmp_imap.jpg" alt=""></p>
<p>需要注意，其他邮箱如qq，发送此邮箱名称是不能收到的，因为没有配置<code>puhua.com</code>的MX记录，qq邮箱服务器找不到@puhua.com的邮箱服务器</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>setup</tag>
        <tag>mail</tag>
      </tags>
  </entry>
  <entry>
    <title>使用apache配置代理服务</title>
    <url>/2017/05/apache-for-proxy.html</url>
    <content><![CDATA[<h1 id="使用apache配置代理服务"><a href="#使用apache配置代理服务" class="headerlink" title="使用apache配置代理服务"></a>使用apache配置代理服务</h1><p><a href="http://httpd.apache.org/docs/current/platform/windows.html" target="_blank" rel="noopener">官网</a>只提供源码，但是官网给出了<a href="http://www.apachehaus.com/cgi-bin/download.plx" target="_blank" rel="noopener">网址可以下载二进制文件</a></p>
<p>修改配置文件<code>httpd.conf</code>打开如下模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LoadModule access_compat_module modules&#x2F;mod_access_compat.so</span><br><span class="line">LoadModule proxy_module modules&#x2F;mod_proxy.so</span><br><span class="line">LoadModule proxy_connect_module modules&#x2F;mod_proxy_connect.so</span><br><span class="line">LoadModule proxy_http_module modules&#x2F;mod_proxy_http.so</span><br><span class="line">LoadModule proxy_ftp_module modules&#x2F;mod_proxy_ftp.so</span><br></pre></td></tr></table></figure>
<p>修改端口及黑名单白名单</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Listen 8089</span><br><span class="line">ProxyRequests   On</span><br><span class="line">&lt;Proxy *&gt;</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">#    Deny from 127.0.0.1</span><br><span class="line">&lt;&#x2F;Proxy&gt;</span><br></pre></td></tr></table></figure>
<p>此时可启动<code>httpd.exe</code>，完毕，可使用自带Internet代理或SwitchOmega测试。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>setup</tag>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>获取CA证书，并安装SSL到Tomcat</title>
    <url>/2017/04/Get-CA-Install-SSL-certificate-to-Tomcat.html</url>
    <content><![CDATA[<h1 id="获取CA证书，并且手动安装SSL到Tomcat上"><a href="#获取CA证书，并且手动安装SSL到Tomcat上" class="headerlink" title="获取CA证书，并且手动安装SSL到Tomcat上"></a>获取CA证书，并且手动安装SSL到Tomcat上</h1><h2 id="申请CA证书"><a href="#申请CA证书" class="headerlink" title="申请CA证书"></a>申请CA证书</h2><p>在<a href="https://www.freehao123.com" target="_blank" rel="noopener">免费资源部落</a>中搜索SSL或者证书字样，会得到好多文章。</p>
<blockquote>
<p><a href="https://www.freehao123.com/gogetssl-comodo-ssl-rapidssl/" target="_blank" rel="noopener">https://www.freehao123.com/gogetssl-comodo-ssl-rapidssl/</a><br><a href="https://www.freehao123.com/free-ssl-paihang/" target="_blank" rel="noopener">https://www.freehao123.com/free-ssl-paihang/</a></p>
</blockquote>
<p>阿里云也已经提供了<a href="https://common-buy.aliyun.com/?commodityCode=cas#/buy" target="_blank" rel="noopener">免费的证书服务</a>。不过我没有申请下来，本以为几分钟搞定，但是过了一天还没有，可能是哪里没弄好吧。<a href="https://www.qcloud.com/product/ssl" target="_blank" rel="noopener">腾讯云</a>也有类似的服务，几分钟就申请下来了，为期一年的。</p>
<a id="more"></a>

<p>后来找到<a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a>，是免费中最有名的了。它官网中提供了脚本工具<a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a>来适配各种系统的各种web server。一些有名的应用，如WordPress面板中也集成了自动申请及续期服务（证书默认3个月期限，需要续期），国产<a href="https://www.upyun.com/" target="_blank" rel="noopener">又拍云</a>也支持自动申请及续期。我没有用VPS，这次只是为了测试证书，想便捷的拿到证书文件，所以直接在本地配置Tomcat。</p>
<p>使用了<a href="https://www.sslforfree.com/" target="_blank" rel="noopener">SSL For Free</a>拿到<a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a>颁发的证书，<a href="https://gethttpsforfree.com/" target="_blank" rel="noopener">https://gethttpsforfree.com/</a> 也是类似的服务。</p>
<p>步骤很简单，只需要验证一下域名的所有权即可。我在域名解析中加了TXT记录，得到证书文件，包括三个文件: <code>private.key certificate.crt ca_bundle.crt</code>。此证书有效域名为<code>xiaodong.site</code>和<code>www.xiaodong.site</code>。</p>
<h2 id="配置Tomcat"><a href="#配置Tomcat" class="headerlink" title="配置Tomcat"></a>配置Tomcat</h2><h3 id="添加域名到Tomcat"><a href="#添加域名到Tomcat" class="headerlink" title="添加域名到Tomcat"></a>添加域名到Tomcat</h3><p>首先添加域名，编辑配置文件<code>server.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"www.xiaodong.site"</span>  <span class="attr">appBase</span>=<span class="string">"webapps"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">""</span> <span class="attr">docBase</span>=<span class="string">"D:\public"</span> <span class="attr">reloadable</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>顺便把8080改为80，把<code>www.xiaodong.site</code>添加A记录到本机。如果是家庭局域网，可把A记录指向自己公网IP，然后可在路由配置虚拟服务器端口转发到本机。如果没权限配也没关系，这里只是测试一下。</p>
<p>现在，本地访问<code>www.xiaodong.site</code>可以打开网站了。如下图：<img src="/images/http.jpg" alt=""></p>
<h3 id="配置Tomcat-SSL"><a href="#配置Tomcat-SSL" class="headerlink" title="配置Tomcat SSL"></a>配置Tomcat SSL</h3><p>这里顺便介绍下，如果不是CA颁发的证书，怎样给Tomcat开启SSL。</p>
<p>首先本地生成一个证书，用到了JDK的keytool。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成.keystore文件</span></span><br><span class="line">keytool -genkey -<span class="built_in">alias</span> tomcat -keyalg RSA -keypass 111111 -storepass 111111 -keystore test.keystore</span><br><span class="line"><span class="comment"># 根据.keystore文件导出cer证书，Tomcat只需.keystore文件。</span></span><br><span class="line">keytool -<span class="built_in">export</span> -trustcacerts -<span class="built_in">alias</span> tomcat -file server.cer -keystore test.keystore -storepass 111111</span><br></pre></td></tr></table></figure>
<p>然后编辑配置文件<code>server.xml</code>，把SSL打开，证书指向刚才生成的文件，密码为上一步配置的密码。顺便把8443全改为https默认的443，</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8443"</span> <span class="attr">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">SSLEnabled</span>=<span class="string">"true"</span> <span class="attr">scheme</span>=<span class="string">"https"</span> <span class="attr">secure</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">clientAuth</span>=<span class="string">"false"</span> <span class="attr">sslProtocol</span>=<span class="string">"TLS"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">keystoreFile</span>=<span class="string">"D:\tomcat_center\tomcat-test\keystore\test.keystore"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">keystorePass</span>=<span class="string">"111111"</span>  /&gt;</span></span><br></pre></td></tr></table></figure>
<p>此时重启Tomcat，访问页面如图：<br><img src="/images/https_notsafe.jpg" alt=""></p>
<p>接下来使用刚刚申请的CA证书，来制作配置Tomcat，需要使用到openssl工具。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl pkcs12 -<span class="built_in">export</span> -out certificate.pfx -inkey private.key -<span class="keyword">in</span> certificate.crt -certfile ca_bundle.crt</span><br><span class="line">keytool -importkeystore -srckeystore certificate.pfx -srcstorepass 111111 -srcstoretype pkcs12 -destkeystore keystore.jks -deststoretype jks -deststorepass 111111</span><br></pre></td></tr></table></figure>
<p>把配置文件改了，刚才的test.keystore替换为keystore.jks。重启Tomcat，访问页面如图：<br><img src="/images/https_safe.jpg" alt=""></p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>HTTPS</tag>
        <tag>CA</tag>
        <tag>SSL</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>VNC远程连接Linux</title>
    <url>/2017/04/Note-of-VNC-server.html</url>
    <content><![CDATA[<h1 id="VNC远程连接Linux"><a href="#VNC远程连接Linux" class="headerlink" title="VNC远程连接Linux"></a>VNC远程连接Linux</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>首先确保Linux服务器上具备桌面环境，可以是Xfce、KDE或者Gnome等都可以。此外还需要服务器上装有VNC server。可使用<code>rpm -qa | grep vnc</code>或<code>dpkg -l | grep vnc</code>检验。如果没有可以<code>yum -y install tigervnc-server</code>安装。本次使用环境为Redhat 5.5 &amp; Gnome。 需要注意的是，VNC协议的数据是明文传输的，存在密码泄露的风险，不过可以使用<code>SSH -L</code>进行端口转发。参照<a href="/2017/08/ssh-advanced-usage.html">SSH高级用法</a></p>
<a id="more"></a>

<h2 id="配置Server"><a href="#配置Server" class="headerlink" title="配置Server"></a>配置Server</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 当前用户第一次创建服务，会在HOME目录下创建`.vnc`目录存放配置，会提示输入访问密码。</span></span><br><span class="line"><span class="comment"># 接下来再输入，会一次创建第2个，第3个等。两个用户的:1是不可以同时启动的，会提示端口和进程冲突。</span></span><br><span class="line">vncserver</span><br><span class="line"><span class="comment"># 启动之后，会生成~/.vnc目录，密码存储在passwd文件中，启动脚本为xstartup.</span></span><br><span class="line"><span class="comment"># 打开其中的注释`exec /etc/X12/xinit/xinitrc`，重启服务后，下次远程访问会进入到桌面。</span></span><br><span class="line"><span class="comment"># 启动配置1</span></span><br><span class="line">vncserver :1</span><br><span class="line"><span class="comment"># 关闭配置1</span></span><br><span class="line">vncserver -<span class="built_in">kill</span> :1</span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">vncpasswd</span><br><span class="line"><span class="comment"># 设置vncserver开机启动</span></span><br><span class="line">chkconfig vncserver on</span><br></pre></td></tr></table></figure>

<p>编辑配置文件如下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/vncservers</span></span><br><span class="line">VNCSERVERS=<span class="string">"1:root 2:weblogic"</span></span><br><span class="line">VNCSERVERARGS[1]=<span class="string">"-geometry 800x600"</span></span><br><span class="line">VNCSERVERARGS[2]=<span class="string">"-geometry 800x600 -alwaysshared"</span></span><br><span class="line"><span class="comment"># -alwaysshared标识可以允许多终端登录，共享屏幕</span></span><br></pre></td></tr></table></figure>

<p>/etc/init.d/vncserver start启动，会一次启动root用户下的配置1和weblogic用户下的配置2</p>
<h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><p>使用<a href="https://www.realvnc.com/download/viewer/" target="_blank" rel="noopener">VNC Viewer</a>，远程连接目标主机。地址可以为<code>IP:1</code>或<code>IP:5901</code>两种形式，示例如下： ![](/images/VNC Viewer.jpg)</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>setup</tag>
        <tag>VNC</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle数据库常用工具及常见问题</title>
    <url>/2017/02/Oracle-database-commonly-used.html</url>
    <content><![CDATA[<h1 id="Oracle数据库常用工具及常见问题"><a href="#Oracle数据库常用工具及常见问题" class="headerlink" title="Oracle数据库常用工具及常见问题"></a>Oracle数据库常用工具及常见问题</h1><p>这里总结记录我对于Oracle数据库的一些新知的东西。</p>
<a id="more"></a>

<h2 id="常用自带工具及维护命令"><a href="#常用自带工具及维护命令" class="headerlink" title="常用自带工具及维护命令"></a>常用自带工具及维护命令</h2><ul>
<li>sqlplus<ul>
<li>终端界面与数据库交互的工具，可执行sqlplus命令和sql语句。<code>startup</code>: 启动数据库，<code>shutdown immediate</code>：停止数据库。</li>
<li>本地登录数据库管理员，通过系统层面用户验证：<code>sqlplus / as sysdba</code></li>
</ul>
</li>
<li>dbca: 数据库实例管理工具，功能有创建、配置、删除数据库实例等。</li>
<li>lsnrctl: 监听控制 <code>[start|stop|status|reload]</code></li>
<li>exp: 数据库导出，如 <code>exp user/password file=$HOME/backup.dmp</code></li>
<li>imp: 数据库导入，如 <code>imp user/password file=$HOME/backup.dmp full=y</code></li>
<li>netca: 配置监听服务，默认1521</li>
<li>emctl: em console管理    [TBD Detail]</li>
<li>emca:    </li>
</ul>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol>
<li>进入sqlplus之后，不能使用上下键以及退格键。<br>首先在Linux上安装<a href="https://github.com/hanslub42/rlwrap" target="_blank" rel="noopener">rlwrap</a>，这个程序本身是个Shell。然后，在<code>.bashrc</code>文件中添加别名命令，<code>alias sqlplus=&quot;rlwrap sqlplus&quot;</code>和<code>alias rman=&quot;rlwrap rman&quot;</code>。</li>
</ol>
<hr>
<p>持续更新……</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>PLSQL Developer安装配置</title>
    <url>/2017/01/PLSQL-Developer-setting.html</url>
    <content><![CDATA[<h1 id="PL-SQL-Developer安装配置"><a href="#PL-SQL-Developer安装配置" class="headerlink" title="PL/SQL Developer安装配置"></a>PL/SQL Developer安装配置</h1><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p>需Oracle 11g已安装在服务器，前些天写过<a href="/2017/01/Install-oracle-11g-on-Centos7.html">CentOS 7.2 远程安装 Oracle 11g</a>。</p>
<ul>
<li><a href="http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html" target="_blank" rel="noopener">Oracle客户端下载</a>: instantclient-basic-win-x86-64-11.2.0.1.0.zip</li>
<li><a href="https://www.allroundautomations.com/plsqldev.html" target="_blank" rel="noopener">PLSQL Developer</a> (同时根据需要下载对应的语言包): plsqldev1200x64.msi</li>
</ul>
<a id="more"></a>
<h2 id="安装及配置"><a href="#安装及配置" class="headerlink" title="安装及配置"></a>安装及配置</h2><ol>
<li>安装PLSQL: <code>plsqldev1200x64.msi</code></li>
<li>安装中文包:<code>chinese.exe</code>。</li>
</ol>
<h2 id="Oracle客户端"><a href="#Oracle客户端" class="headerlink" title="Oracle客户端"></a>Oracle客户端</h2><p>将<code>instantclient_11_2</code>，解压至一目录下。然后配置Oralce连接。打开PLSQL，配置首选项-&gt;Oracle-&gt;连接，Oracle主目录和OCI库分别设置，举例如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\PLSQL Developer 12\instantclient_11_2</span><br><span class="line">D:\PLSQL Developer 12\instantclient_11_2\oci.dll</span><br></pre></td></tr></table></figure>
<p>配置数据库连接有两种方式，一种是直接在登录页面指定，如<code>192.168.1.100:1521/abc</code>。<br>另一种方式是使用<code>tnsnames.ora</code>，创建<code>instantclient_11_2\network\admin\tnsnames.ora</code>文件。<code>tnsnames.ora</code>内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">本地实例名1 &#x3D;</span><br><span class="line">(DESCRIPTION &#x3D;</span><br><span class="line">  (ADDRESS_LIST &#x3D;</span><br><span class="line">    (ADDRESS &#x3D; (PROTOCOL &#x3D; TCP)(HOST &#x3D; 远程数据库IP)(PORT &#x3D; 端口号))</span><br><span class="line">  )</span><br><span class="line">  (CONNECT_DATA &#x3D;</span><br><span class="line">    (SERVICE_NAME &#x3D; 远程数据库实例名)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">本地实例名2 &#x3D;</span><br><span class="line">(DESCRIPTION &#x3D;</span><br><span class="line">  (ADDRESS_LIST &#x3D;</span><br><span class="line">    (ADDRESS &#x3D; (PROTOCOL &#x3D; TCP)(HOST &#x3D; 远程数据库IP)(PORT &#x3D; 端口号))</span><br><span class="line">  )</span><br><span class="line">  (CONNECT_DATA &#x3D;</span><br><span class="line">    (SERVICE_NAME &#x3D; 远程数据库实例名)</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>其中MY_LAB为本地实例名，lab为远程数据库实例名。</p>
<h2 id="PLSQL-Developer"><a href="#PLSQL-Developer" class="headerlink" title="PLSQL Developer"></a>PLSQL Developer</h2><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>首选项-&gt;用户界面-&gt;字体，可设置浏览器，表格，编辑器的字体。我个人把前两设置为雅黑，编辑器为Consolas，均放大了一些字号。</p>
<h3 id="编码方式"><a href="#编码方式" class="headerlink" title="编码方式"></a>编码方式</h3><p>通常情况下，客户端PLSQL需要和服务端数据库的编码方式一致，否则可能会导致中文显示或编辑异常。<br>连接成功后，执行<code>select userenv(&#39;language&#39;) from dual;</code>可查看服务端字符集，比如为<code>AMERICAN_AMERICA.AL32UTF8</code>。在本地设置环境变量<code>NLS_LANG</code>也为<code>AMERICAN_AMERICA.AL32UTF8</code>即可。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>software</tag>
        <tag>database</tag>
        <tag>setup</tag>
        <tag>Oracle</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 7.2 远程安装 Oracle 11g</title>
    <url>/2017/01/Install-oracle-11g-on-Centos7.html</url>
    <content><![CDATA[<h1 id="CentOS-7-2-远程安装-Oracle-11g-及常用操作"><a href="#CentOS-7-2-远程安装-Oracle-11g-及常用操作" class="headerlink" title="CentOS 7.2 远程安装 Oracle 11g 及常用操作"></a>CentOS 7.2 远程安装 Oracle 11g 及常用操作</h1><p>近期从零安装Oracle，网上查看了许多教程，包括网友总结的和<a href="https://docs.oracle.com/cd/E11882_01/install.112/e24326/toc.htm" target="_blank" rel="noopener">官方文档</a>，这里总结了一些必备的配置和常见错误处理，以便日后查看。</p>
<a id="more"></a>

<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="安装文件"><a href="#安装文件" class="headerlink" title="安装文件"></a>安装文件</h3><ul>
<li>OS:<ul>
<li><a href="https://www.centos.org/download/" target="_blank" rel="noopener">CentOS 7</a>，安装可参考: <a href="/2016/11/How-to-install-a-CentOS.html">CentOS系统安装配置</a> 和 <a href="/2016/11/Disk-partition-table-format.html">磁盘分区格式与系统引导方式</a></li>
</ul>
</li>
<li><a href="http://www.oracle.com/technetwork/cn/database/enterprise-edition/downloads/index.html" target="_blank" rel="noopener">Oracle 11g</a>:<ul>
<li>linux.x64_11gR2_database_1of2.zip</li>
<li>linux.x64_11gR2_database_2of2.zip</li>
</ul>
</li>
</ul>
<h3 id="配置用户（以root登陆）"><a href="#配置用户（以root登陆）" class="headerlink" title="配置用户（以root登陆）"></a>配置用户（以root登陆）</h3><ul>
<li>添加用户组<ul>
<li>Oracle 清单组(一般为oinstall: <code>groupadd oinstall</code>)<br>Oracle 所有者，拥有Oracle中央清单（oraInventory）的写入权限。</li>
<li>数据库管理员(OSDBA，一般为dba: <code>groupadd dba</code>)<br>OSDBA组的成员通过操作系统身份验证，使用SQL以SYSDBA身份链接到ORACLE实例。该组成员可执行关键的数据库管理任务，如创建数据库、启动和关闭实例。SYSDBA 系统权限甚至在数据库未打开时也允许访问数据库实例。对此权限的控制完全超出了数据库本身的范围。不要混淆SYSDBA系统权限与数据库角色DBA。DBA角色不包括SYSDBA或SYSOPER系统权限。</li>
<li>数据库操作员(OSOPER，一般为oper: <code>groupadd oper</code>)<br>OSOPER组的成员，使用SQL以SYSOPER连接一个实例。这个成员拥有一组有限的数据库管理权限，如管理和运行备份。SYSOPER系统权限甚至也允许在未打开数据库的情况下访问实例。要使用该组，需选择Advanced安装类型来配置，否则可不建此用户组。</li>
</ul>
</li>
<li>添加用户<ul>
<li>新建：<code>useradd -g oinstall -G dba oracle</code></li>
<li>修改密码：<code>passwd oracle</code></li>
</ul>
</li>
</ul>
<h3 id="配置内核参数和资源限制"><a href="#配置内核参数和资源限制" class="headerlink" title="配置内核参数和资源限制"></a>配置内核参数和资源限制</h3><p>这一步可以省略，因为安装过程中Oracle会检测到这些配置不符合要求，会生成一个脚本，用root执行即可配置完毕。</p>
<ul>
<li><p>内核参数修改<code>/etc/sysctl.conf</code>。增加如下参数，并立即生效<code>sysctl -p</code></p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">fs.aio-max-nr</span> = <span class="number">1048576</span></span><br><span class="line"><span class="attr">fs.file-max</span> = <span class="number">6815744</span></span><br><span class="line"><span class="attr">kernel.shmall</span> = <span class="number">2097152</span></span><br><span class="line"><span class="attr">kernel.shmmax</span> = <span class="number">536870912</span></span><br><span class="line"><span class="attr">kernel.shmmni</span> = <span class="number">4096</span></span><br><span class="line"><span class="attr">kernel.sem</span> = <span class="number">250</span> <span class="number">32000</span> <span class="number">100</span> <span class="number">128</span></span><br><span class="line"><span class="attr">net.ipv4.ip_local_port_range</span> = <span class="number">9000</span> <span class="number">65500</span></span><br><span class="line"><span class="attr">net.core.rmem_default</span> = <span class="number">262144</span></span><br><span class="line"><span class="attr">net.core.rmem_max</span> = <span class="number">4194304</span></span><br><span class="line"><span class="attr">net.core.wmem_default</span> = <span class="number">262144</span></span><br><span class="line"><span class="attr">net.core.wmem_max</span> = <span class="number">1048576</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>资源限制修改<code>/etc/security/limits.conf</code>。增加如下参数，提高oracle用户的资源限制。分别是进程数、打开的文件数、堆栈、驻留内存上限。soft为软规则，超过限制警告，hard为硬规则，不允许超过。</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">oracle </span>soft nproc <span class="number">2047</span></span><br><span class="line"><span class="keyword">oracle </span>hard nproc <span class="number">16384</span></span><br><span class="line"><span class="keyword">oracle </span>soft nofile <span class="number">4096</span></span><br><span class="line"><span class="keyword">oracle </span>hard nofile <span class="number">65536</span></span><br><span class="line"><span class="keyword">oracle </span>soft stack unlimited</span><br><span class="line"><span class="keyword">oracle </span>hard stack unlimited</span><br><span class="line"><span class="keyword">oracle </span>soft memlock unlimited</span><br><span class="line"><span class="keyword">oracle </span>hard memlock unlimited</span><br></pre></td></tr></table></figure>
<h3 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h3><p>后续数据库安装时，会检测依赖包，此处可先行安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install binutils compat-libcap1  compat-libstdc++-33 compat-libstdc++-33*.i686 elfutils-libelf-devel gcc gcc-c++ glibc*.i686 glibc glibc-devel glibc-devel*.i686 ksh libgcc*.i686 libgcc libstdc++ libstdc++*.i686 libstdc++-devel libstdc++-devel*.i686 libaio libaio*.i686 libaio-devel libaio-devel*.i686 make sysstat unixODBC unixODBC*.i686 unixODBC-devel unixODBC-devel*.i686 libXp</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="配置oracle用户环境变量"><a href="#配置oracle用户环境变量" class="headerlink" title="配置oracle用户环境变量"></a>配置oracle用户环境变量</h3><p>可修改<code>~/.bash_profile</code>或<code>~/.bashrc</code>(zsh为<code>~/.zshrc</code>)。前者在用户第一次登录时执行一次，后者在该用户每次终端启用时均执行。使用<code>source 文件名</code>可立即生效。添加如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">umask</span> 022	<span class="comment"># 创建文件默认去除022权限，对应755</span></span><br><span class="line"><span class="built_in">export</span> ORACLE_BASE=<span class="variable">$HOME</span>/app	<span class="comment"># 安装路径</span></span><br><span class="line"><span class="built_in">export</span> ORACLE_SID=lab	<span class="comment"># ORACLE实例名</span></span><br><span class="line"><span class="built_in">export</span> TMP=/tmp</span><br></pre></td></tr></table></figure>
<h3 id="远程安装配置"><a href="#远程安装配置" class="headerlink" title="远程安装配置"></a>远程安装配置</h3><ul>
<li>远程安装时，需要SSH转发图形界面。检查<code>/etc/ssh/sshd_config</code>的配置<code>X11Forwarding yes</code>，并<code>service sshd restart</code>。</li>
<li>本地Windows可用Xmanager监听图形界面，远程服务器需有Xserver：<code>yum install xorg-x11-server-util xorg-x11-apps xorg-x11-xauth xterm</code>，可能还需要<code>xhost +</code>添加图形界面访问权限，运行<code>xclock</code>观察是否出现图形时钟进行测试。</li>
<li>如使用Xshell登录，则可在连接属性“隧道”中选择转发X11连接到Xmanager，此设置会自动配置oracle用户<code>DISPLAY</code>环境变量。若使用ssh命令连接，可手动添加如下环境变量。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># xServer</span></span><br><span class="line"><span class="built_in">export</span> DISPLAY=192.168.0.1:0.0 <span class="comment"># IP为本地的IP，即，显示窗口的IP。</span></span><br><span class="line"><span class="built_in">export</span> LANG=c	<span class="comment"># 设置语言为ASCII环境，如窗口显示乱码可加此环境变量。</span></span><br></pre></td></tr></table></figure></li>
<li>在运行<code>runInstaller</code>安装时可能需要手动打开Xmanager进行监听。</li>
</ul>
<h2 id="安装Oracle-database（以oracle用户登录）"><a href="#安装Oracle-database（以oracle用户登录）" class="headerlink" title="安装Oracle database（以oracle用户登录）"></a>安装Oracle database（以oracle用户登录）</h2><ol>
<li>把两个ZIP文件，并解压至同一文件夹，如<code>/opt/oracle/</code>。运行<code>runInstaller</code>可弹出图形窗口进行安装，根据需要选择安装选项。</li>
<li>安装时，installer会推荐默认的安装地址，如11g，通常为<code>$ORACLE_BASE/11g</code>，后续可添加如下环境变量将一系列oracle命令加到PATH中去。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/11g</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$ORACLE_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></li>
<li>中途有一步是检查依赖包。即使进行了上述依赖包安装，还可能提示一些i386的包不存在，但CentOS的32bit包都是i686的，此处可忽略这些。</li>
<li>目前还有一个问题就是提示，内核参数<code>semmni</code>期望设置为128，但在<code>/etc/sysctl.conf</code>中添加<code>kernel.semmni = 128</code>中后，<code>sysctl -p</code>提示找不到semmni文件，所以目前也忽略了此错误，未加<code>semmni</code>。</li>
</ol>
<h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>后续滚动条阶段时，遇到了两个编译错误，查看日志得到详细信息。</p>
<h4 id="ins-ctx-mk-报错-undefined-reference-to-memcpy-GLIBC-2-14"><a href="#ins-ctx-mk-报错-undefined-reference-to-memcpy-GLIBC-2-14" class="headerlink" title="ins_ctx.mk 报错 undefined reference to memcpy@GLIBC_2.14"></a>ins_ctx.mk 报错 undefined reference to <a href="mailto:memcpy@GLIBC_2.14">memcpy@GLIBC_2.14</a></h4><p>首先查看/usr/lib64/libc.a文件是否存在，如不存在可<code>yum install glibc-static</code>下载。然后修改出错的makefile文件（<code>$ORACLE_HOME/ctx/lib/ins_ctx.mk</code>），在<code>$(LINK_CTXHX) $(CTXHXOBJ) $(INSO_LINK)</code>前面添加<code>-static /usr/lib64/libc.a</code>，即采用静态链接，可解决此错误，点击retry通过。</p>
<h4 id="ins-emagent-mk-报错-Error-in-invoking-target-‘agent-nmhs’"><a href="#ins-emagent-mk-报错-Error-in-invoking-target-‘agent-nmhs’" class="headerlink" title="ins_emagent.mk 报错 Error in invoking target ‘agent nmhs’"></a>ins_emagent.mk 报错 Error in invoking target ‘agent nmhs’</h4><p>修改出错的makefile文件，在<code>$(MK_EMAGENT_NMECTL)</code>之后加上<code>-lnnz11</code>链接libnnz11.so库，点击retry即可通过。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>SSH</tag>
        <tag>software</tag>
        <tag>database</tag>
        <tag>setup</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>我希望我对你来说是独占的</title>
    <url>/2017/01/See-You-Again.html</url>
    <content><![CDATA[<h1 id="我希望我对你来说是独占的"><a href="#我希望我对你来说是独占的" class="headerlink" title="我希望我对你来说是独占的"></a>我希望我对你来说是独占的</h1><blockquote>
<p><strong><em><a href="http://music.163.com/#/song?id=30953009" target="_blank" rel="noopener">See You Again</a></em></strong><br><strong><em>It’s been a long day without you my friend.<br>And I’ll tell you all about it when I see you again.<br>We’ve come a long way from where we began.<br>Oh I’ll tell you all about it when I see you again.<br>When I see you again.</em></strong></p>
</blockquote>
<a id="more"></a>

<iframe width="100%" scrolling="no" height="96" frameborder="no" src="//kiwi6.com/tracks/widget/5u75azrmo2?autostart=true&show_artist=true"></iframe>
---

<p>自己从小学一直读到硕士研究生，每个阶段都会有几个重要的好友。<br>小学6年，初中3年，高中3年，大学4年，研究生3年。<br>一共上了19年学，真如老爸所说，再上学就老了，而我也早已按讷不住自己。</p>
<p>每个阶段的自己都有不一样，但不变的是一直在成长。<br>成长是需要经历的，一些事情会催促着快快成长。<br>印象深刻的有高三，大四，研三那些努力奋斗的日子。</p>
<p>成长的同时，也越来越懂得珍惜，珍惜每个阶段的好朋友。<br>好朋友，是能使对方愉悦的人，即喜欢与之相处，喜欢与之交谈。<br>可天下没有不散之筵席，但情分不会因距离远和联系少而疏远。<br>借用普希金的诗：</p>
<blockquote>
<p><strong><em>一切都是瞬息<br>一切都将会过去<br>而过去了的<br>就会成为亲切的怀恋</em></strong></p>
</blockquote>
<p>我渴望和怀念在一起的日子。而“一起”，是一个神圣的词汇。<br>如果去现场看过比赛或演唱会，经历过不同人因共同愿景而聚集的一起，就会明白其中的伟大。<br>而确实存在那么3年或4年的求学生涯，我们一起生活。<br>一起学习。探讨，互帮互助。一起升学，一起毕业，一起学术攻坚。<br>一起娱乐。逛街，看电影。还记得这件衣服和谁一起买的，这个电影和谁一起看的。<br>一起旅行。火车、飞机和景区。一起旅行很能快速增进情感——陌生变为熟悉。<br>每每结束一阶段生活，都会封存一些美好时光。<br>更幸运的是，这些时光有你相伴。</p>
<p>我已经开始下一阶段的征程。<br>而你，我的老朋友，许久未见，十分想念。<br>与你重逢之时，我会敞开心扉倾尽所有。</p>
<p>我想你了，就会给你发信和打电话。<br>我还想你，就会去找你。<br>我希望我对你来说是独占的，在你想我的时候。</p>
]]></content>
      <categories>
        <category>日常随笔</category>
      </categories>
      <tags>
        <tag>open myself</tag>
      </tags>
  </entry>
  <entry>
    <title>初学Node.js，探索和练习</title>
    <url>/2016/12/NodeJS-explore-and-practice.html</url>
    <content><![CDATA[<h1 id="初学Node-js，探索和练习"><a href="#初学Node-js，探索和练习" class="headerlink" title="初学Node.js，探索和练习"></a>初学Node.js，探索和练习</h1><h2 id="fs模块"><a href="#fs模块" class="headerlink" title="fs模块"></a>fs模块</h2><p>理解javascript程序的异步运行是一个难点，由于这个特点会出现一些不同于其他语言的实现方式。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">var</span> rs = fs.createReadStream(<span class="string">'1.rar'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line">rs.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    count++;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(count);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>对于一个5669K的文件，调用了89次data事件。</p>
<hr>
<p>持续更新……</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>explore</tag>
        <tag>practice</tag>
      </tags>
  </entry>
  <entry>
    <title>Git常用操作详解</title>
    <url>/2016/12/Git-common-commands.html</url>
    <content><![CDATA[<blockquote>
<p><a href="http://www.ruanyifeng.com/blog/2014/06/git_remote.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2014/06/git_remote.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>收藏链接</category>
      </categories>
      <tags>
        <tag>commonly used</tag>
        <tag>command</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>生物信息学_网址书签备份</title>
    <url>/2016/12/bioinformatics-bookmark.html</url>
    <content><![CDATA[<h1 id="生物信息学-网址书签备份（可导入Chrome）"><a href="#生物信息学-网址书签备份（可导入Chrome）" class="headerlink" title="生物信息学_网址书签备份（可导入Chrome）"></a><strong><a href="/files/bioinformatics_bookmark.zip">生物信息学_网址书签备份（可导入Chrome）</a></strong></h1><a id="more"></a>
<p>
<A HREF="http://www.plob.org/" target="_blank" rel="noopener" ADD_DATE="1462867127">PLOB</A>
<A HREF="http://genome.ucsc.edu/index.html" target="_blank" rel="noopener" ADD_DATE="1462867127">UCSC Genome Browser Home</A>
<H3 ADD_DATE="1479591748" LAST_MODIFIED="1479591748">文献</H3>
<A HREF="http://pubmed.cn/" target="_blank" rel="noopener" ADD_DATE="1462867127">PubMed 文献数据库 - 提供生物医学方面的论文文献搜索服务</A>
<A HREF="http://www.chinapubmed.net/" target="_blank" rel="noopener" ADD_DATE="1462867127">中文PubMed|生物医学|摘要翻译</A>
<A HREF="http://www.medsci.cn/sci/" target="_blank" rel="noopener" ADD_DATE="1462867127">2014年(2013年度)SCI影响因子查询-MedSci.cn</A>
<A HREF="http://www.ncbi.nlm.nih.gov/pubmed" target="_blank" rel="noopener" ADD_DATE="1462867127">Home - PubMed - NCBI</A>
<A HREF="http://www.biomedcentral.com/" target="_blank" rel="noopener" ADD_DATE="1462867127">BioMed Central | The Open Access Publisher</A>
<A HREF="http://biorxiv.org/" target="_blank" rel="noopener" ADD_DATE="1462867127">bioRxiv.org - the preprint server for Biology</A>
<H3 ADD_DATE="1479591748" LAST_MODIFIED="1479591748">博客</H3>
<A HREF="http://liuwei441005.blog.163.com/" target="_blank" rel="noopener" ADD_DATE="1462867127">阿飞与安达</A>
<A HREF="http://boyun.sh.cn/bio/" target="_blank" rel="noopener" ADD_DATE="1462867127">博耘生物信息</A>
<A HREF="http://blog.qiubio.com:8080/" target="_blank" rel="noopener" ADD_DATE="1462867127">糗世界 ← 欢迎来到糗糗的世界</A>
<A HREF="http://www.pineapplechina.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">生物信息初学者 R2B | Road to Bioinfomatic</A>
<A HREF="http://www.stbioinf.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">STbioinf&#39;s Homepage | YellowTree</A>
<A HREF="http://blog.sina.com.cn/tiehan1990" target="_blank" rel="noopener" ADD_DATE="1462867128">铁汉1990_新浪博客</A>
<A HREF="http://azaleasays.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">azalea says</A>
<A HREF="http://bio.rusaer.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">Bio Rusaer</A>
<A HREF="http://yixf.name/" target="_blank" rel="noopener" ADD_DATE="1462867128">Yixf&#39;s blog | Face to Fate in Dream.</A>
<A HREF="http://left.subtree.org/" target="_blank" rel="noopener" ADD_DATE="1462867128">A Sourceful of Secrets | Andrew E. Bruno</A>
<A HREF="http://www.chenlianfu.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">宠辱不惊，一心问学！ | 文章丢失不少，疑与域名过期有关!</A>
<A HREF="http://www.liucheng.name/bioinformatics/" target="_blank" rel="noopener" ADD_DATE="1462867128">生物信息学教程收藏∷柳城博客</A>
<A HREF="http://blog.sina.com.cn/u/5056118076" target="_blank" rel="noopener" ADD_DATE="1462867128">葡萄糖_新浪博客</A>
<A HREF="http://www.zilhua.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">生物日志|鸣一道 | 非常感谢我的一些好友和我一起共同打理这个博客，让博客有了更多的精彩内容。明年再做一些详细的介绍。</A>
<A HREF="http://yanshouyu.blog.163.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">静渊的学习日志 - 静渊 - 网易博客</A>
<A HREF="http://blog.sina.com.cn/u/1959508200" target="_blank" rel="noopener" ADD_DATE="1462867128">子梨_新浪博客</A>
<A HREF="http://www.dengfeilong.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">邓飞龙-生物信息学学习者博客-生物信息学、python、可视化、大数据处理笔记分享平台</A>
<A HREF="http://www.ncrna.net/" target="_blank" rel="noopener" ADD_DATE="1462867128">沉默是金 | Bioinformatics</A>
<A HREF="http://fhqdddddd.blog.163.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">云之南 - 云之南 - 网易博客</A>
<A HREF="http://1.biolog.sinaapp.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">生物点滴 | Some where only we know!</A>
<A HREF="http://www.zilhua.com/data_visualization" target="_blank" rel="noopener" ADD_DATE="1462867128">数据可视化 | 生物日志|鸣一道</A>
<A HREF="http://davetang.org/" target="_blank" rel="noopener" ADD_DATE="1462867128">davetangdotorg</A>
<A HREF="http://www.iwhgao.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">rabbit gao&#39;s blog</A>
<H3 ADD_DATE="1479591748" LAST_MODIFIED="1479591748">论坛</H3>
<A HREF="http://yunbio.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">云生物 | 生物信息学(Bioinformatics)的快速问答系统</A>
<A HREF="http://www.bioxxx.cn/forum.php" target="_blank" rel="noopener" ADD_DATE="1462867128">最专业的生物信息学研究论坛</A>
<A HREF="http://seqanswers.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">SEQanswers Home</A>
<A HREF="http://www.bioask.net/" target="_blank" rel="noopener" ADD_DATE="1462867128">BioASK</A>
<A HREF="https://www.biostars.org/" target="_blank" rel="noopener" ADD_DATE="1462867128">Latest Posts</A>
<A HREF="http://www.dxy.cn/bbs/index.html" target="_blank" rel="noopener" ADD_DATE="1462867128">丁香园论坛 - 医学.药学.生命科学.科研交流</A>
<A HREF="http://www.seq.cn/portal.php" target="_blank" rel="noopener" ADD_DATE="1462867128">测序中国-专注测序-中国最权威的测序知识社区</A>
<H3 ADD_DATE="1479591748" LAST_MODIFIED="1479591748">数据</H3>
<A HREF="http://www.cngb.org/" target="_blank" rel="noopener" ADD_DATE="1462867128">国家基因库</A>
<A HREF="http://www.1000genomes.org/" target="_blank" rel="noopener" ADD_DATE="1462867128">Home | 1000 Genomes</A>
<A HREF="https://www.ebi.ac.uk/dgva" target="_blank" rel="noopener" ADD_DATE="1462867128">Database of Genomic Variants archive &lt; EMBL-EBI</A>
<A HREF="http://www.ncbi.nlm.nih.gov/dbvar/" target="_blank" rel="noopener" ADD_DATE="1462867128">Home - dbVar - NCBI</A>
<A HREF="http://dgv.tcag.ca/dgv/app/home" target="_blank" rel="noopener" ADD_DATE="1462867128">Database of Genomic Variants</A>
<A HREF="http://www.ncbi.nlm.nih.gov/Traces/study/" target="_blank" rel="noopener" ADD_DATE="1462867128">NCBI :: SRA Run Selector</A>
<A HREF="http://hapmap.ncbi.nlm.nih.gov/" target="_blank" rel="noopener" ADD_DATE="1462867128">HapMap Homepage</A>
<A HREF="http://sra.dnanexus.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">DNAnexus - SRA</A>
<A HREF="http://www.ncbi.nlm.nih.gov/sra" target="_blank" rel="noopener" ADD_DATE="1462867128">Home - SRA - NCBI</A>
<A HREF="http://www.ebi.ac.uk/ena" target="_blank" rel="noopener" ADD_DATE="1462867128">European Nucleotide Archive &lt; EMBL-EBI</A>
<H3 ADD_DATE="1479591748" LAST_MODIFIED="1479591748">门户</H3>
<A HREF="http://www.bbioo.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">生物秀—生物医药门户网站</A>
<A HREF="http://www.bioon.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">生物谷 - 新发现,新技术,新产业 - 生物医药新媒体门户</A>
<A HREF="http://www.biodiscover.com/" target="_blank" rel="noopener" ADD_DATE="1462867128">生物探索-探索生物科技价值的新媒体门户网站</A>
<A HREF="http://www.dxy.cn/" target="_blank" rel="noopener" ADD_DATE="1462867128">丁香园—医学药学生命科学专业网站</A>
<A HREF="http://www.bioon.com.cn/" target="_blank" rel="noopener" ADD_DATE="1462867128">生物在线 - 让科研更便捷 ：生命科学专业网，试剂，仪器，抗体，耗材，书籍，软件在线查询</A>
<H3 ADD_DATE="1479591748" LAST_MODIFIED="1479591748">工具</H3>
<A HREF="https://usegalaxy.org/" target="_blank" rel="noopener" ADD_DATE="1462867128">Galaxy</A>
<A HREF="http://genome.ucsc.edu/cgi-bin/hgLiftOver" target="_blank" rel="noopener" ADD_DATE="1462867128">Lift Genome Annotations</A>
<A HREF="http://www.bio-soft.net/" target="_blank" rel="noopener" ADD_DATE="1462867128">生物软件网-提供生物信息学免费软件和生物信息学、分子生物学图书、图像、视频等资料</A>
<A HREF="http://browser.1000genomes.org/tools.html" target="_blank" rel="noopener" ADD_DATE="1462867128">browser.1000genomes.org/tools.html</A>
<A HREF="https://wiki.gacrc.uga.edu/wiki/Software" target="_blank" rel="noopener" ADD_DATE="1463369585">Software - Research Computing Center Wiki</A>
<p>
<A HREF="http://bioviz.org/igb/index.html" target="_blank" rel="noopener" ADD_DATE="1462867127">BioViz - Home</A>
<A HREF="http://chromozoom.org/" target="_blank" rel="noopener" ADD_DATE="1462867127">Human - ChromoZoom, the interactive genome browser</A>
<A HREF="http://davetang.org/wiki/tiki-index.php" target="_blank" rel="noopener" ADD_DATE="1462867127">Dave&#39;s Wiki | HomePage</A>
<A HREF="https://www.genome.gov/" target="_blank" rel="noopener" ADD_DATE="1462867127">National Human Genome Research Institute (NHGRI) - Homepage</A>
<A HREF="http://omictools.com/" target="_blank" rel="noopener" ADD_DATE="1462867127">A workflow for multi-omic data analysis - OMICtools</A>
<A HREF="http://www.youku.com/playlist_show/id_18697232.html" target="_blank" rel="noopener" ADD_DATE="1462867127">生物信息学 - 专辑 - 优酷视频</A>
<A HREF="http://www.gersteinlab.org/" target="_blank" rel="noopener" ADD_DATE="1462867127">Gerstein Lab</A>
<A HREF="https://genedock.com/joinus/" target="_blank" rel="noopener" ADD_DATE="1462867127">GeneDock</A>
<A HREF="file:///home/zz_zigzag/NGS_Data/%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/FlagExplain.html" ADD_DATE="1462867127">Explain SAM Flags</A>
<A HREF="http://jbrowse.org/" target="_blank" rel="noopener" ADD_DATE="1462867127">JBrowse | A fast, embeddable genome browser built with HTML5 and JavaScript</A>
<A HREF="http://biolinevo.com/" target="_blank" rel="noopener" ADD_DATE="1462867127">世演生信 - 专注于生物信息分析平台</A>]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>bookmark</tag>
      </tags>
  </entry>
  <entry>
    <title>NGS分析介绍系列文章</title>
    <url>/2016/11/NGS-Analysis-Introduction.html</url>
    <content><![CDATA[<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><blockquote>
<ol>
<li><a href="/2016/09/NGS-Analysis-Introduction-I-Preface.html">NGS分析介绍一：前言</a></li>
</ol>
</blockquote>
<ol>
<li><a href="/2016/09/NGS-Analysis-Introduction-II-Environment-and-Skills.html">NGS分析介绍二：运行环境和技能</a><ul>
<li><a href="/2016/04/SSH-simple-manual.html">SSH简易使用</a></li>
<li><a href="/2016/05/Simple-manual-for-HPC-in-BUCT.html">Simple manual for HPC in BUCT</a></li>
</ul>
</li>
<li><a href="/2016/09/Sequence.html">关于测序原理</a></li>
<li><a href="/2016/10/NGS-Database.html">NGS分析常用数据库简介</a><ul>
<li><a href="/2016/05/Simple-manual-for-NGS-database.html">高通量测序及基因组变异数据库的简易使用</a></li>
<li><a href="/2016/05/Download-EBI-and-NCBI-data-by-Aspera.html">使用Aspera下载EBI和NCBI的数据</a></li>
</ul>
</li>
<li><a href="/2016/10/Reference-Genome.html">参考基因组介绍</a></li>
<li><a href="/2016/10/FASTQ-format.html">测序数据格式——FASTQ</a></li>
<li><a href="/2016/11/SAM-format-and-SAMtools.html">SAM文件格式和SAMtools</a><ul>
<li><a href="/2016/11/Related-documentation-of-samtools.html">SAMtools相关官方文档</a></li>
</ul>
</li>
<li><a href="/2016/11/VCF-format.html">VCF格式说明及常用处理</a><ul>
<li><a href="/2016/11/Slicing-genotype-for-individual-in-VCF-data.html">VCF数据处理之——截取个体变异的基因型</a></li>
</ul>
</li>
<li><a href="/2016/11/Recommended-workflows-for-variant-discovery-analysis.html">基因组变异检测的工作流程</a></li>
</ol>
<hr>
<a id="more"></a>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><blockquote>
<ol>
<li><a href="/2016/11/Sequence-alignment.html">序列比对那点事儿</a> （转载）</li>
</ol>
</blockquote>
<ol>
<li><a href="/2016/12/bioinformatics-bookmark.html">生物信息学_书签备份</a></li>
</ol>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>NGS</tag>
      </tags>
  </entry>
  <entry>
    <title>为笔记本添加一块固态硬盘</title>
    <url>/2016/11/Adding-a-SSD-to-PC.html</url>
    <content><![CDATA[<h1 id="为笔记本添加一块固态硬盘"><a href="#为笔记本添加一块固态硬盘" class="headerlink" title="为笔记本添加一块固态硬盘"></a>为笔记本添加一块固态硬盘</h1><p>笔者的电脑型号为联想小新V4000，带光驱。准备入手一块固态硬盘，把原硬盘放到光驱的位置，固态硬盘放到原硬盘的位置。</p>
<a id="more"></a>
<p>首先上网查了一下此型号笔记本光驱口是否支持硬盘接入，有无成功案例。在联想官方论坛中查到有产品经理说此机型光驱电流较小，不推荐接硬盘。但是也在网上查到了一些成功案例。于是乎就在网上买了固态硬盘和硬盘托架。</p>
<p>为了避免重装系统，把原C盘用Ghost做了一个镜像，放到非C盘的位置。然后开始拆机，有些机器比较难拆或怕拆坏的，可上网查一下特定型号的拆机教程。拿下原HDD，把SSD放到那个位置。然后拿下光驱，把HDD固定在光驱硬盘托架上。此时不必把后盖装好，应先检验下HDD是否被识别，防止没装好一会还得全拆开。</p>
<p>启动时，选择启动项，如果可以从原机械硬盘就说明没问题了。一开始此机型并未能正确识别，只是听到开机时机械硬盘在转。后来咨询了下卖家客服，才得知硬盘托架有一个开关，用于支持不通过类型的接入。于是调了一下，果然能识别了。</p>
<p>接着就是恢复系统，进入机械硬盘系统，或者U盘PE，用Ghost恢复到SSD即可。恢复完毕后可能需要修复下启动项。后来想把HDD分区改成GPT的，顺便把原C盘格了合并到D盘去。可改完之后，重启后发现不能识别了。无奈又腾一遍，把机械硬盘，放入原来位置调了下分区表为MBR，又换回去才得以识别（调整托架接口开关也不行，目测托架只识别MBR分区方式）。</p>
<p>使用DiskGenus删除机械硬盘中的C盘，并变为和D盘一样的逻辑分区。然后D盘可直接扩展大小纳入C盘。这里还推荐一个常用的分区工具——分区助手，这个甚至可以实现无损数据合并磁盘（时间长，后台应该是一点点挪文件）。总之配合DG可基本完成所有硬盘操作。</p>
<p>值此，算是弄完了。但是，觉得C盘东西太多了，占了五十多G。最终还是以此为契机，把SSD重格为GPT磁盘，重装了Win10。</p>
<hr>
<h2 id="2016-12-04-补充"><a href="#2016-12-04-补充" class="headerlink" title="2016/12/04 补充"></a>2016/12/04 补充</h2><p>后来发现机械硬盘经常识别不稳定（偶尔识别不出），上网查阅后发现是自带希捷硬盘要求电流较高所致，附<a href="http://club.lenovo.com.cn/thread-1881162-1-1.html" target="_blank" rel="noopener">链接</a>。所以，安装双硬盘还是要事先查好自己型号的案例，再定方案不迟。本机还是这样凑合使用，把常用软件放到固态硬盘上去，机械硬盘当数据盘使用，但偶尔会有卡顿现象。</p>
]]></content>
      <categories>
        <category>总结备份</category>
      </categories>
      <tags>
        <tag>HDD</tag>
        <tag>SSD</tag>
      </tags>
  </entry>
  <entry>
    <title>基因组变异检测的工作流程</title>
    <url>/2016/11/Recommended-workflows-for-variant-discovery-analysis.html</url>
    <content><![CDATA[<h1 id="基因组变异检测的工作流程"><a href="#基因组变异检测的工作流程" class="headerlink" title="基因组变异检测的工作流程"></a>基因组变异检测的工作流程</h1><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>通常得到的测序数据为fastq格式文件。使用BWA将测序数据fastq文件映射（Mapping）到参考基因组fasta文件，得到比对信息数据sam文件，使用SAMtools view: 将sam转化为bam，sort: reads按映射位置排序，index: 对bam文件建立索引。例如，从SRA数据库中下载了一些sra文件。</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sra -&gt; fastq</span></span><br><span class="line">fastq-<span class="keyword">dump</span> --<span class="keyword">split</span>-<span class="number">3</span> $filename</span><br><span class="line"><span class="comment"># Mapping</span></span><br><span class="line">bwa mem -t $thread $ncbi36 $&#123;filename&#125;_1.fastq $&#123;filename&#125;_2.fast<span class="string">q | samtools view -@ $thread -b - |</span> samtools <span class="keyword">sort</span> -@ $thread - $&#123;filename&#125; &amp;&amp; samtools <span class="keyword">index</span> $filename.bam</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>在进行结构变异检测之前，可能还需要几个改善比对质量的步骤。</p>
<ol>
<li>标记扩增测序副本<br>在制备测序文库的过程中，PCR扩增会带来一些测序偏差，所以要尽量去除PCR扩增形成的测序副本（duplicates），使用Picard工具的MarkDuplicates可以去除或标记副本片段。</li>
<li>indel区域重比对<br>由于测序样本中indel的存在，比对时indel附近会出现大量的碱基错配。局部重比对就是将indel区域重新比对，使附近的错误率降到最低。首先使用GATK[47]中的RealignerTargetCreator根据已知indel来生成重比对的区域，然后使用GATK中的IndelRealigner对目标区域进行重比对。</li>
<li>碱基质量重校准<br>将比对信息文件里的碱基质量值重新校准，使得能够更加接近参考序列与真实序列之间错配的概率。使用GATK中的BaseRecalibrator工具进行根据一些已知的区域，生成一个质量校准所需的数据文件，利用GATK中的PrintReads工具将经过质量校准的数据输出。</li>
</ol>
<p>最后，使用各种工具进行变异检测。理论上，得到BAM文件之后就可以用于检测变异了。许多时候，真实数据可以直接下载已经Mapping好的BAM文件。</p>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><blockquote>
<p><strong><em>SAMtools项目组也给出了一个Workflows，建议阅读：<a href="http://www.htslib.org/workflow/" target="_blank" rel="noopener">http://www.htslib.org/workflow/</a></em></strong></p>
</blockquote>
<blockquote>
<p>上述还提到了两个工具<strong><em><a href="https://broadinstitute.github.io/picard/index.html" target="_blank" rel="noopener">Picard</a>，<a href="https://software.broadinstitute.org/gatk/" target="_blank" rel="noopener">Genome Analysis Toolkit</a></em></strong><br><strong><em>GATK也提供了一个Workflows，也建议阅读：<a href="https://software.broadinstitute.org/gatk/best-practices/" target="_blank" rel="noopener">https://software.broadinstitute.org/gatk/best-practices/</a></em></strong><br><img src="https://software.broadinstitute.org/gatk/img/BP_workflow_3.6.png" alt=""></p>
</blockquote>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>workflow</tag>
      </tags>
  </entry>
  <entry>
    <title>序列比对那点事儿</title>
    <url>/2016/11/Sequence-alignment.html</url>
    <content><![CDATA[<blockquote>
<p><a href="http://blog.qiubio.com:8080/archives/2637" target="_blank" rel="noopener">http://blog.qiubio.com:8080/archives/2637</a></p>
</blockquote>
]]></content>
      <categories>
        <category>收藏链接</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title>VCF数据处理之——截取个体变异的基因型</title>
    <url>/2016/11/Slicing-genotype-for-individual-in-VCF-data.html</url>
    <content><![CDATA[<h1 id="VCF数据处理之——截取个体变异的基因型"><a href="#VCF数据处理之——截取个体变异的基因型" class="headerlink" title="VCF数据处理之——截取个体变异的基因型"></a>VCF数据处理之——截取个体变异的基因型</h1><p>我的课题是基因组结构变异检测方面的，所以经常需要需要做一些检测变异的实验。检测完之后需要对结果进行一个性能检验，即用检测结果与基准数据（Benchmark）对比，得到一个精度和敏感度，用此来评价检测工具的性能（Performance）。如果使用已发布的，包含个体基因型的VCF数据作为基准。就需要将个体存在的变异截取出来，用于与检测结果的对比。</p>
<a id="more"></a>
<p>自己针对缺失（deletion）变异VCF文件，做了一个小工具，信息如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Program: vcf_del (format the &lt;deletion&gt; vcf file)</span><br><span class="line">Version: 0.2.7</span><br><span class="line">Contact: zz_zigzag &lt;zz_zigzag@outlook.com&gt;</span><br><span class="line"></span><br><span class="line">Usage:   vcf_del [option] &lt;in.vcf&gt; &lt;out.vcf&gt;</span><br><span class="line"></span><br><span class="line">Options: -f        remove the overlapping deletions</span><br><span class="line">                   and only include the pure deletions.</span><br><span class="line">         -c STRING the chromosome to output(default all).</span><br><span class="line">         -n STRING the sample to output(need -g, default all).</span><br><span class="line">         -i INT    the minimum length for deletions(default 0).</span><br><span class="line"></span><br><span class="line">         -g        output with the genotype of individual.</span><br><span class="line">         -o        only output the genotype of deletion existed</span><br><span class="line">         -s        simple genotype: 0 or 1</span><br></pre></td></tr></table></figure>

<p>该工具，将包含deletion的VCF文件（如果VCF中不是只包含deletion，应首先对VCF进行筛选，如根据SVTYPE=DEL字段筛选为只包含deletion的文件）格式化每一行为<code>chrId   start   end+1   (genotype)</code>的格式。其中缺失变异起始位置即为VCF中的POS字段，而结束位置为INFO字段的END信息。</p>
<p>这里对一些可选参数进行必要说明：</p>
<ul>
<li><strong><em>-f</em></strong>: 去除重叠的缺失变异。通常VCF是按照CHROM和POS对变异进行排列，有时候会存在相邻变异包含重叠的情况，显然这两个变异是不会同时存在于一个个体当中。但是如果根据变异列表来仿真个体，会将变异信息加入到参考序列中以此来仿真个体，这时，上述情况就会出现错误，所以加上这个参数来避免这种情况。此外，这个参数还会去除一些非纯缺失的情况，如ATCC=&gt;AG，这并不是单纯的缺失，显然简化的输出并不能包含这些信息，故也去掉这种情况。</li>
<li><strong><em>-c</em></strong>: 只输出指定染色体的数据。</li>
<li><strong><em>-n</em></strong>: 只输出指定个体的基因型，需要<strong><em>-g</em></strong>参数。</li>
<li><strong><em>-i</em></strong>: 只输出指定长度以上的缺失变异。</li>
<li><strong><em>-g</em></strong>: 输出内容包括变异的基因型。</li>
<li><strong><em>-o</em></strong>: 与<strong><em>-n</em></strong>配合使用，只有当个体存在该变异时，才会输出此变异。用于生成个体的Benchmark变异清单，便于后续与检测结果相比较来统计精度和准确率。</li>
<li><strong><em>-s</em></strong>: 简化输出的基因型，通常基因型为0/0时，输出为0；其他情况输出为1，即存在此变异。该功能可为后续统计变异在个体中出现的频率做铺垫。</li>
</ul>
<p>下面是一些使用举例：</p>
<ol>
<li>获取指定个体，指定染色体所存在的变异。<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">vcf_del -g -o -c $chrId -n $sample $vcf_file $vcf_file.<span class="keyword">format</span></span><br></pre></td></tr></table></figure></li>
<li>获取指定染色体的变异对应所有给她的基因型。<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">vcf_del -g -c $chrId $vcf_file $vcf_file.<span class="keyword">format</span></span><br></pre></td></tr></table></figure></li>
<li>获取指定个体的变异存在情况。<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">vcf_del -gs -n $sample $vcf_file $vcf_file.<span class="keyword">format</span></span><br></pre></td></tr></table></figure></li>
<li>获取20号染色体上长度大于100的变异列表，去除不纯的变异及存在重叠区域的变异。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vcf_del -<span class="keyword">fi</span> 100 -n 20 <span class="variable">$vcf_file</span> <span class="variable">$vcf_file</span>.format</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>NGS</tag>
        <tag>data</tag>
        <tag>VCF</tag>
        <tag>slice</tag>
        <tag>genotype</tag>
      </tags>
  </entry>
  <entry>
    <title>VCF格式说明及常用处理</title>
    <url>/2016/11/VCF-format.html</url>
    <content><![CDATA[<h1 id="VCF格式说明及常用处理"><a href="#VCF格式说明及常用处理" class="headerlink" title="VCF格式说明及常用处理"></a>VCF格式说明及常用处理</h1><p>目前，基因组变异数据通常使用VCF（Variant Call Format）格式以文本形式进行保存，如千人基因组计划或其他机构发布的验证过的变异，此外，许多变异检测工具也通常使用VCF来保存变异检测结果。这里只对VCF格式进行简要的说明（<strong><em><a href="http://samtools.github.io/hts-specs/" target="_blank" rel="noopener">详细官方文档见这里</a></em></strong>），下图为一示例VCF格式文件。</p>
<a id="more"></a>
<p><img src="/images/vcf.png" alt=""></p>
<h2 id="VCF（Variant-Call-Format）文件格式"><a href="#VCF（Variant-Call-Format）文件格式" class="headerlink" title="VCF（Variant Call Format）文件格式"></a>VCF（Variant Call Format）文件格式</h2><p>同SAM格式一样，VCF格式文件也分为两部分，头部注释和主体两部分。注释信息行以“#”开头，包括该文件的基本信息，如VCF的版本、生成日期、参考基因组等，注释信息的最后一行说明主体部分每个字段的含义，相当于表头的作用。主体部分每行为一个变异，变异的详细信息保存在以“TAB”分割的多个字段中，主要字段包括：</p>
<ol>
<li>CHROM：存在变异的染色体号。</li>
<li>POS：变异在参考序列上的起始坐标。</li>
<li>ID：变异的ID。</li>
<li>REF：参考序列的碱基组成。</li>
<li>ALT：对应变异的碱基组成。</li>
<li>INFO：附加信息，可包含多个以“;”分割的字段，如END表示变异结束位置，SVLEN表示变异长度，SVMETHOD表示检测方法等。</li>
<li>基因型区域：依次列出表头中个体此变异的基因型。</li>
</ol>
<h2 id="VCF常用处理"><a href="#VCF常用处理" class="headerlink" title="VCF常用处理"></a>VCF常用处理</h2><p>通常我们得到VCF文件之后，可能还需要进一步处理，包括分析，过滤和切片等操作。</p>
<p>使用SAMtools的内置工具<strong><a href="http://www.htslib.org/doc/bcftools.html" target="_blank" rel="noopener">BCFtools</a></strong>可以完成针对VCF格式文件以及其压缩格式BCF文件的许多操作，包括统计（stat)、过滤（filter)以及merge/cat等操作。类似的工具还有<strong><a href="https://vcftools.github.io/" target="_blank" rel="noopener">VCFtools</a></strong>。</p>
<p>上述两个工具是功能比较齐全的。如果<strong><a href="http://www.internationalgenome.org/search/?q=slice" target="_blank" rel="noopener">在千人基因组网站上搜索“slice”</a></strong>会得到如何获取数据文件（BAM/VCF）的子集。其中BAM文件可以使用<code>samtools view -h bamUrl/bamPath chrId:start-end</code>进行切片，配合<code>-f/-F</code>进行过滤筛选操作。VCF文件可以使用<strong><a href="http://www.htslib.org/doc/tabix.html" target="_blank" rel="noopener">tabix</a></strong>进行数据切片，类似命令如<code>tabix -h vcf.gzUrl/vcf.gzPath chrId:start-end | grep ……</code>。当然这些切片操作可能需要事先对文件建立索引，以便于查找染色体位置。除了命令行之外，其基因浏览器上也提供了一个<a href="http://browser.1000genomes.org/Homo_sapiens/UserData/SelectSlice" target="_blank" rel="noopener">Data Slicer</a>，只是觉得不如命令行好用一些。其实VCF数据文件就是一个文本文件，许多操作可以直接通过grep/awk/sed等文本处理工具实现。</p>
<p>除了简单的过滤切片之外，还有一个处理需求就是截取对应个体存在变异的基因型，用于把Released VCF数据作为Benchmark用于验证变异检测性能，参照<strong><a href="/2016/11/Slicing-genotype-for-individual-in-VCF-data.html">VCF数据处理之——截取个体变异的基因型</a></strong>。</p>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>NGS</tag>
        <tag>data</tag>
        <tag>format</tag>
        <tag>VCF</tag>
      </tags>
  </entry>
  <entry>
    <title>SAMtools相关官方文档</title>
    <url>/2016/11/Related-documentation-of-samtools.html</url>
    <content><![CDATA[<h1 id="SAMtools相关文档"><a href="#SAMtools相关文档" class="headerlink" title="SAMtools相关文档"></a>SAMtools相关文档</h1><p><strong>SAMtools组织和代码库（Samtools organisation and repositories）</strong><br>GitHub: <a href="https://github.com/samtools" target="_blank" rel="noopener">https://github.com/samtools</a><br>Documentation: <a href="http://samtools.github.io/" target="_blank" rel="noopener">http://samtools.github.io/</a></p>
<h2 id="文件格式说明（File-format-specifications）"><a href="#文件格式说明（File-format-specifications）" class="headerlink" title="文件格式说明（File-format specifications）"></a>文件格式说明（File-format specifications）</h2><p>包括比对文件格式SAM、BAM和CRAM，以及变异数据格式（VCF和BCF），此外还包括一些其他格式。<br>GitHub: <a href="https://github.com/samtools/hts-specs" target="_blank" rel="noopener">https://github.com/samtools/hts-specs</a><br>Documentation: <a href="http://samtools.github.io/hts-specs/" target="_blank" rel="noopener">http://samtools.github.io/hts-specs/</a></p>
<a id="more"></a>

<h2 id="High-throughput-sequencing-tools"><a href="#High-throughput-sequencing-tools" class="headerlink" title="High-throughput sequencing tools"></a><a href="http://www.htslib.org/" target="_blank" rel="noopener">High-throughput sequencing tools</a></h2><p>包括了<a href="http://www.htslib.org/doc" target="_blank" rel="noopener">SAMtools/BCFtools/HTSlib/Tabix/bgzip</a>的说明文档，尤其<a href="http://www.htslib.org/doc/samtools.html" target="_blank" rel="noopener">SAMtools</a>的文档可能会经常查阅。<br>安装说明常见于各个GitHub项目的README和INSTALL文件，或者<a href="http://www.htslib.org/download/" target="_blank" rel="noopener">http://www.htslib.org/download/</a> 以及</p>
<h2 id="C-API-to-HTSfile"><a href="#C-API-to-HTSfile" class="headerlink" title="C API to HTSfile"></a>C API to HTSfile</h2><p>GitHub: <a href="https://github.com/samtools/htslib" target="_blank" rel="noopener">https://github.com/samtools/htslib</a><br>Documentation: <a href="http://www.htslib.org/doc/htsfile.html" target="_blank" rel="noopener">http://www.htslib.org/doc/htsfile.html</a></p>
<h2 id="Java-API-to-HTSfile"><a href="#Java-API-to-HTSfile" class="headerlink" title="Java API to HTSfile"></a>Java API to HTSfile</h2><p>GitHub: <a href="https://github.com/samtools/htsjdk" target="_blank" rel="noopener">https://github.com/samtools/htsjdk</a><br>Documentation: <a href="http://samtools.github.io/htsjdk/" target="_blank" rel="noopener">http://samtools.github.io/htsjdk/</a></p>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>software</tag>
        <tag>NGS</tag>
        <tag>SAMtools</tag>
        <tag>documentation</tag>
        <tag>API</tag>
      </tags>
  </entry>
  <entry>
    <title>SAM文件格式和SAMtools</title>
    <url>/2016/11/SAM-format-and-SAMtools.html</url>
    <content><![CDATA[<h1 id="SAM文件格式和SAMtools"><a href="#SAM文件格式和SAMtools" class="headerlink" title="SAM文件格式和SAMtools"></a>SAM文件格式和SAMtools</h1><p>这里是简单的一些介绍。详细的内容建议看官方手册。官方的文档既全面，又会更新，是第一手资料。这里是SAM文件格式以及SAMtools的一些简单的介绍，更详细内容移步<a href="/2016/11/Related-documentation-of-samtools.html">SAMtools相关官方文档</a>。</p>
<h2 id="SAM文件格式"><a href="#SAM文件格式" class="headerlink" title="SAM文件格式"></a>SAM文件格式</h2><p>通常得到个体/供体（individual/donor）的测序序列（reads）时，由于测序技术的原因，得到的是打碎的小片段，并不知道每个read在参考序列上位置，所以要mapping到参考基因组上去，找到其在参考基因组上的位置。比对结果通常以文本形式按SAM（Sequence Alignment/Map）格式进行保存，为了便于存储和传输，常被压缩为BAM和CRAM二进制文件。SAM格式文件包含测序片段的所有比对信息。</p>
<a id="more"></a>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">@HD     VN:<span class="number">1.3</span>  SO:coordinate</span><br><span class="line">@SQ     SN:<span class="number">11</span>   LN:<span class="number">134452384</span></span><br><span class="line">@PG     ID:bwa  PN:bwa  VN:<span class="number">0.7</span><span class="number">.12</span>-r1039 CL:bwa sampe -a <span class="number">1500</span> /share/home/gaojingyang/NGS_Data/Reference/ncbi36/<span class="number">11.f</span>a <span class="number">10</span>_11_1.sai <span class="number">10</span>_11_2.sai <span class="number">10</span>_11_1.fq <span class="number">10</span>_11_2.fq</span><br><span class="line"><span class="number">11</span><span class="number">-1911076</span>      <span class="number">99</span>      <span class="number">11</span>      <span class="number">52531</span>   <span class="number">29</span>      <span class="number">6</span>S93M1S =       <span class="number">52706</span>   <span class="number">275</span>     CTACATTTATTTTGTAGAAGTTCTTTCACCTTTATCAGAAGGTACTTTCACCTTGATTCAATAATAAGTTTGCATATTACAACCTTGTTGAATGTTGGTC    C=CFFEFDHHH+HH;AGIJBJIHJHHIJJJJJJIIIJIJJFDJJIJJJFJ)<span class="symbol">DGGJJJGHIDDGAIBHGIEDAGC6AA2BDFBFCDE@</span>DCDBD=DE(;DD0    XT:A:M  NM:i:<span class="number">0</span>  SM:i:<span class="number">29</span> AM:i:<span class="number">29</span> XM:i:<span class="number">0</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">93</span></span><br><span class="line"><span class="number">11</span><span class="number">-2807908</span>      <span class="number">163</span>     <span class="number">11</span>      <span class="number">52535</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52733</span>   <span class="number">298</span>     TTTGTAGATGTTCTTTCACCTTTATCAGAAGGTACTTTCACCTTGATTCAACAATAAGTTTGCATATTACAACCTTGTTGAATGTTGGTATAATTCACCC    <span class="symbol">C@</span>@<span class="number">4</span>=FDF#H&gt;HHJEJIIIIJJJIFAIIJHJII?IJ&gt;JC&lt;GEIJJJIGHB-DJJJCJGJJJIEHJ)DJJF5DJGAHEGCB:CD-BDAAF,:EDDDDD(DD    XT:A:U  NM:i:<span class="number">4</span>  SM:i:<span class="number">37</span> AM:i:<span class="number">37</span> X0:i:<span class="number">1</span>  X1:i:<span class="number">0</span>  XM:i:<span class="number">4</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">8</span>A42T37G7T2</span><br><span class="line"><span class="number">11</span><span class="number">-3392818</span>      <span class="number">99</span>      <span class="number">11</span>      <span class="number">52557</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52668</span>   <span class="number">211</span>     TATCAGAAGGTACTTTCACCTTGATTCAATAATAAGTTTGCATATTACAACCTTGTTGAATGTTGGTGTAATTCATCCATTCGTATTGCTATATGAGATT    =@CAF)ADHH&gt;HHFJJHGH+GIC,JBGIGIJHJIIGIII;GI*JJIJF)DFEJHEIIHDJD?<span class="symbol">E@</span>HJECF=D.HD(D&lt;F;?&lt;<span class="symbol">DDHHEDDD2DD@</span>,FE)CBD    XT:A:U  NM:i:<span class="number">1</span>  SM:i:<span class="number">37</span> AM:i:<span class="number">37</span> X0:i:<span class="number">1</span>  X1:i:<span class="number">0</span>  XM:i:<span class="number">1</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">96</span>T3</span><br><span class="line"><span class="number">11</span><span class="number">-11241866</span>     <span class="number">163</span>     <span class="number">11</span>      <span class="number">52562</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52753</span>   <span class="number">291</span>     GAAGGTACATTCACCTTGATTCAATAATAAGTTTGCATATTACAACCTTGTTGAATGTTGGTGTAATTCATCCATTCGTATTGCTATATGATATTCCAGT    CCC4=FFF#?HHGHCJ+,&lt;JJFI::JHIIJGFHEGIJJBJJJIEDJBEJD,IHIJIEEBJBHCIJGDIDDHDDDFECJ+BB58EDHC+BDFDA?A:DD(B    XT:A:U  NM:i:<span class="number">2</span>  SM:i:<span class="number">37</span> AM:i:<span class="number">37</span> X0:i:<span class="number">1</span>  X1:i:<span class="number">0</span>  XM:i:<span class="number">2</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">8</span>T89C1</span><br><span class="line"><span class="number">11</span><span class="number">-589542</span>       <span class="number">99</span>      <span class="number">11</span>      <span class="number">52563</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52699</span>   <span class="number">236</span>     AAGGTACTTTCACCTTGATTCAATAATAAGTTTGCATATTACAACCTTGTTGAATGTCGGTGTAATTCATCCATTCGTATTGCTATATGATATTCCACTA    <span class="symbol">C@</span>BFFFFFAHHHHJJJIJJIJJ3J13JAJICIJIGIC(HFJJ)HJJ?EIJJHIJDIJ)JHH)CFGFBIFG=DF&gt;,BH&gt;EDHD;DCCC?C?<span class="symbol">D5@</span><span class="number">5</span>DDDDDB    XT:A:U  NM:i:<span class="number">1</span>  SM:i:<span class="number">37</span> AM:i:<span class="number">37</span> X0:i:<span class="number">1</span>  X1:i:<span class="number">0</span>  XM:i:<span class="number">1</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">57</span>T42</span><br><span class="line"><span class="number">11</span><span class="number">-11179046</span>     <span class="number">99</span>      <span class="number">11</span>      <span class="number">52566</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52764</span>   <span class="number">298</span>     GTACTTTCACCTTGATTCAATAATAAGTTTGCATATTACAACCTTGTTGAATGTTGGTGTAATTCATCCATTCGTATTGCTATATGATATTCCACTACAT    <span class="symbol">1C@</span>DFDDFHHF&lt;HE=<span class="symbol">IJC@</span>JIJHJGHJHHHIH)JIJ:JJHJ9IGDIJ)JJIFI=;<span class="symbol">JGIEJ@</span><span class="symbol">JD@</span>H5(HIHBFHG99CI&gt;BHEDDGDDDDECDDDDDDDBD    XT:A:U  NM:i:<span class="number">0</span>  SM:i:<span class="number">37</span> AM:i:<span class="number">37</span> X0:i:<span class="number">1</span>  X1:i:<span class="number">0</span>  XM:i:<span class="number">0</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">100</span></span><br><span class="line"><span class="number">11</span><span class="number">-12910752</span>     <span class="number">163</span>     <span class="number">11</span>      <span class="number">52568</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52761</span>   <span class="number">293</span>     ACTTTCACCTTGTTTCAATAATAAGTTTGCATATTACAACCTTGTTGAATGTTGGTGTAATTCATCCATTCGTATTGCTATATGATATTCCACTACATGA    CCCF1BDEHFHF+J&lt;J,IGIJGJHIJH:)IJICJHC/JII9GJ9=J/?<span class="symbol">HFHCIHI@</span>HACHIBCJ;H=&gt;FHHF&gt;EFBDFD&gt;@ACFD&lt;,BBAD,C&lt;EDD5DC    XT:A:U  NM:i:<span class="number">1</span>  SM:i:<span class="number">37</span> AM:i:<span class="number">37</span> X0:i:<span class="number">1</span>  X1:i:<span class="number">0</span>  XM:i:<span class="number">1</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">12</span>A87</span><br><span class="line"><span class="number">11</span><span class="number">-2579510</span>      <span class="number">163</span>     <span class="number">11</span>      <span class="number">52568</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52763</span>   <span class="number">295</span>     ACTTTCACCTTGATTCAATAATAAGTTTGCATATTACAACCTTGTTGAATGTTGGTGTAATTCATCCATTCGTATTGCTATATGATATTCCACTACATGA    @+BFFDFFHHF+AIJJEHJJCJHJIGH#@IJHIH?DIJJIHFIIJIF&gt;<span class="number">0</span>CIBJDJHIFHJ=GCJ(D8GC8CHDJDCDFDD2CF+DEDBB&gt;:CDCADDBC;    XT:A:U  NM:i:<span class="number">0</span>  SM:i:<span class="number">37</span> AM:i:<span class="number">37</span> X0:i:<span class="number">1</span>  X1:i:<span class="number">0</span>  XM:i:<span class="number">0</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">100</span></span><br><span class="line"><span class="number">11</span><span class="number">-10363294</span>     <span class="number">99</span>      <span class="number">11</span>      <span class="number">52575</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52830</span>   <span class="number">354</span>     CCTTGATTCAATAATAAGTTTGCATATTACAACCTTGTTGAATGTTGGTGTTATTCATCCATTCGTATTGCTATATGATATTCCACTACATGAATATGTC    ?<span class="symbol">B@</span>DFFFFHHFFD(JGHIJJCFJIFJJJIJJIHFJGJHJDGDHIDGJIJIG)JBG=JEIFDH?IJ=AGF&gt;I(CCDCEDBD;<span class="symbol">DDHE@</span>:DDEBFDDDCD0=A    XT:A:U  NM:i:<span class="number">1</span>  SM:i:<span class="number">37</span> AM:i:<span class="number">37</span> X0:i:<span class="number">1</span>  X1:i:<span class="number">0</span>  XM:i:<span class="number">1</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">51</span>A48</span><br><span class="line"><span class="number">11</span><span class="number">-11225740</span>     <span class="number">99</span>      <span class="number">11</span>      <span class="number">52599</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52722</span>   <span class="number">222</span>     TATTACAACCTTGTTGAATGTTGGTGTAATTCATCCATTCGTATTGCTATATGATATTCCACTACATGAATATGTCGGACTTCATTCCTCAGATCTATTG    B1&lt;DDDFFH+HDFIHGJJJJJIJJJJIG33GI:HJGJIJGIGIJJJ?JJJJIHJIDI7HI=<span class="symbol">JE@</span><span class="symbol">DDF@</span><span class="symbol">JDEDH@</span>BE&gt;CD6CCDE&gt;C&gt;ECDDDD&gt;D&gt;DBCD    XT:A:U  NM:i:<span class="number">0</span>  SM:i:<span class="number">37</span> AM:i:<span class="number">37</span> X0:i:<span class="number">1</span>  X1:i:<span class="number">0</span>  XM:i:<span class="number">0</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">100</span></span><br><span class="line"><span class="number">11</span><span class="number">-2240062</span>      <span class="number">99</span>      <span class="number">11</span>      <span class="number">52630</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52730</span>   <span class="number">200</span>     CATCCATTCGTATTGCTATATGATATTCCACTACATGAATATGTCGGACTTCATTCCTCAGATCTATTGTTGATGAACACTTGAAATTTTTCCAGTTTTT    @C?FAFFFHCH8HJJHIIHIIHJHFJJHIFJJ*;JAHJIJJBJJJIEF?IJI7I)DFJI&amp;<span class="symbol">5HJ7HIA@</span>EH&lt;DJ;CEED&gt;HC(DCDDD5CC5C:(DDDD2C    XT:A:U  NM:i:<span class="number">0</span>  SM:i:<span class="number">37</span> AM:i:<span class="number">37</span> X0:i:<span class="number">1</span>  X1:i:<span class="number">0</span>  XM:i:<span class="number">0</span>  XO:i:<span class="number">0</span>  XG:i:<span class="number">0</span>  MD:Z:<span class="number">100</span></span><br><span class="line"><span class="number">11</span><span class="number">-5366918</span>      <span class="number">163</span>     <span class="number">11</span>      <span class="number">52654</span>   <span class="number">60</span>      <span class="number">100</span>M    =       <span class="number">52840</span>   <span class="number">286</span>     ATTCCACTACATGAATATGTCGGATTTCATTCCTCAGATCTATTGTTGATGAACACTTGAAATTTTTCCAGTTTTTAACCATTACAAACAATGCTGCTAT    CBCDADDF+DFFCJIJI=G3JI:G#<span class="symbol">IJEJIGHEJJG@</span>:?@DGGGGJA<span class="comment">/*H8I;AD&lt;J3EGIHJ,HHDHIEJ=+DDDCFDCBDBCDDDDDD0CD+C&gt;DD(D    XT:A:U  NM:i:1  SM:i:37 AM:i:37 X0:i:1  X1:i:0  XM:i:1  XO:i:0  XG:i:0  MD:Z:24C75</span></span><br><span class="line"><span class="comment">11-3392818      147     11      52668   60      100M    =       52557   -211    ATATGTCCGACTTCATTCCTCAGATCTATTGTTGATGAACACTTGAAATTTTTCCAGTTTTTAACCATTACAAACAATGCTGCTATGAACATTCTTTTGT    CCDDC(5&amp;BCADBD3H-BFEC;E)H?ADD@DIJIFEHHII@IHEGJ3CIH7EDHJDI)@IBIDHAJJJHJAJFJFEJGCIIIIJJJAHHHGHFDFDFCCB    XT:A:U  NM:i:1  SM:i:37 AM:i:37 X0:i:1  X1:i:0  XM:i:1  XO:i:0  XG:i:0  MD:Z:7G92</span></span><br><span class="line"><span class="comment">11-521728       99      11      52694   60      100M    =       52827   233     TATTGTTGATGAACACTTGAAATTTTTCCAGTTTTTAACCATTACAAACAATGCTGCTATGAACATTCTTTTGTAAATCACCTGGTTCATATGTGCAAGA    C@@FFDFF8BGHHAJJIJIJJIIHHIIJIGJGIJJ3:J0?-GIJIDHJ0JIJH?DJHIHC2DHGCFGDDFDD;9BCBEDCDBBBCDA2BECBBFEDDD&amp;5    XT:A:U  NM:i:0  SM:i:37 AM:i:37 X0:i:1  X1:i:0  XM:i:0  XO:i:0  XG:i:0  MD:Z:100</span></span><br><span class="line"><span class="comment">11-589542       147     11      52699   60      100M    =       52563   -236    TTGATGAACACTTGAAATTTTTCCAGTTTTTAACCATTACAAACAATGCTGCTATGCACATTCTTTTGTAGATCACCTGGTTCATATGTGCAAGATATCC    DDDDCC5D;DAD4D@D&gt;:DCDF&gt;,DEEDEJ8IDBHJDEDFHIFFF=BIHGCG@HF;#IGJIJ?HJDHJJI*BGGEIHIIEIJ2:IJJD;HHAFFF+FCCB    XT:A:U  NM:i:2  SM:i:37 AM:i:37 X0:i:1  X1:i:0  XM:i:2  XO:i:0  XG:i:0  MD:Z:56A13A29</span></span><br><span class="line"><span class="comment">11-1911076      147     11      52706   29      100M    =       52531   -275    ACACTTGAAATTTTTCCAGTTTTTAACCATTACAAACAATGCTGCTATGAACATTCTTTTGTAAATCACCTGGTTCATATGTGCAAGATATCCTCTGGGG    D@DACD4A&gt;D&gt;DDEEEB5EC@D;&lt;(B09CFHDH&lt;BBEG&lt;FJDJIHJ/JIDC5GJ8J#EEJJI?HII?JIJIGJJIIJIJJJHJIJJI&lt;GHHHFFEF=@@@    XT:A:U  NM:i:0  SM:i:29 AM:i:29 X0:i:1  X1:i:0  XM:i:0  XO:i:0  XG:i:0  MD:Z:100</span></span><br><span class="line"><span class="comment">11-6240990      163     11      52709   60      100M    =       52824   215     CTTGAAATTTTTCCAGTTCTTAACCATTACAAACAATGCTGCTATGAACATTCTTTTGTAAATCACCTGGTTCATATGTGCAAGATATCCTCTGGGGTAT    C@C?A;DDDGD&lt;HIHGJJ,JIIJJ?JEIJGIJIHJJIFJJIAJCIDHH?H@H;AICJJJJBFHJJHGEJFCFH@IDDD;D4CC&gt;D3CCEAB;D((DDD@D    XT:A:U  NM:i:1  SM:i:37 AM:i:37 X0:i:1  X1:i:0  XM:i:1  XO:i:0  XG:i:0  MD:Z:18T81</span></span><br><span class="line"><span class="comment">11-11225740     147     11      52722   60      1S99M   =       52599   -222    ACAGTTTTTAACCATTACAAACAATGCTGCTATGAACATTCTTTTGTAAATCACCTGGTTCATATGTGCAAGATATCCTCGGGGGTATATATTTAAATGT    (C&gt;#CCDB&gt;CE@D@DCDFDDFB7EJ8HAHJH(;HD8BBDJIII?HIJJ+BI8DJJIDJGIJJI*H@IFHIFIAJFIJIGJ#ICIJJFHAHAHFFDDF++C    XC:i:99 XT:A:U  NM:i:2  SM:i:37 AM:i:37 X0:i:1  X1:i:0  XM:i:2  XO:i:0  XG:i:0  MD:Z:79T16A2</span></span><br><span class="line"><span class="comment">11-2240062      147     11      52730   60      100M    =       52630   -200    AACCATTACAAACAATGCTGCTATGAACATTCTTTTGTAAATCACCTGGTACATATGTGCAAGATATCCTCTGGGGTATATATTTAAAAGTAAAATTATT    8CA?CAD0DD@@E9DD@HBE&gt;4F@D:EAFGEI7(HDGJIFI?HAJIGGHA(JHIHDGJIJIHBJGJH&lt;BIJIFJJHJCHJJGGFFJJHF&lt;HHAFDDFC?B    XT:A:U  NM:i:1  SM:i:37 AM:i:37 X0:i:1  X1:i:0  XM:i:1  XO:i:0  XG:i:0  MD:Z:50T49</span></span><br><span class="line"><span class="comment">11-2807908      83      11      52733   60      100M    =       52535   -298    CATTACAAACAATGCTGCTATGGACATTCTTTTGTAAATCACCTGGTTCATATGTGCAAGATATCCTCTGGGGTATATATTTAAAAGTAAAATTATTGAG    CDD@DBDD@:&gt;7DCDBDD.DD:(B?FHCHBJ&lt;JDG;8EH&gt;DICGIDC(JJIEJCHJJIFIEIHJFCHJCJJJ1JGJGGHIAHJJGJJFFHDHDDFD+C;@    XT:A:U  NM:i:1  SM:i:37 AM:i:37 X0:i:1  X1:i:0  XM:i:1  XO:i:0  XG:i:0  MD:Z:22A77</span></span><br><span class="line"><span class="comment">11-11277944     163     11      52734   60      100M    =       53007   373     ATTACAAACAATCCTGCTATGAACATTCTTTTGTAAGTCACCTGGTTCATATGTGCAATATATCCTCTGGGGTATATATTTAAAAGTAAAATTATTGAGT    CC@?FFEAHHHD#IJCJIIIICJ3IBCJIJJIIGJH(BIJIGBI3AJJIFECHDE8GH#?EJJ8DGFDH@DDFEBFF?DDD2D8C6&gt;DD&gt;E(&lt;D5DCDD&gt;    XT:A:U  NM:i:3  SM:i:37 AM:i:37 X0:i:1  X1:i:0  XM:i:3  XO:i:0  XG:i:0  MD:Z:12G23A21G41</span></span><br><span class="line"><span class="comment">11-8199004      163     11      52743   60      100M    =       52942   299     AATGCTGCTATGAACATTCTTTTGTAAATCACCTGGTTCATATGTGCAAGATATCCTCTGGGGTATATATTTAAAAGTAAAATTATTGAGTTATTCAACA    CCC=BFFFFCGFH+J@@JJHIIJHJ8IIIIGHG0IIJGJBIFHGFDHGBHJIBJDJJJFHEJ:IJHDI=D(FFDA=GFD6CDFDD&gt;CC(E&amp;CD5?DDDCD    XT:A:U  NM:i:0  SM:i:37 AM:i:37 X0:i:1  X1:i:0  XM:i:0  XO:i:0  XG:i:0  MD:Z:100</span></span><br></pre></td></tr></table></figure>

<p>SAM格式文件包含两部分，头部注释和比对信息部分。头部注释包含了该文件的基本信息，每行以“@”开始，主要有SAM格式的版本、所用参考基因组的名称与长度、测序样本的描述信息、所用比对软件的信息及相关数据处理的命令行等。</p>
<p>比对信息部分每行对应一个测序片段的比对信息，包含11个固定字段和可选字段。11个固定字段按顺序分别为，测序片段ID、位标识、所映射的染色体、映射的位置、映射的质量、CIGAR（比对情况）、配对片段的映射的染色体、配对片段映射的位置、模板长度、片段序列、序列质量信息以及一些可选字段。位标识的每个二进制位代表一个标识信息，主要是测序片段是否映射成功、映射方向等信息。CIGAR以字符串形式描述序列片段的具体比对信息，由数字+一个字母形成的串连接而成，数字为序列的长度，字母为这段序列与参考序列的比对形式。常用的比对形式有：</p>
<ol>
<li>“M”：匹配，该段序列与参考序列的碱基相对位，但可能包括错配。</li>
<li>“D”：缺失，测序片段中相对于参考序列缺失此段碱基。</li>
<li>“I”：插入，测序片段中相对于参考序列插入此段碱基。</li>
<li>“S”：软剪切，测序片段比对得分为负，舍弃。</li>
</ol>
<p>如<code>30M5I25M5D25M10S</code>意味着100bp的片段依次以30个碱基匹配、5个碱基插入、25个碱基匹配、5个碱基缺失，25个碱基匹配，10个碱基未匹配，具体可参照下图。<br><img src="/images/CIGAR.png" alt=""></p>
<p>每行最后还可以包含多个可选字段，字段格式为【标签（两个字符）：数据类型（字符、整型、浮点型、字符串等）：值】。可选字段的标签非常多，这里只列出几个特殊的标签：</p>
<ol>
<li>X0：最优比对的数量（存在多个最最优比对时）。</li>
<li>X1：次优比对的数量。</li>
<li>XT：是否唯一比对至此，（Unique/Repeat/N/Multiply）。</li>
<li>XM：错配（mismatch）的碱基数量。</li>
</ol>
<h2 id="SAMtools工具介绍"><a href="#SAMtools工具介绍" class="headerlink" title="SAMtools工具介绍"></a>SAMtools工具介绍</h2><p>在NGS分析的过程中，经常要对包含比对信息的SAM/BAM/CRAM格式文件进行基本处理，常见的为bam文件。本文所用工具为SAMtools，常用的SAMtools命令及功能说明如下。</p>
<ol>
<li>index：对bam文件建立索引。</li>
<li>merge：归并多个bam文件为一个。</li>
<li>cat：连接多个未排序的bam文件。</li>
<li>sort：将bam文件中的reads按映射位置或名称进行排序。</li>
<li>depth：计算指定区域的映射深度。</li>
<li>flagstat：输出bam文件的统计信息</li>
<li>flags：根据bam文件的位标识字段进行过滤或提取。</li>
<li>view：对SAM/BAM/CRAM格式的相互转换，还可进行数据切片，保留映射到指定染色体、指定坐标范围内的测序片段。</li>
<li>tview：测序片段映射情况浏览器，终端界面可视化测序片段的比对信息。</li>
</ol>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>software</tag>
        <tag>NGS</tag>
        <tag>data</tag>
        <tag>format</tag>
        <tag>SAMtools</tag>
        <tag>SAM</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS系统安装配置</title>
    <url>/2016/11/How-to-install-a-CentOS.html</url>
    <content><![CDATA[<h1 id="CentOS系统安装配置"><a href="#CentOS系统安装配置" class="headerlink" title="CentOS系统安装配置"></a>CentOS系统安装配置</h1><p>公司新来几台HP机，双硬盘，120G-SSD + 1T-HDD，SSD上自带Win7。现在需要在机械硬盘上装入CentOS用于一些大数据实验。正好是第一次装CentOS，这里做一下笔记和总结。</p>
<h2 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h2><p>首先下载系统镜像，基本上所有的开源软件镜像网站都会有CentOS系统。选择了<a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">清华的镜像站</a>，下载的为CentOS-7-x86_64-DVD-1511.iso版本。接着使用UltraISO制作了U盘启动盘。</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>曾写过文章<a href="/2016/11/Disk-partition-table-format.html">磁盘分区格式与系统引导方式</a>，可供参考。</p>
<p>开机Fx(该机器为F9)选择启动项，这里选择UEFI的U盘启动，选择<code>Install CentOS 7</code>。片刻之后，进入了命令行模式，显示如下</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">dracut:</span>/<span class="meta">#</span></span><br></pre></td></tr></table></figure>
<p>查资料后发现，这是因为grub没有正确以U盘启动镜像。这里输入<code>cd dev &amp;&amp; ls</code>查看设备，通常<code>sdb</code>开头的为U盘，这里为<code>sdb4</code>。然后重启U盘启动进入grub引导菜单，根据提示，按<code>e</code>编辑引导内容。将<code>hd:LABEL=CentOS…… quiet</code>的内容改为<code>hd:/dev/sdb4</code>，然后按<code>Ctrl-x</code>启动即可进入图形化安装界面。选择好语言，最小安装等。</p>
<h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>接下来主要的就是手动分区，通常装Linux，最少需要两个分区，根目录/和SWAP。如果是想UEFI引导，最好再多一个分区挂载/boot/efi，几百兆即可；如果是Legacy引导，最好多一个分区挂载/boot；当然其他挂载点如/home，或者挂载Windows的NTFS分区都可自行设置。如果一切顺利，几分钟就可以装完系统。</p>
<p>这里有一个插曲，一开始，机械硬盘的前面给Win7分了D盘E盘，发现装CentOS时总是报错。后来用<code>EaseUS Partition Master</code>把他们挪到磁盘最后面才得以成功安装，可能是引导分区得在硬盘的最开始吧。</p>
<h2 id="网络设置"><a href="#网络设置" class="headerlink" title="网络设置"></a>网络设置</h2><p>由于公司上网需要iNode认证，否则即使配好IP局域网也不能用，互相之间都Ping不同。后来，在图形化桌面下尝试了iNode for Linux发现并不能用。后来，想到了一个解决方案，找一个双网卡的电脑，通过认证iNode之后，另一个网线连入一个交换机，使交换机上的机器共享上网。我用了一个USB网卡，如是做了，配置好IP，192.168.0.1，接着配置CentOS网卡。</p>
<p>编辑网卡配置文件，在<code>/etc/sysconfig/network-scripts</code>目录下面，<code>ifcfg-</code>开头的文件就是网卡配置文件，这里为<code>ifcfg-eno1</code>，使用vi编辑，BOOTPROTO修改为static，即静态IP，随机启动ONBOOT修改为yes。添加IP地址：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">IPADDR=<span class="number">192.168</span><span class="number">.0</span><span class="number">.2</span></span><br><span class="line">NETMASK=<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">GATEWAY=<span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">DNS1=<span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>
<p>然后<code>service network restart</code>就可以重启网卡了，使用ifconfig查看一下IP。发现没有ifconfig，查了下，需要<code>yum install net-tools</code>下载。</p>
<p>打算用CentOS重新引导Win7启动，试了下<code>grub2-mkconfig</code>没有找到Win7。后来发现还不能挂载NTFS分区，通过安装<a href="http://www.tuxera.com/community/open-source-ntfs-3g/" target="_blank" rel="noopener">NTFS-3G</a>解决，可还是没能实现grub引导Win7。后来想到了，CentOS为UEFI引导，也许不能直接引导Legacy的Win7吧，或者比较麻烦，可能需要手写引导项。后面装另一台时选择Legacy引导，果然可以自动扫描出Win7并引导。</p>
<p>可能还需要<code>yum install openssh-server</code>并<code>service sshd start</code>启动，我这里是系统自带并默认开机启动了。值此，可直接使用ssh远程登录了。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CentOS</tag>
        <tag>setup</tag>
      </tags>
  </entry>
  <entry>
    <title>磁盘分区格式与系统引导方式</title>
    <url>/2016/11/Disk-partition-table-format.html</url>
    <content><![CDATA[<h1 id="磁盘分区格式与系统引导方式"><a href="#磁盘分区格式与系统引导方式" class="headerlink" title="磁盘分区格式与系统引导方式"></a>磁盘分区格式与系统引导方式</h1><h2 id="磁盘基础"><a href="#磁盘基础" class="headerlink" title="磁盘基础"></a>磁盘基础</h2><p>柱面，同一磁道，多个盘面构成的圆柱面，从0开始编号<br>磁道，低格时在盘面上划分的同心圆，从0开始编号。<br>扇区，每段圆弧为一个扇区，从1开始编号，最小的读写单位。<br>根据这三个维度可得到CHS地址。</p>
<a id="more"></a>

<h2 id="MBR-Master-boot-record"><a href="#MBR-Master-boot-record" class="headerlink" title="MBR(Master boot record)"></a>MBR(Master boot record)</h2><p>主引导记录MBR包括主引导程序（0000-001BD，446Bytes）、硬盘分区表(01BE-01FD，64Bytes)、硬盘有效标识(01FE-01FF，2Bytes)。MBR在0磁道0柱面1扇区的位置，共512Bytes，也就是传统机械硬盘一个扇区的容量。</p>
<p>随着硬盘的容量越来越大，由于MBR的设计，出现了类似千年虫的问题。MBR分区最多允许4个主分区或3个主分区+1个扩展分区，扩展分区中可细分多个逻辑分区。分区最大支持2TB（2^32*512B），而且超出2T的硬盘区域也不能分区。</p>
<h2 id="GUID分区表（GPT-GUID-Partition-Table）"><a href="#GUID分区表（GPT-GUID-Partition-Table）" class="headerlink" title="GUID分区表（GPT, GUID Partition Table）"></a>GUID分区表（GPT, GUID Partition Table）</h2><p>从Vista和Win7时代，出现了GUID分区表。GPT支持的容量，短期内还无法达到上限，就像15360密钥的RSA算法短期内无法破解一样。需要注意的是，GPT分区的磁盘是不能装32位的操作系统的，但可以被识别用作数据盘，不过32位的XP和之前的系统是不能识别GPT分区的。GPT分区的操作系统是需要UEFI引导的，一些旧的主板可能不支持。</p>
<h2 id="启动引导方式"><a href="#启动引导方式" class="headerlink" title="启动引导方式"></a>启动引导方式</h2><p>常见的两种Legacy（传统）和UEFI，分别对应MBR和GPT。</p>
<ul>
<li>Legacy引导步骤：Legacy初始化-&gt;BIOS自检-&gt;MBR-&gt;活动的主分区\bootmgr-&gt;活动的主分区\Boot\BCD-&gt;各个启动项（如\Windows\system32\winload.exe）</li>
<li>UEFI引导步骤：UEFI初始化-&gt;EFI系统分区（FAT格式）-&gt;\EFI\Microsoft\Boot\bootmgfw.efi-&gt;\EFI\Microsoft\Boot\BCD-&gt;各个启动项（如\Windows\system32\winload.efi）</li>
</ul>
<p>BCDEDIT命令或者EasyBCD、BOOTICE等工具可以管理BCD内容，当系统引导损坏的时候可用U盘进PE，使用上述工具手动修复，或者使用NTBOOT Autofix工具自动修复。目前预装的Win8及以上的系统均采用GPT+UEFI引导，而预装的WIN7通常采用MBR+Legacy引导。</p>
<p>由于分区方式的限制，一块磁盘上只能装载一种引导方式的系统。如果存在多块磁盘，可采取不同方式。如果是重新装系统，引导方式取决于装系统时的启动方式，如UEFI启动Windows安装盘装的就是UEFI引导的，也会提示只能装在GPT分区的磁盘，同理Linux安装盘也是这样。当然如果需要，后期也可以在不损坏数据的前提下相互切换，只不过有时会有些麻烦和风险。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>format</tag>
        <tag>disk</tag>
        <tag>boot</tag>
      </tags>
  </entry>
  <entry>
    <title>一些提高效率的Chrome插件</title>
    <url>/2016/10/Some-plugin-of-improving-efficiency-for-Chrome.html</url>
    <content><![CDATA[<h1 id="一些提高效率的Chrome插件"><a href="#一些提高效率的Chrome插件" class="headerlink" title="一些提高效率的Chrome插件"></a>一些提高效率的Chrome插件</h1><p>自己常用的浏览器是Google Chrome，大概用了五六年了吧。这种优秀的产品用一次就能让你抛弃别的浏览器。优秀的同步功能，包括所有设置，密码、扩展程序、甚至浏览历史；Chrome商店丰富的应用能满足各种扩展需求。</p>
<p>这里总结分享一些自己常用的插件，即保持常开的，主要是关乎提升效率的。</p>
<p><img src="/images/beauty/e833b80f2bf3043ecd0b4202e54e429efe76e6d21cb9134296f0c2.jpg" alt=""></p>
<a id="more"></a>

<h2 id="Ad-Block"><a href="#Ad-Block" class="headerlink" title="Ad Block"></a>Ad Block</h2><p>国内网络环境杂乱，各种广告漫天横飞，网站自己挂的，ISP挂的……为了还用户一个绿色环境，广告拦截通常为浏览器装的第一个插件，而拥有最多用户的AdBlock是不二选择。需要注意的是，一些视频网站的广告也会拦截，为了支持正版可加其白名单。</p>
<p>顺便提一句，ADSafe净网大师也是一款拦截广告的软件，包括各种弹窗都可以拦截，直接运行在系统上的软件。但我并未使用，这款软件应该是直接监控其他进程，修改显示，包括网页，拦截弹窗等，感觉类似于外挂似的，具体原理不太了解，操守未知，没敢用。</p>
<p>其实像这种广告拦截软件，打内心还是不愿意用的，消耗系统资源。它是一种对抗的东西，由于广告乱象，我们被迫清理一下，不然网页根本没法看。包括杀毒软件也是一样，我们被迫去对抗，它除了常驻内存，开机启动，偶尔误杀来刷存在感之外大部分时间并无他用。应该从根本上，或者更低层，整治网络环境，提升人民素质，而不是到我们终端机器上去浪费资源来对抗。</p>
<h2 id="SimpleUndoClose"><a href="#SimpleUndoClose" class="headerlink" title="SimpleUndoClose"></a>SimpleUndoClose</h2><p>打开关闭的窗口。标题栏右键-&gt;重新打开关闭的窗口，就可以打开，但是通常保存的数量有限。这个插件可以自定义记录的数量，如最近1000个网页，相当于一个历史记录。常用的功能有，点击插件，按鼠标中键快速打开几个最近刚关闭的标签；另外还可以搜索关键字，找到之前浏览的页面并打开。这个和历史记录功能类似，只是用时更方便些。</p>
<p>需要注意的是，这个插件的历史记录即使清理浏览器数据也会存在，需手动清理。另外和自带功能不同的是，这个不能保存标签浏览位置，以及前进后退的标签页。浏览器自带功能，打开关闭的窗口可以直接回到关闭时的滚动条位置，以及前进后退的都能使用。</p>
<h2 id="Neater-Bookmarks"><a href="#Neater-Bookmarks" class="headerlink" title="Neater Bookmarks"></a>Neater Bookmarks</h2><p>书签搜索。当保存的书签多了，就有一个书签搜索的需求，这个插件很不错。还有一个替代品是Bookmark Search，缺点是只能搜5个。<br>另外，这里列一个为开发者做的收费书签管理服务<a href="https://larder.io/" target="_blank" rel="noopener">Larder</a>。</p>
<h2 id="SwitchyOmega"><a href="#SwitchyOmega" class="headerlink" title="SwitchyOmega"></a>SwitchyOmega</h2><p>设置代理的一个插件，即哪些网址可以通过代理上网，通常配合Shadowsocks自由上网，规则地址可直接上github搜索。之前曾写过关于<strong><em><a href="/2016/05/Free-Internet-access-just-do-it">自由上网</a></em></strong>.</p>
<h2 id="Stylish"><a href="#Stylish" class="headerlink" title="Stylish"></a>Stylish</h2><p>样式更改工具，最开始我只用它更换中文字体为雅黑，后来发现这是一个强大的工具。可直接用此插件寻找当前网站的适用样式。目前我还用一个Google的暗色主题。</p>
<h2 id="Tabs-Outliner"><a href="#Tabs-Outliner" class="headerlink" title="Tabs Outliner"></a>Tabs Outliner</h2><p>自己有一个设置，浏览器启动时从上次停下来的地方继续，即关闭时多少网页，启动时会原样回复，这很有必要，可以快速恢复状态.<br>后来有了更深层次的需求。通常一个工作项，比如写一篇什么样的文章，需要查阅许多资料，开十几二十几个或更多的标签，而且短时间内（一天或半天）完不成。中间需要关闭浏览器，中间又可能会干别的事情，过一段时间后继续这项工作。这时，我需要保存打开的那些标签，之后用时再恢复。这个插件可以解决这个需求，管理标签页的，可以暂时关闭一系列标签。</p>
<hr>
<p>这里也列出一些其他常用的一些插件，需要注意，所有打开的插件都会在<code>右键标题栏-&gt;任务管理器</code>中看到常驻内存，自己把最常用的打开就够了，不然吃太多内存。</p>
<ul>
<li>Infinity新标签页</li>
<li><a href="https://www.noisli.com/" target="_blank" rel="noopener">Noisli</a>：大自然声音</li>
<li>印象笔记·剪藏</li>
<li>Super Auto Refresh：自动刷新网页，看文字直播时常用</li>
<li>Save to Pocket</li>
<li>HTTPS Everywhere</li>
<li>IE Tab</li>
</ul>
]]></content>
      <categories>
        <category>总结备份</category>
      </categories>
      <tags>
        <tag>plugin</tag>
        <tag>Chrome</tag>
        <tag>efficiency</tag>
      </tags>
  </entry>
  <entry>
    <title>测序数据格式——FASTQ</title>
    <url>/2016/10/FASTQ-format.html</url>
    <content><![CDATA[<h1 id="测序数据格式——FASTQ"><a href="#测序数据格式——FASTQ" class="headerlink" title="测序数据格式——FASTQ"></a>测序数据格式——FASTQ</h1><h2 id="FASTQ"><a href="#FASTQ" class="headerlink" title="FASTQ"></a>FASTQ</h2><p>高通量测序数据通常以FASTQ格式来保存，后缀名为fq，示例如下：</p>
<figure class="highlight plain"><figcaption><span>chr1_1.fq</span></figcaption><table><tr><td class="code"><pre><span class="line">@SRR062634.321 HWI-EAS110_103327062:6:1:1446:951&#x2F;2</span><br><span class="line">TGATCATTTGATTAATACTGACATGTAGACAAGAAGAAAAGTATGTTTCATGCTATTTTGAGTAACTTCCATTTAGAAGCCTACTCCTGAGCACAACATT</span><br><span class="line">+</span><br><span class="line">B5&#x3D;BD5DAD?:CBDD-DDDDDCDDB+-B:;?A?CCE?;D3A?B?DB??;DDDEEABD+&gt;DAC?A-CD-&#x3D;D?C5A@::AC-?AB?&#x3D;:&gt;CA@##########</span><br><span class="line">@SRR062634.488 HWI-EAS110_103327062:6:1:1503:935&#x2F;2</span><br><span class="line">AATGTTATTAAAAATGGACACCTTTTTCTCACACATTCAGTTTCATTGTCTCGCACCCCATCGTTTTACTTTTCTTCCTTCAGAAAATGATAAATGTGGG</span><br><span class="line">+</span><br><span class="line">AAAA?5D?BD&#x3D;&#x3D;ADBD:DBDDDDD5D&#x3D;;@&gt;AD-CD?D&#x3D;C5&#x3D;@4&lt;7CCAA5?&#x3D;?&gt;5@BC?*&lt;:&#x3D;&gt;&gt;:D:B5?B?5?&#39;3::5?5&lt;:;*97:&lt;A#########</span><br><span class="line">@SRR062634.849 HWI-EAS110_103327062:6:1:1587:921&#x2F;2</span><br><span class="line">CAGATCAGAATAATTTTTGTGTTATGTACGTGTAAGAAAACATAGCTATTATGATATGGAAACTAGGAGTGAAATATGAGGAATTTGTGACTTTTCTGAA</span><br><span class="line">+</span><br><span class="line">DFFEBEF?FEGGGBEFDFB3&gt;EE&#x3D;EEEEEEEECEBDCCD&lt;CEEEDAA&#x3D;EEB&#x3D;DEDFEEDF?&#x3D;EBBEEAEAD@:?-?A5&lt;AC(&#x3D;?&gt;4&gt;?############</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<ul>
<li>第一行以“@”起始，包括测序片段的描述信息，ID信息，双末端测序的两条片段会以“ID/1”和“ID/2”形式区分；</li>
<li>第二行为序列本身，即为一条read序列；</li>
<li>第三行以“+”起始；</li>
<li>第四行为序列质量信息，每个碱基的质量对应一个字符，公式为<code>Q=-10lg⁡p</code>，p为该检测为错误测序的概率，计算得Q为字符的ASCII码，如当p=0.01时Q=20，当p=0.001时Q=30。</li>
</ul>
<p>上述示例包含了3条reads的测序信息，如果是双末端测序，每一次测序会存储为两个文件，即每一对的两条reads分别存储在两个文件中。</p>
<h2 id="FastQC"><a href="#FastQC" class="headerlink" title="FastQC"></a>FastQC</h2><p><a href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/" target="_blank" rel="noopener">FastQC</a>是一个用来检验高通量测序数据质量的工具。<br>官方帮助文档：<a href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/" target="_blank" rel="noopener">http://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/</a></p>
<p>这里推荐一篇介绍使用说明的博文<a href="http://www.plob.org/article/5987.html" target="_blank" rel="noopener">用FastQC检查二代测序原始数据的质量</a></p>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>NGS</tag>
        <tag>data</tag>
        <tag>format</tag>
      </tags>
  </entry>
  <entry>
    <title>参考基因组介绍</title>
    <url>/2016/10/Reference-Genome.html</url>
    <content><![CDATA[<h1 id="参考基因组介绍"><a href="#参考基因组介绍" class="headerlink" title="参考基因组介绍"></a>参考基因组介绍</h1><h2 id="参考基因组（reference-genome）"><a href="#参考基因组（reference-genome）" class="headerlink" title="参考基因组（reference genome）"></a>参考基因组（reference genome）</h2><p>人类基因组计划绘制了人类的基因图谱，得到了30亿个碱基对的序列，投入30亿美元，使用第一代测序技术，将测序得到的序列组装（拼接/装配/Assembly）。这个序列也成为最初的参考基因组。</p>
<p><img src="/images/beauty/shutterstock_114370624.jpg" alt=""></p>
<a id="more"></a>

<h2 id="关于版本"><a href="#关于版本" class="headerlink" title="关于版本"></a>关于版本</h2><p>由于测序技术或者其他种种原因，现在并不能获得基因组的全部准确信息，存在某些特殊区域或结构，无法测序或者很难测序。但是，随着测序技术的发展，有一些序列又能被测出，又能多测出一些基因，这些序列就会被加入到参考序列中，这样就会每隔一段时间发布一版人类参考基因组。常见的有<code>NCBI36/hg18</code>、<code>GRCh37/hg19</code>、<code>GRCh38/hg38</code>。至于每个版本都有两个名字，如GRCh37和hg19，可以认为它们是一个版本的不同编号方式，其实基本完全相同，有时会存在染色体号表示的不同（chr1/1）或某些小细节的不同，参考：</p>
<blockquote>
<ol>
<li><a href="https://genome.ucsc.edu/cgi-bin/hgGateway" target="_blank" rel="noopener">https://genome.ucsc.edu/cgi-bin/hgGateway</a></li>
<li><a href="http://www.cnblogs.com/xudongliang/p/5189400.html" target="_blank" rel="noopener">http://www.cnblogs.com/xudongliang/p/5189400.html</a></li>
</ol>
</blockquote>
<p>不同版本之间的大部分序列都是相同的，只是由于不同位置插入或调整了某些序列，导致整体坐标信息发生位移。<strong><a href="http://genome.ucsc.edu/index.html" target="_blank" rel="noopener">UCSC</a></strong>的<strong><a href="http://genome.ucsc.edu/cgi-bin/hgLiftOver" target="_blank" rel="noopener">LiftOver</a></strong>或者开源工具<strong><a href="http://crossmap.sourceforge.net/" target="_blank" rel="noopener">CrossMap</a></strong>可以转换不同版本之间坐标。</p>
<p>在<a href="http://www.internationalgenome.org/" target="_blank" rel="noopener">千人基因组计划</a>中搜索<strong><a href="http://www.internationalgenome.org/search/?q=reference" target="_blank" rel="noopener">reference</a></strong>，会得到一些信息，比如<strong><a href="http://www.internationalgenome.org/announcements/release-1000-genomes-main-project-reference-genome-2009-10-12/" target="_blank" rel="noopener">Release of 1000 Genomes main project reference genome</a></strong>这里分别给出了参考基因组的EBI和NCBI的下载地址，当然UCSC上面也提供了<a href="http://hgdownload.cse.ucsc.edu/downloads.html" target="_blank" rel="noopener">各种物种的参考序列</a>。如<a href="http://hgdownload.cse.ucsc.edu/goldenPath/hg38/bigZips/" target="_blank" rel="noopener">hg38</a></p>
<h2 id="FASTA"><a href="#FASTA" class="headerlink" title="FASTA"></a>FASTA</h2><p>参考序列通常用FASTA格式来保存数据，后缀名为fa或fasta，如下文本文件：</p>
<figure class="highlight plain"><figcaption><span>FASTA: chr11.fa</span></figcaption><table><tr><td class="code"><pre><span class="line">&gt;11 dna:chromosome chromosome:NCBI36:11:1:134452384:1</span><br><span class="line">TTTTCATGTGTTTTTTGGCTGCATAAATGTCTTCTTTTGAGAAGTGTCTGTTCATATCCT</span><br><span class="line">TTGCCCACTTTTTGATGGGGTTGTTTGTTTTTTTCTTGTAAATTTGTTTGGGTTCATTGT</span><br><span class="line">AGATTCCGGATATTAGCACTGGGGCCTGTTGTGGGGTGGGGGGAGGGGGGAGGGATAGCA</span><br><span class="line">TTAGGAGATATACCTAATGTTAAATGATGAGTTAATGGGTGCAGCACACCAGTATGGCAC</span><br><span class="line">ATGTATACATATGTAACTAACCTGTACGTTGTGCACATGTATCCTAAAACTTAAAGTATA</span><br><span class="line">ATTTAAAAAATAAATAAATAAAAATAAAAATAAAAAGGCAAACAAGGACACTATAAGAAA</span><br><span class="line">AGTATGGGCCAACCAATATCCCTGATGAACACAGATACAAAAGTCCTCAAAAAAAAGTAC</span><br><span class="line">TAGCAAGCAGAATTTAACAACATATTAGGAGAACATTTACCATGATAAAGTGGATTTATC</span><br><span class="line">CTCCAGATGTTTCAGCAAACACAAATCAAATGTGATAAACCACATTAACAGAATGAAGGA</span><br></pre></td></tr></table></figure>
<p><code>&gt;</code>开头的一行为当前序列的标题，上述为11号染色体的序列。另起一行为按顺序排列的序列数据。通常，核酸序列常用的有AGCT和N(aNy)，更详细的，可参考<strong><a href="https://en.wikipedia.org/wiki/FASTA_format" target="_blank" rel="noopener">维基百科</a></strong>。下载时，通常为<code>gz</code>格式的压缩文件，如文件<code>hg38.fa.gz</code>包含了hg38所有染色体的参考序列，解压缩后通常约为3.2G，即人类遗传数据的32亿个碱基，每个碱基占1个字节。</p>
<h2 id="常用数据处理"><a href="#常用数据处理" class="headerlink" title="常用数据处理"></a>常用数据处理</h2><p>通常需要使用SAMtools的faidx命令和BWA的index命令对FASTA文件建立索引信息文件，便于下游的数据使用和处理。此外，还可能需要一个工具，那就是将全基因组的FASTA文件按染色体分割，得到每个染色体的单个fa文件。这里自制了小工具<strong><a href="https://github.com/zz-zigzag/bioinformatics/blob/master/tools/splitfasta.c" target="_blank" rel="noopener">Split Fasta</a></strong>，当然简单的命令行脚本也可以实现。</p>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>data</tag>
        <tag>format</tag>
      </tags>
  </entry>
  <entry>
    <title>NGS分析常用数据库简介</title>
    <url>/2016/10/NGS-Database.html</url>
    <content><![CDATA[<h1 id="NGS分析常用数据库简介"><a href="#NGS分析常用数据库简介" class="headerlink" title="NGS分析常用数据库简介"></a>NGS分析常用数据库简介</h1><p>近些年，随着DNA测序技术的快速发展，基因组测序数据也以指数形式高速增长。由于测序的高通量性以及数据的复杂性，一些小实验室自身不具备处理和管理数据的能力。为了进一步管理和维护数据，一些大型科研机构建立了生物信息数据库，得益于计算机和网络的大发展，许多数据库公布在网上，供全世界科研界共享。</p>
<a id="more"></a>
<p>根据存储数据的类型可将数据库分为核酸序列数据库，蛋白序列数据库。较早的核酸序列数据库有<strong><a href="http://www.insdc.org/" target="_blank" rel="noopener">美国国家生物技术中心（NCBI）的Genbank、欧洲生物信息研究所（EBI）的EMBL以及日本的DDBJ</a></strong>，三个数据库每天同步。</p>
<p><strong><a href="https://www.ncbi.nlm.nih.gov/" target="_blank" rel="noopener">NCBI</a></strong>和<strong><a href="http://www.ebi.ac.uk/services" target="_blank" rel="noopener">EBI</a></strong>是常用的数据库，包括千人基因组数据也分别挂在里面。常用到的NGS数据库有NCBI的SRA（Sequence Read Archive）和EBI的ENA（European Nucleotide Archive）。</p>
<p>此外dbSNP为SNP和小型变异的数据库；DGVa和dbVar、DGV为基因组结构变异的数据库。</p>
<p>除了NCBI，基因组研究常用到的还有UCSC和Ensembl，UCSC提供了好多工具，诸如基因组浏览器等，推荐丁香园的<a href="http://www.dxy.cn/bbs/thread/25213548" target="_blank" rel="noopener">一篇帖子</a>，里面有一些使用说明资料可供查阅。</p>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>data</tag>
      </tags>
  </entry>
  <entry>
    <title>关于测序原理</title>
    <url>/2016/09/Sequence.html</url>
    <content><![CDATA[<h1 id="关于测序原理"><a href="#关于测序原理" class="headerlink" title="关于测序原理"></a>关于测序原理</h1><p>理解测序原理是一个难点，它也很重要，不然后面会有好多不明白的地方。这里推荐一篇很好的博文，<strong><a href="http://www.stbioinf.com/2013/08/02/An-Introduction-of-NGS-Sequence.html" target="_blank" rel="noopener">三代基因组测序技术原理简介</a></strong>，感谢原作者。</p>
<p>推荐两个YouTube上的视频，可以直观的感受一下测序技术。</p>
<blockquote>
<ol>
<li><a href="https://www.youtube.com/watch?v=HMyCqWhwB8E" target="_blank" rel="noopener">Intro to Sequencing by Synthesis: Industry-leading Data Quality</a></li>
<li><a href="https://www.youtube.com/watch?v=jFCD8Q6qSTM" target="_blank" rel="noopener">Next Generation Sequencing (NGS) - An Introduction</a></li>
</ol>
</blockquote>
<p>谷歌，百度，知网，PubMed等可以用来获取更多信息，搜索关键字可为：DNA测序，测序技术等。</p>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>NGS</tag>
      </tags>
  </entry>
  <entry>
    <title>一些提高效率的系统工具</title>
    <url>/2016/09/Some-tools-of-improving-efficiency-for-OS.html</url>
    <content><![CDATA[<h1 id="一些提高效率的系统工具"><a href="#一些提高效率的系统工具" class="headerlink" title="一些提高效率的系统工具"></a>一些提高效率的系统工具</h1><p>前两天总结了 <strong><em><a href="/2016/09/Some-tweaks-of-improving-efficiency-for-OS.html">一些提高效率的系统调整</a></em></strong>，现在总结一些常用的提高效率的工具。</p>
<h2 id="文本编辑"><a href="#文本编辑" class="headerlink" title="文本编辑"></a>文本编辑</h2><p>通常，新机装好，我会装上一个小软件，那就是<code>Notepad++</code>，包括现在我在Windows下面写笔记也是用的这个，对于任何文本文件，它都可以方便的右键打开。如果是开大文件，<code>EmEditor</code>是个不错的选择。当然如果系统中存在一个<code>bash</code>终端或者有<code>Git GUI</code>类似可以使用Linux强大命令工具，<code>vim/more/less</code>可以随便用了。 <img src="/images/Google.jpg" alt="Google"> <a id="more"></a></p>
<h2 id="文件夹"><a href="#文件夹" class="headerlink" title="文件夹"></a>文件夹</h2><p>装完系统我会装一个叫<code>Folder Colorizer</code>的工具，顾名思义，它是给文件夹上色的，当目录下存在大量文件夹时，可以用颜色来区分一些类别，比如说我的所有软件都放在D盘，其中，游戏文件夹就会用红色标识出来，还有一些类别会用其他颜色。如果是文档文件夹，也会根据内容来做一些区分。</p>
<h2 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h2><p>Win10中内置了一个Ubuntu 14.04，不过自带的终端确实不好用，目前进bash的还不能输中文。于是乎，我找了一个替代者—-<code>Cmder</code>，可以添加右键在此打开终端，各种配置也很方便，界面也很友好。</p>
<h2 id="剪贴板"><a href="#剪贴板" class="headerlink" title="剪贴板"></a>剪贴板</h2><p>我开始用的剪贴板工具是<code>CLCL</code>，后来换成了<code>Ditto</code>。更多请参考<strong><em><a href="https://xbeta.info/clipx-clcl-ditto.htm" target="_blank" rel="noopener">剪贴板增强软件综述</a></em></strong>，这是开机启动的。</p>
<h2 id="色温"><a href="#色温" class="headerlink" title="色温"></a>色温</h2><p>自己的眼睛有一些问题，太白，太亮的屏幕会难受，不喜欢冷色调，找了色温软件。Windows用的<code>f.lux</code>，Linux可以使用<code>redshift</code>都是可以按照日落时间来日内变化的，当然也是开机启动。如果没用过，可能不会了解，可一旦用了就知道好了。当然如果条件好还是配一个又大，质量又好的显示器，许多显示器都可以调色温，现在iOS 10都可以调色温了，之前越狱时也用<code>f.lux</code>，安卓也有类似软件<code>CF.lumen</code>。当然，如果手机和电脑都配一个暗色主题就更好了，既为国家省电，又为自己省眼，像上面Google首页一样。</p>
<h2 id="窗口"><a href="#窗口" class="headerlink" title="窗口"></a>窗口</h2><p>之前Win10未出之前曾找过多桌面软件，发现<code>Dexpot</code>还不错，后来Win10自带多桌面了。但是<code>Dexpot</code>还有一个不错的功能，可以让窗口置顶。启动软件之后，每个打开的窗口标题栏右键会出现dexpot一项，如果没有可以尝试重开窗口，里面有一个”总在顶层”可以让窗口一直置顶，当然还有透明等其他功能。</p>
<h2 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h2><p>装完系统之后，我都会装一个小工具，<code>CCleaner</code>，之前用来管理启动项和计划任务，现在Win10任务管理器已经可以管理了，但还是留下了使用<code>CCleaner</code>的习惯，常用的还有清理注册表，当然还有一些其他功能。此外，自己常用的清理注册表的工具还有<code>Wise Care 365</code>，这个注册表清理的还是不错的。</p>
<h2 id="右键管家"><a href="#右键管家" class="headerlink" title="右键管家"></a>右键管家</h2><p><code>右键管家</code>也是装机必备，当然绿色版的就行，一直会在D盘放着，然后弄一个快捷方式到开始菜单。虽然貌似软件已不再更新，而且也没再寻找类似功能的软件。这个初衷是清除冗余的右键，包括桌面右键，文件夹右键等，每次装完系统我都会清理一番，确保右键菜单清洁。</p>
<h2 id="翻墙"><a href="#翻墙" class="headerlink" title="翻墙"></a>翻墙</h2><p>开机启动的还有一个就是<code>Shadowsocks</code>，这是一个VPN软件，之前曾写过关于<strong><em><a href="/2016/05/Free-Internet-access-just-do-it.html">自由上网</a></em></strong>的文章。</p>
<hr>
<p>由于现在是总结一些提高效率的工具，而不是常用软件介绍，所以一些软件不在这里介绍，可能会开新文章吧。</p>
]]></content>
      <categories>
        <category>总结备份</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>software</tag>
        <tag>efficiency</tag>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>一些提高效率的系统调整</title>
    <url>/2016/09/Some-tweaks-of-improving-efficiency-for-OS.html</url>
    <content><![CDATA[<h1 id="一些提高效率的系统调整"><a href="#一些提高效率的系统调整" class="headerlink" title="一些提高效率的系统调整"></a>一些提高效率的系统调整</h1><p>这里记录自己的一些系统设置，一方面分享，一方面供自己以后重置系统后配置参考。我目前使用的是Win10专业版 build 14393。<br>除了一些是用于提高效率的调整，还有一些其他方面比较实用的设置。<br><img src="/images/beauty/bench-colorful-colourful-lodz.jpg" alt=""></p>
<a id="more"></a>
<h2 id="文件夹选项"><a href="#文件夹选项" class="headerlink" title="文件夹选项"></a>文件夹选项</h2><p>打开文件夹选项：此电脑菜单栏-&gt;查看-&gt;选项。</p>
<h3 id="单击打开文件"><a href="#单击打开文件" class="headerlink" title="单击打开文件"></a>单击打开文件</h3><p>这个不是为了节省鼠标，而是为了节省时间，当然也省力。之前Linux一直这样设置，后来Windows也开始这样做。<br>在文件夹选项，常规选项卡更改为通过单击打开项目。</p>
<h3 id="打开资源管理器时打开：此电脑"><a href="#打开资源管理器时打开：此电脑" class="headerlink" title="打开资源管理器时打开：此电脑"></a>打开资源管理器时打开：此电脑</h3><p>Win10系统打开此电脑时，或快捷键<code>Win+E</code>时，默认打开快速访问而不是此电脑，可在文件夹选项常规选项卡最上设置。</p>
<h3 id="显示所有文件夹，"><a href="#显示所有文件夹，" class="headerlink" title="显示所有文件夹，"></a>显示所有文件夹，</h3><p>查看选项卡，导航窗格，勾选显示所有文件夹，这是资源管理器左侧文件树显示多了一些，包括回收站和控制面板。</p>
<h3 id="显示隐藏文件"><a href="#显示隐藏文件" class="headerlink" title="显示隐藏文件"></a>显示隐藏文件</h3><p>查看选项卡，勾选显示隐藏文件，当然，也可以去掉勾选隐藏受保护的操作系统文件，我并未去掉这项，不然C盘会多显示好多东西。不过好多病毒就是通过加操作系统文件属性实现隐藏的。顺便去掉隐藏已知文件的扩展名。</p>
<h3 id="文件夹查看方式"><a href="#文件夹查看方式" class="headerlink" title="文件夹查看方式"></a>文件夹查看方式</h3><p>打开文件夹后，右键，会有查看方式，通常文件或文件夹较多的情况下，会选择详细信息；文件夹较少可以放大图表，便于点击，按住Ctrl滚动鼠标中键滚轮调整即可。此外，分组依据设置为按修改日期，可以很方便的查看最近修改的文件；还有排序方式，名称、修改日期等。当然还有个性化的情况，例如音乐文件夹按照专辑或音乐家分组和排序等。</p>
<h2 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h2><p>控制面板中搜索鼠标，更改鼠标设置，我把鼠标外观从白色指针变成黑色指针，并稍大一些，这样可以避免经常找不到箭头。指针选项，选项卡中有一个当Ctrl键按下时显示鼠标指针位置。</p>
<h2 id="用户文件夹目录"><a href="#用户文件夹目录" class="headerlink" title="用户文件夹目录"></a>用户文件夹目录</h2><p>这个比较重要，我也是大学的时候看到别人这么做，确实很有用途。</p>
<p>通常，默认用户目录在<code>C:/用户/用户名</code>文件夹，可以把其中一些文件夹放到其他盘中去，例如文档，下载，桌面等文件夹，可以在其他盘下面建一个如<code>UserData</code>文件夹统一保存用户数据。</p>
<p>方法为：打开<code>C:/用户/用户名</code>，比如文档，右键文档属性，位置选项卡，就可以移动新位置了。我就是把能放得都放到了其他盘中去，这样重装系统后把用户数据目录重新配置一下就好了，可以放心格式化C盘了。这些文件夹很重要，比如文档，它存放了QQ聊天记录，这样设置不用每次装系统前备份数据了，可以让聊天记录永远不丢。</p>
<p>总的来说，这些工作就是为了重装系统后尽量的减少违和感，尽快的恢复工作。</p>
<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p>控制面板搜索系统，打开第一个，这里面可以进行一些基本系统设置。</p>
<h3 id="高级系统设置"><a href="#高级系统设置" class="headerlink" title="高级系统设置"></a>高级系统设置</h3><h4 id="性能选项"><a href="#性能选项" class="headerlink" title="性能选项"></a>性能选项</h4><p>这里可以设置视觉效果及虚拟内存等。</p>
<p>如，视觉效果，我的设置如下：<br><img src="/images/%E6%80%A7%E8%83%BD%E9%80%89%E9%A1%B9.jpg" alt=""><br>把所有淡入淡出去掉了，我嫌它慢，就这样。关于虚拟内存，目前电脑硬件配置估计都用不到这个了，或者这个用处不大。如果非要设置一下，可以选择在非C盘，设置物理内存大小一样或两倍的虚拟内存，这样也可以减少C盘读写压力和节省C盘空间。</p>
<h4 id="启动和故障恢复"><a href="#启动和故障恢复" class="headerlink" title="启动和故障恢复"></a>启动和故障恢复</h4><p>如果windows启动多个启动项的话，这里可以设置默认的启动项和等待时间（推荐1秒或2秒）。</p>
<h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><p>通常装完系统后，我会把类似<code>TEMP/TMP</code>的变量改成<code>D:\TEMP</code>，别忘了手动在D盘建一个TEMP文件夹，这样把临时文件目录放到D盘根目录。</p>
<h3 id="系统保护"><a href="#系统保护" class="headerlink" title="系统保护"></a>系统保护</h3><p>建议打开C盘的系统保护，关键时候可以救系统一命，当开不开机，或者出现严重问题后，<code>F10</code>开机选择还原点恢复，有时可以神奇的解决问题，这是真的。</p>
<h3 id="远程"><a href="#远程" class="headerlink" title="远程"></a>远程</h3><p>如果有需求则可以打开远程桌面，允许其他电脑使用mstsc访问此电脑。如果访问不了可以在防火墙高级设置，入站规则中打开远程桌面规则，通常在最下面。</p>
<h2 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h2><p>输入法自从Win8以后，经常需要手动设置到以前常用的方式，不过自己也许久未设了，不知是系统自动同步了设置还是其他什么。Win8以后，输入法快捷键变成了<code>Win+Space</code>，而且还有好多别扭的地方。需要自己设置一下。</p>
<p>我个人用的sogou，装完后，可以借助搜狗的输入法管理器。在中文中添加一个美式键盘。设置参考下图，按序号设置，则可以使用<code>Ctrl+Shift</code>和<code>Ctrl+Space</code>。看不清图片可以右键新标签中打开图片查看。<br><img src="/images/%E8%BE%93%E5%85%A5%E6%B3%95%E8%AE%BE%E7%BD%AE.jpg" alt=""></p>
<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>我的软件都装在了D盘根目录，通常软件会在开始菜单下放一些快捷方式，装完后，我会只保留主文件快捷方式在开始菜单下的一个ShortCuts文件夹中，一方面方便搜索，另一方面重装系统时需要把这个文件夹备份，这是为了装系统后少安装一些软件，有些可以直接使用快捷方式启用，但一些贴近的系统软件还得安装，如Office。<br>开始菜单路径：<code>C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Start Menu</code>和<code>C:\ProgramData\Microsoft\Windows\Start Menu</code>，前者为当前用户私用，后者为所有用户公用的。</p>
<p>既然说到软件，顺便提一句，右键快捷方式会有一个设置快捷键的地方，而开始菜单的快捷方式是默认全局快捷键的，比如说开始菜单找到cmd，设置快捷键为<code>Ctrl+Alt+C</code>，全局按都会调出终端的，像Linux的<code>Ctrl+Alt+T</code>一样。</p>
<p>先这些吧，什么时候想到再补充吧。</p>
]]></content>
      <categories>
        <category>总结备份</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>efficiency</tag>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>NGS分析介绍二：运行环境和技能</title>
    <url>/2016/09/NGS-Analysis-Introduction-II-Environment-and-Skills.html</url>
    <content><![CDATA[<h1 id="NGS分析介绍二：运行环境和技能"><a href="#NGS分析介绍二：运行环境和技能" class="headerlink" title="NGS分析介绍二：运行环境和技能"></a>NGS分析介绍二：运行环境和技能</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><p>通常，需要一个性能强劲的机器：服务器、工作站、台式机、笔记本，当然性能越高越好。实验室的师弟妹们不用担心，简单小脚本作业可以用自己机器，或者实验室的小型工作站。当跑大作业（耗时，吃CPU）时，可以用学校的高性能计算平台，只需在自己机器上装一个SSH客户端即可。参考以下两篇文章：</p>
<blockquote>
<ul>
<li><a href="/2016/04/SSH-simple-manual.html">SSH简易使用</a></li>
<li><a href="/2016/05/Simple-manual-for-HPC-in-BUCT.html">Simple manual for HPC in BUCT</a></li>
</ul>
</blockquote>
<a id="more"></a>

<h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><p>因为好多开源软件，Windows运行起来不是很方便。所以操作系统推荐Linux，选一款喜欢的发行版即可，当然Mac OS完全能胜任，国外好多人都喜欢用Mac做学术和开发。</p>
<h2 id="技能"><a href="#技能" class="headerlink" title="技能"></a>技能</h2><h3 id="计算机"><a href="#计算机" class="headerlink" title="计算机"></a>计算机</h3><ul>
<li>Linux入门。要学的命令可参考<a href="/2016/06/Linux-CheatSheets.html#常用命令">Linux CheatSheets</a>，此外还有<a href="http://c.biancheng.net/cpp/linux/" target="_blank" rel="noopener">Linux入门教程</a>，该教程同时也包含Shell。</li>
<li>C/C++/JAVA……。经常需要处理一些数据，可能需要时不时编写一些小工具。</li>
<li>脚本语言。Shell/Python/Perl/Ruby……以及一些开源库，真实太方便了。</li>
<li>学习R/Bioconductor，matlab，会让你事半功倍。</li>
</ul>
<h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><p>因为会经常读英文文献，后期可能会写英文文章，具备良好的读写能力会带来很多便利。不过也没关系，这个都是读写的过程中锻炼出来的，多读，多写，就会锻炼出来。</p>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>skill</tag>
      </tags>
  </entry>
  <entry>
    <title>NGS分析介绍一：前言</title>
    <url>/2016/09/NGS-Analysis-Introduction-I-Preface.html</url>
    <content><![CDATA[<h1 id="NGS分析介绍一：前言"><a href="#NGS分析介绍一：前言" class="headerlink" title="NGS分析介绍一：前言"></a>NGS分析介绍一：前言</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>研究生毕业了，一直想把上学期间的研究工作做一个总结。一方面给自己，不再从事相关工作了，将来肯定会越来越遗忘；另一方面这些东西也能给师弟师妹和相关从事人员一些启发和经验帮助，起到一个入门作用。毕业已经两个月了，当时在学校的时候就有这样的想法，但当时忙于各种毕业论文的事情，此事就暂时搁浅了。现在总归是开始了，后续可能还会有变异检测数据分析系列。我希望能尽可能把我研究生所做的课题做一个完备的总结。</p>
<a id="more"></a>

<h2 id="背景简介"><a href="#背景简介" class="headerlink" title="背景简介"></a>背景简介</h2><blockquote>
<p>上个世纪，DNA双螺旋结构的发现诞生了分子生物学，中心法则的发现解决了遗传信息的传递途径和流向问题，遗传密码的破译解决了遗传信息本身的物质含义，而DNA测序技术的发明使人类得以完备的了解自身的遗传秘密。</p>
</blockquote>
<blockquote>
<p>1977年，Sanger发明了双脱氧链终止法DNA测序技术。基于Sanger测序法，1990年开展了人类基因组计划（human genome project, HGP），包括中国在内的6个国家历时13年，揭开了人类全基因组约2.5万个基因的近30亿个碱基对的秘密。之后，人类基因组单体型图计划（HapMap计划），构建了人类DNA序列中多态位点的常见模式。</p>
</blockquote>
<blockquote>
<p>自2005年以来，Illumina公司的Solexa，罗氏公司的454和ABI公司的SOLiD等新一代测序技术<strong>（Next Generation Sequencing，NGS）</strong>相继诞生。相比之前的Sanger测序，基于大规模平行测序思想的第二代测序技术具有高通量和低成本的特点，因此又被称为高通量测序技术。随着高通量测序技术的出现，基因研究领域快速发展。2008年启动了国际千人基因组计划（1000 Genomes Project），对27个种群的约2500个样本进行测序和研究，旨在提供最详尽的人类遗传变异图谱，并且所有数据全部免费公开，为科研人员提供了极大的便利。</p>
</blockquote>
<blockquote>
<p>随着第二代测序技术的发展，其不足之处也日益凸显，读长较短为后续序列拼接及注释等工作带来困难。以PacBio公司的SMRT测序技术为代表的第三代单分子测序技术涌现出来，其特点就是采取单分子读取技术，读长较长，而且测序过程无需进行PCR扩增，这进一步降低了测序成本。目前还有以纳米孔测序技术为代表的第四代测序技术，该技术完全抛弃了复杂的生物或化学方面的处理，直接根据单个碱基穿过纳米孔通道时引起的电流变化进行测量，但该测序技术还处于实验室阶段，并未进行商业化。不过罗氏公司正逐步放弃第二代测序平台454的业务，转而研发第四代纳米孔测序技术。此外，Illumina和Lifetech等公司也在研发这项技术。通过该技术，将来有望能实现以几小时、数百美元的成本完成人类个体在全基因组范围内的测序。</p>
</blockquote>
<blockquote>
<p>基因组测序技术的快速发展，从根本上改变了人们研究生命科学的方式，同时也推动着基因组学以及其分支学科的发展，甚至促进其他与基因组密切相关学科的产生和创立。</p>
</blockquote>
<blockquote>
<p>——源自我的毕业论文</p>
</blockquote>
<h2 id="给实验室师弟师妹"><a href="#给实验室师弟师妹" class="headerlink" title="给实验室师弟师妹"></a>给实验室师弟师妹</h2><p>因为你们可能是第一次接触生物信息学，第一次接触NGS分析，第一次接触基因组变异检测，会学好多东西。有一些生物方面的东西，但并不难学习。要对自己充满信心，保持一个良好的心态，保持一颗好学的心。</p>
<p>这里给师弟师妹一点忠告，那就是勤奋。勤奋不代表一切，但不可或缺，勤奋好学才能一直进步，相反懒惰带来一些恶劣的品质。你会感谢三年研究生涯的刻苦努力，而不是虚度三年浪费这大好时光。</p>
<h2 id="课余"><a href="#课余" class="headerlink" title="课余"></a>课余</h2><ul>
<li>华大基因的生物信息学公开课件：<a href="http://emuch.net/html/201107/3376518.html" target="_blank" rel="noopener">http://emuch.net/html/201107/3376518.html</a></li>
<li>北京大学的公开课——生物信息学：导论与方法：<a href="https://www.coursera.org/learn/sheng-wu-xin-xi-xue" target="_blank" rel="noopener">https://www.coursera.org/learn/sheng-wu-xin-xi-xue</a></li>
</ul>
<p>这个可能不是和我们课题完全对口，但了解一些周边的知识，有助于自己的学习。</p>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>preface</tag>
      </tags>
  </entry>
  <entry>
    <title>软件开发不能用盖房子来比喻</title>
    <url>/2016/06/Software-development-can-not-analogy-with-building-a-house.html</url>
    <content><![CDATA[<p><a href="http://blog.jobbole.com/101829/" target="_blank" rel="noopener">软件开发不能用盖房子来比喻</a></p>
]]></content>
      <categories>
        <category>收藏链接</category>
      </categories>
      <tags>
        <tag>develop</tag>
        <tag>software</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux CheatSheets</title>
    <url>/2016/06/Linux-CheatSheets.html</url>
    <content><![CDATA[<h2 id="快捷方式"><a href="#快捷方式" class="headerlink" title="快捷方式"></a>快捷方式</h2><figure class="highlight sh"><figcaption><span>goagent-gtk.desktop </span></figcaption><table><tr><td class="code"><pre><span class="line">$ cat goagent-gtk.desktop</span><br><span class="line"><span class="comment">#!/usr/bin/env xdg-open</span></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application</span><br><span class="line">Name=GoAgent GTK</span><br><span class="line">Comment=GoAgent GTK Launcher</span><br><span class="line">Categories=Network;Proxy;</span><br><span class="line">Exec=/usr/bin/env python <span class="string">"/home/zz_zigzag/software/agent/goagent-gtk.py"</span></span><br><span class="line">Icon=/home/zz_zigzag/software/agent/goagent-logo.png</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/beauty/Pixabay_bb4c38c09e2d4450_1000h.jpg" alt=""></p>
<a id="more"></a>
<h2 id="文件-目录"><a href="#文件-目录" class="headerlink" title="文件/目录"></a>文件/目录</h2><ul>
<li>用户字体: ~/.local/share/fonts</li>
<li>hosts: /etc/hosts</li>
<li>软件源: /etc/apt/sources.list</li>
</ul>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul>
<li>Linux命令大全: <a href="http://man.linuxde.net/" target="_blank" rel="noopener">http://man.linuxde.net/</a></li>
<li>mkdir <strong>-p</strong> / rmdir / rm <strong>-rf</strong></li>
<li>chmod 755 * / chown</li>
<li>less more head shuf</li>
<li>cp mv</li>
<li>tail <strong>-f</strong></li>
<li>cat / <strong>tac</strong></li>
<li>cut <strong>-f 2,3 -d “;”</strong> test2.txt </li>
<li>sort <strong>-u -t $’\t’ -k 3,3</strong> filename &gt; filename</li>
<li>tar <strong>z</strong>xvf file.tar.<strong>gz</strong> [j:tar.bz2 Z:tar.Z]</li>
<li>tar <strong>z</strong>cvf file.tar.<strong>gz</strong></li>
<li><a href="http://www.ibm.com/developerworks/cn/linux/l-cn-hardandsymb-links/" target="_blank" rel="noopener">硬链接</a>: ln / 符号链接/软连接: ln -s</li>
<li>sed awk grep uniq <strong>-d/c/u</strong></li>
<li>tee</li>
<li>paste</li>
<li>tr</li>
<li>wget curl</li>
</ul>
<h2 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h2><figure class="highlight sh"><figcaption><span>download</span></figcaption><table><tr><td class="code"><pre><span class="line">sudo apt-get install redshift openssh-server pastebinit unrar classicmenu-indicator vim tree</span><br></pre></td></tr></table></figure>
<ul>
<li>redshift, <a href="https://github.com/zz-zigzag/setups/blob/master/.config/redshift.conf" target="_blank" rel="noopener">~/.config/redshift.conf</a></li>
<li><a href="http://pinyin.sogou.com/linux/" target="_blank" rel="noopener">sogou输入法</a></li>
<li>ClassicMenu Indicator</li>
</ul>
<h2 id="远程桌面"><a href="#远程桌面" class="headerlink" title="远程桌面"></a>远程桌面</h2><p>Linux远程桌面协议为VNC  端口号为5900<br>Windows协议为RDP 端口号3389<br>或双方都ssh，缺点是只能命令行。<br>linux自带的Remmina可以连接windows，但在windows下用VNCviewer不能直接连接linux，<br>解决方案如下：<br>1、安装dconf-editor<br>sudo apt-get install dconf-editor<br>2、用Dconf-editor调整，并访问如下配置路径<br>org &gt; gnome &gt; desktop &gt; remote-access<br>3、取消钩选 “REQUIRE-ENCRYPTION”属性。即可在windows下用UltraVNC Viewer正常连接。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>CheatSheet</tag>
        <tag>Linux</tag>
        <tag>command</tag>
        <tag>software</tag>
      </tags>
  </entry>
  <entry>
    <title>高通量测序及基因组变异数据库的入门使用</title>
    <url>/2016/05/Simple-manual-for-NGS-database.html</url>
    <content><![CDATA[<h1 id="高通量测序及变异数据库的简易使用"><a href="#高通量测序及变异数据库的简易使用" class="headerlink" title="高通量测序及变异数据库的简易使用"></a>高通量测序及变异数据库的简易使用</h1><h2 id="高通量测序数据"><a href="#高通量测序数据" class="headerlink" title="高通量测序数据"></a>高通量测序数据</h2><p>这里主要介绍NCBI的SRA和EBI的ENA，两者同步，数据基本相符，有的<code>study</code>在ENA中有BAM文件，但SRA中没有。网址分别是<br>ENA: <a href="http://www.ebi.ac.uk/ena" target="_blank" rel="noopener">http://www.ebi.ac.uk/ena</a><br>SRA: <a href="http://www.ncbi.nlm.nih.gov/sra" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/sra</a></p>
<p><img src="https://www.ncbi.nlm.nih.gov/Traces/sra/i/g.png" alt=""></p>
<a id="more"></a>

<h3 id="组织结构"><a href="#组织结构" class="headerlink" title="组织结构"></a>组织结构</h3><p>包括<code>stduy</code>、<code>sample</code>、<code>experiment</code>和<code>run</code></p>
<ol>
<li><strong>stduy</strong>: 为一个特定的研究目的，如千人基因组计划就为一个大型课题，它还包含多个子课题。研究课题有一个 <code>SRA</code>与<code>ENA</code>数据库通用的检索号，为<code>DRP/SRP/ERP</code>开头加数字的形式。每一个研究课题需要隶属于一个注册在NCBI的<code>BioProject</code>数据库的项目，一个<code>BioProject</code>的项目可以包含多个研究课题。</li>
<li><strong>sample</strong>: 为测序个体(人或其他物种)，检索号为<code>DRS/ERS/SRS</code>开头加数字的形式。每个测序样本需要在<code>NCBI</code>的<code>BioSample</code>数据库中进行注册并描述相关属性信息，研究课题与测序样本为多对多的关系，即一个课题下可以包含多个样本的测序，而同一个体也可以被不同的课题研究。</li>
<li><strong>experiment</strong>: 为<code>SRA</code>数据库的基本单元，包含着测序实验的描述信息。实验检索号为<code>DRX/ERX/SRX</code>开头加数字的形式。每个实验需隶属一个<code>BioProject</code>的项目，实验与样本为多对一的关系，同一实验只能测序一个样本，同一样本则可能被不同实验测序。</li>
<li><strong>run</strong>: 为下载的基本单元，每个<code>Run</code>对应一个文件，存储测序序列及测序质量等信息，编号为<code>DRR/ERR/SRR</code>开头加数字的形式，一个实验可以包含一个或多个<code>run</code>。<br>例如千人基因组计划先导项目<code>PRJNA61209</code>包括3个研究课题，其中第一个课题的检索号为<code>SRP000031</code>，包含178个测序样本的523个实验。</li>
</ol>
<h3 id="数据下载（三种方法）"><a href="#数据下载（三种方法）" class="headerlink" title="数据下载（三种方法）"></a>数据下载（三种方法）</h3><ol>
<li><strong>FTP:</strong> NCBI: ftp.ncbi.nlm.nih.gov/sra (可以使用IPv6)，EBI: ftp.sra.ebi.ac.uk</li>
<li>使用<a href="http://www.ncbi.nlm.nih.gov/Traces/sra/?view=software" target="_blank" rel="noopener">SRA Toolkit</a>的<code>prefetch</code>，就像<code>$ prefetch SRR390728</code>或<code>$ prefetch --list listfile</code></li>
<li><strong>aspera</strong>，高速文件传输服务，参考<a href="/2016/05/Download-EBI-and-NCBI-data-by-Aspera.html">使用Aspera下载EBI和NCBI数据</a>。</li>
</ol>
<p>参考:<br><a href="http://www.ncbi.nlm.nih.gov/books/NBK242621/" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/books/NBK242621/</a><br><a href="http://www.ebi.ac.uk/ena/browse/read-download" target="_blank" rel="noopener">http://www.ebi.ac.uk/ena/browse/read-download</a><br><a href="http://www.ncbi.nlm.nih.gov/books/NBK51062/#intro.More_detailed_version" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/books/NBK51062/#intro.More_detailed_version</a></p>
<h3 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h3><p>NCBI下载的通常为<code>sra</code>结尾的文件，需使用<code>SRA Toolkit</code>中的<code>$ fastq-dump/sam-dump --split-files SRR390728</code></p>
<h3 id="检索"><a href="#检索" class="headerlink" title="检索"></a>检索</h3><ul>
<li>官网首页可搜索</li>
<li><a href="http://www.ncbi.nlm.nih.gov/Traces/study/" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/Traces/study/</a></li>
<li><a href="http://www.ncbi.nlm.nih.gov/Traces/sra/" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/Traces/sra/</a></li>
<li><a href="http://sra.dnanexus.com/" target="_blank" rel="noopener">DNAnexus</a><br><img src="/images/sra.dnanexus.png" alt=""></li>
</ul>
<h2 id="基因组变异数据"><a href="#基因组变异数据" class="headerlink" title="基因组变异数据"></a>基因组变异数据</h2><ul>
<li><a href="http://www.ncbi.nlm.nih.gov/SNP/" target="_blank" rel="noopener"><strong>dbSNP</strong></a>是关于SNP和indel的数据库</li>
<li>DGV/DGVa/dbVar，结构变异数据库，常用DGV，会收录许多文献发布的变异数据，可按stduy/sample/chromosome/SV type/reference等进行检索，十分方便。</li>
</ul>
<p>DGV: <a href="http://dgv.tcag.ca/dgv/app/home" target="_blank" rel="noopener">http://dgv.tcag.ca/dgv/app/home</a><br>DGVa: <a href="https://www.ebi.ac.uk/dgva" target="_blank" rel="noopener">https://www.ebi.ac.uk/dgva</a><br>dbVar: <a href="http://www.ncbi.nlm.nih.gov/dbvar/" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/dbvar/</a></p>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>introduction</tag>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Aspera下载EBI和NCBI的数据</title>
    <url>/2016/05/Download-EBI-and-NCBI-data-by-Aspera.html</url>
    <content><![CDATA[<h1 id="使用Aspera下载EBI和NCBI的数据"><a href="#使用Aspera下载EBI和NCBI的数据" class="headerlink" title="使用Aspera下载EBI和NCBI的数据"></a>使用Aspera下载EBI和NCBI的数据</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载<a href="http://downloads.asperasoft.com/en/downloads/8?list" target="_blank" rel="noopener">客户端</a>，<a href="http://download.asperasoft.com/download/docs/connect/3.6.2/user_linux/webhelp/index.html" target="_blank" rel="noopener">官网手册</a>，然后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cp ~/.aspera/connect/bin/ascp ~/bin</span><br><span class="line">$ cp ~/.aspera/connect/etc/aspera-license ~/bin</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p><img src="/images/beauty/e836b9072efd073ecd0b4202e54e429efe76e6d31db4104391f0c6.jpg" alt=""></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ascp -k2 -T -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh era-fasp@fasp.sra.ebi.ac.uk:&lt;file or files to download&gt; &lt;download location&gt;</span><br><span class="line">ascp -k2 -T -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh era-fasp@fasp.sra.ebi.ac.uk --host ftp-private.ncbi.nlm.nih.gov --user anonftp --file-list listfile .</span><br><span class="line"><span class="comment"># NCBI: anonftp@ftp.ncbi.nlm.nih.gov</span></span><br></pre></td></tr></table></figure>

<p>参考: <a href="http://www.ebi.ac.uk/ena/browse/read-download#downloading_files_aspera" target="_blank" rel="noopener">http://www.ebi.ac.uk/ena/browse/read-download#downloading_files_aspera</a></p>
<p>可使用<a href="https://github.com/zz-zigzag/bioinformatics/blob/master/scripts/others/asperadown.sh" target="_blank" rel="noopener">自制脚本</a>来下载ENA和SRA数据，运行如下:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ asperadown</span><br><span class="line">Program: asperadown.sh (download files <span class="keyword">from</span> ncbi/ebi)</span><br><span class="line">Version: 0.2.0</span><br><span class="line">Contact: zz_zigzag &lt;zz_zigzag@outlook.com&gt;</span><br><span class="line"></span><br><span class="line">Usage:   asperadown.sh [options] &lt;LIST-FILE&gt; &lt;MAX-RATE(default []bps)&gt; </span><br><span class="line">Options: -n        download <span class="keyword">from</span> ncbi-sra(ftp.ncbi.nlm.nih.gov/130.14.250.13)</span><br><span class="line">         -e        download <span class="keyword">from</span> ebi-ena(fasp.sra.ebi.ac.uk/193.62.192.6)</span><br><span class="line">         -s url<span class="built_in">/ip </span>site <span class="keyword">to</span> download</span><br><span class="line">         -u string<span class="built_in"> user </span><span class="keyword">to</span> sign <span class="keyword">in</span> the site</span><br><span class="line">         -r        max rate of speed[100m]bps</span><br><span class="line">         -h        display this help</span><br><span class="line"></span><br><span class="line">$ asperadown -n list2</span><br><span class="line">$ asperadown -e list2</span><br></pre></td></tr></table></figure>
<p>Example of list file：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">/<span class="number">10</span>G</span><br><span class="line"><span class="regexp">/sra/</span>sra-instant<span class="regexp">/reads/</span>ByRun<span class="regexp">/sra/</span>SRR<span class="regexp">/SRR494/</span>SRR494342/SRR494342.sra</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>software</tag>
        <tag>download</tag>
        <tag>manual</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction for HPC in BUCT</title>
    <url>/2016/05/Simple-manual-for-HPC-in-BUCT.html</url>
    <content><![CDATA[<h1 id="Introduction-for-HPC-in-BUCT"><a href="#Introduction-for-HPC-in-BUCT" class="headerlink" title="Introduction for HPC in BUCT"></a>Introduction for HPC in BUCT</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>官方网站: <a href="http://hpc.buct.edu.cn" target="_blank" rel="noopener">http://hpc.buct.edu.cn</a><br>作业管理系统: IBM Platform LSF<br>更多帮助文档可参考<a href="http://pi.sjtu.edu.cn/doc/" target="_blank" rel="noopener">上交的超算中心文档</a>，但有些咱学校未必能适用。<br>清华HPC手册<a href="/files/清华大学生物高性能计算平台用户使用手册v3.0.docx">下载</a><br>目前<code>qtest</code>及以上的队列可用，<code>qtest</code>免费，<code>qtest</code>以上队列收费</p>
<p><img src="/images/beauty/Pixabay_bb4d33cd992b4450_1000h.jpg" alt=""></p>
<a id="more"></a>

<h2 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h2><p>登陆可参照<strong><a href="/2016/04/SSH-simple-manual.html">SSH简易使用</a></strong></p>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h3 id="最常用"><a href="#最常用" class="headerlink" title="最常用"></a>最常用</h3><p>提交作业，COMMAND 加引号是为了防止命令内<code>&gt;</code>重定向错误</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ bsub -q<span class="built_in"> QUEUE </span>-n Z -i INPUTFILE -o %J.out -e %J.err <span class="string">"COMMAND"</span></span><br></pre></td></tr></table></figure>
<p>特殊情况下需要指定host_name来避免单节点内存压力太大。<br>如串行的SVseq2需要读入参考基因组3G，节点的内存为6*4G，有的节点可以同时运行8、12、甚至20个作业，一旦作业使用内存超过24G，效率就会降低。</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">bsub </span>-m host_name ……</span><br></pre></td></tr></table></figure>
<p>查看作业</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">bjobs</span></span><br><span class="line"><span class="keyword">$ </span><span class="keyword">bjobs </span>-a -l</span><br></pre></td></tr></table></figure>
<p>查看队列</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">bqueue</span></span><br><span class="line"><span class="keyword">$ </span><span class="keyword">bqueue </span>qtest</span><br></pre></td></tr></table></figure>
<p>杀死作业</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">bkill </span>JOBID</span><br></pre></td></tr></table></figure>
<p>添加<code>~/bin/bkillall</code>如下，可使用该命令杀死当前用户所有作业（输错命令时使用，慎用，会杀掉别人在该用户下提交的作业）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bkill `bjobs | grep ^[0-9] | awk <span class="string">'&#123;print $1&#125;'</span> `</span><br></pre></td></tr></table></figure>

<p>查看标准输出(stderr/stdout)</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">bpeek</span></span><br><span class="line"><span class="keyword">$ </span><span class="keyword">bpeek </span>JOBID</span><br></pre></td></tr></table></figure>
<p>可在.bashrc里面加入如下，方便简单调用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> bq=<span class="string">'bqueues'</span></span><br><span class="line"><span class="built_in">alias</span> bs=<span class="string">'bsub'</span></span><br><span class="line"><span class="built_in">alias</span> bj=<span class="string">'bjobs'</span></span><br></pre></td></tr></table></figure>

<h3 id="一般常用"><a href="#一般常用" class="headerlink" title="一般常用"></a>一般常用</h3><ul>
<li>bhist: 查看历史作业信息</li>
<li>bhosts: 查看计算节点</li>
</ul>
<h3 id="不怎么用"><a href="#不怎么用" class="headerlink" title="不怎么用"></a>不怎么用</h3><p>busers/bmod/bstop/bresume/qdel/qstat……</p>
<h3 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h3><ol>
<li>杀死僵尸进程: <code>bkill -r JOBID</code></li>
<li>查看作业标准输出(一直查看)，home目录下有<code>.lsbatch</code>目录，找到对应以<code>JOBID.out</code>结尾的文件，然后<code>tail -f $outfile</code>即可</li>
</ol>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>introduction</tag>
        <tag>BUCT</tag>
        <tag>HPC</tag>
      </tags>
  </entry>
  <entry>
    <title>Comparison of different number of threads to run pindel</title>
    <url>/2016/05/Comparison-of-different-number-threads-to-run-pindel.html</url>
    <content><![CDATA[<h1 id="Comparison-of-different-number-of-threads-to-run-pindel"><a href="#Comparison-of-different-number-of-threads-to-run-pindel" class="headerlink" title="Comparison of different number of threads to run pindel"></a>Comparison of different number of threads to run pindel</h1><h2 id="note"><a href="#note" class="headerlink" title="note"></a>note</h2><ul>
<li>Download pindel from <a href="https://github.com/genome/pindel" target="_blank" rel="noopener">https://github.com/genome/pindel</a> at 2016/05/25</li>
<li>Test data: pindel-master/demo</li>
<li>Pindel version 0.2.5b8, 20151210.</li>
<li>Intel® Xeon(R) CPU E5-1620 v2 @ 3.70GHz × 8</li>
<li>Mermory 16G</li>
<li>Ubuntu 15.04</li>
</ul>
<p><img src="/images/beauty/Pixabay_bb423dca9c284250_1000h.jpg" alt=""></p>
<a id="more"></a>

<h2 id="1-thread"><a href="#1-thread" class="headerlink" title="1 thread"></a>1 thread</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">time ../pindel -i simulated_config.txt -f simulated_reference.fa -o bamtest -c ALL <span class="comment"># 14.95s user 0.10s system 99% cpu 15.066 total</span></span><br><span class="line">mkdir result_1</span><br><span class="line">cp bamtest* &gt; result_2</span><br></pre></td></tr></table></figure>

<h2 id="4-threads"><a href="#4-threads" class="headerlink" title="4 threads"></a>4 threads</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">time ../pindel -i simulated_config.txt -f simulated_reference.fa -o bamtest -c ALL -T 4 <span class="comment"># 23.92s user 0.11s system 285% cpu 8.429 total</span></span><br><span class="line">mkdir result_2</span><br><span class="line">cp bamtest* &gt; result_2</span><br></pre></td></tr></table></figure>
<p>result data download <a href="/files/differ_pindel_callset_in_multiply_threads.tar.gz">here</a></p>
<h2 id="Compare"><a href="#Compare" class="headerlink" title="Compare"></a>Compare</h2><h3 id="md5"><a href="#md5" class="headerlink" title="md5"></a>md5</h3><p>Do <code>md5sum *</code> in <code>result_1</code> and <code>result_2</code></p>
<table>
<thead>
<tr>
<th align="center">md5 in result1</th>
<th align="center">md5 in result2</th>
<th align="center">result file</th>
</tr>
</thead>
<tbody><tr>
<td align="center">d41d8cd98f……</td>
<td align="center">d41d8cd98f00……</td>
<td align="center">bamtest_BP</td>
</tr>
<tr>
<td align="center">d41d8cd98f……</td>
<td align="center">d41d8cd98f00……</td>
<td align="center">bamtest_CloseEndMapped</td>
</tr>
<tr>
<td align="center">8601dc53a8……</td>
<td align="center">8601dc53a8ec……</td>
<td align="center">bamtest_D</td>
</tr>
<tr>
<td align="center">d41d8cd98f……</td>
<td align="center">d41d8cd98f00……</td>
<td align="center">bamtest_INT_final</td>
</tr>
<tr>
<td align="center">a92f5b2110……</td>
<td align="center">1fd2fe1eb99f……</td>
<td align="center">bamtest_INV</td>
</tr>
<tr>
<td align="center">d41d8cd98f……</td>
<td align="center">d41d8cd98f00……</td>
<td align="center">bamtest_LI</td>
</tr>
<tr>
<td align="center">653f906ec7……</td>
<td align="center">421062310b1b……</td>
<td align="center">bamtest_RP</td>
</tr>
<tr>
<td align="center">e52cdc04a9……</td>
<td align="center">3aa3fa3ddd19……</td>
<td align="center">bamtest_SI</td>
</tr>
<tr>
<td align="center">0017be684e……</td>
<td align="center">0017be684e37……</td>
<td align="center">bamtest_TD</td>
</tr>
</tbody></table>
<h3 id="diff-in-string"><a href="#diff-in-string" class="headerlink" title="diff in string"></a>diff in string</h3><p>Using Beyond Compare</p>
<h4 id="bamtest-INV"><a href="#bamtest-INV" class="headerlink" title="bamtest_INV"></a>bamtest_INV</h4><p>Just some different order</p>
<figure class="highlight plain"><figcaption><span>result_1</span></figcaption><table><tr><td class="code"><pre><span class="line">ATTTGGATCTTGGGCACAGGGACCTCAACCGACAAACCTAGCATGTCATAAGTTCGTGGCACTATGAAGCTTTCCCTATAAACCAGTCCACTCAAGTGAT                     	+	49528	0	SAMPLE1	@49848&#x2F;1</span><br><span class="line">ATTTGGATCTTGGGCACAGGGACCTCAACCGACAAACCTAGCATGTCATAAGTTCGTGGCACTATGAAGCTTTCCCTATAAACCAGTCCACTCAAGTGAT                     	+	49528	37	SAMPLE1	@49848&#x2F;1</span><br><span class="line">ATTTGGATCTTGGGCACAGGGACCTCAACCGACAAACCTAGCATGTCATAAGTTCGTGGCACTATGAAGCTTTCCCTATAAACCAGTCCACTCAAGTGAT                     	+	49528	37	SAMPLE1	@49848&#x2F;2</span><br><span class="line">ATTTGGATCTTGGGCACAGGGACCTCAACCGACAAACCTAGCATGTCATAAGTTCGTGGCACTATGAAGCTTTCCCTATAAACCAGTCCACTCAAGTGAT                     	+	49528	0	SAMPLE1	@49848&#x2F;1</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><figcaption><span>result_2</span></figcaption><table><tr><td class="code"><pre><span class="line">ATTTGGATCTTGGGCACAGGGACCTCAACCGACAAACCTAGCATGTCATAAGTTCGTGGCACTATGAAGCTTTCCCTATAAACCAGTCCACTCAAGTGAT                     	+	49528	37	SAMPLE1	@49848&#x2F;2</span><br><span class="line">ATTTGGATCTTGGGCACAGGGACCTCAACCGACAAACCTAGCATGTCATAAGTTCGTGGCACTATGAAGCTTTCCCTATAAACCAGTCCACTCAAGTGAT                     	+	49528	0	SAMPLE1	@49848&#x2F;1</span><br><span class="line">ATTTGGATCTTGGGCACAGGGACCTCAACCGACAAACCTAGCATGTCATAAGTTCGTGGCACTATGAAGCTTTCCCTATAAACCAGTCCACTCAAGTGAT                     	+	49528	0	SAMPLE1	@49848&#x2F;1</span><br><span class="line">ATTTGGATCTTGGGCACAGGGACCTCAACCGACAAACCTAGCATGTCATAAGTTCGTGGCACTATGAAGCTTTCCCTATAAACCAGTCCACTCAAGTGAT                     	+	49528	37	SAMPLE1	@49848&#x2F;1</span><br></pre></td></tr></table></figure>
<h4 id="bamtest-SI"><a href="#bamtest-SI" class="headerlink" title="bamtest_SI"></a>bamtest_SI</h4><p>A little insignificant difference (SUM_MS and order)</p>
<figure class="highlight plain"><figcaption><span>result_1</span></figcaption><table><tr><td class="code"><pre><span class="line">8	I 44	NT 44 &quot;CACGCCCATGTGCTAACTTGGTGAGCATCACTAAAACTACAACC&quot;	ChrID 3	BP 50198	50199	BP_range 50198	50201	Supports 2	2	+ 0	0	- 2	2	S1 3	SUM_MS 74	3	NumSupSamples 1	1	SAMPLE1 0 0 0 0 2 2	SAMPLE2 4 4 0 0 0 0	SAMPLE3 4 4 0 0 0 0</span><br><span class="line">TAAACTAGTCATCAAGTATTGCTTGCCCCCAACCCGACATTCGACGGCGCAATTTCACGCGTGTATGAAGTTTCTCAGGGTGTGCGTCTGTCCCCCATCA                                            CAACCTGCCAACGTTTCTACCTGGATTAGACAACCCATTGTTTCGGATCAAGATAAGTCCTGCTTGCTCACATACCTCAACCTCATGGTTTGCAGAGTTT</span><br><span class="line">                                                      TCACGCGTGTATGAAGTTTCTCAGGGTGTGCGTCTGTCCCCCATCACACGCCCATGTGCTAACTTGGTGAGCATCACTAAAACTACAACCCAAGCTTCCA                                              	-	50498	37	SAMPLE1	@50268&#x2F;2</span><br><span class="line">                                                      TCACGCGTGTATGAAGTTTCTCAGGGTGTGCGTCTGTCCCCCATCACACGCCCATGTGCTAACTTGGTGAGCATCACTAAAACTACAACCCAAGCTTCCA                                              	-	50498	37	SAMPLE1	@50268&#x2F;1</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><figcaption><span>result_2</span></figcaption><table><tr><td class="code"><pre><span class="line">8	I 44	NT 44 &quot;CACGCCCATGTGCTAACTTGGTGAGCATCACTAAAACTACAACC&quot;	ChrID 3	BP 50198	50199	BP_range 50198	50201	Supports 2	2	+ 0	0	- 2	2	S1 3	SUM_MS 37	3	NumSupSamples 1	1	SAMPLE1 0 0 0 0 2 2	SAMPLE2 4 4 0 0 0 0	SAMPLE3 4 4 0 0 0 0</span><br><span class="line">TAAACTAGTCATCAAGTATTGCTTGCCCCCAACCCGACATTCGACGGCGCAATTTCACGCGTGTATGAAGTTTCTCAGGGTGTGCGTCTGTCCCCCATCA                                            CAACCTGCCAACGTTTCTACCTGGATTAGACAACCCATTGTTTCGGATCAAGATAAGTCCTGCTTGCTCACATACCTCAACCTCATGGTTTGCAGAGTTT</span><br><span class="line">                                                      TCACGCGTGTATGAAGTTTCTCAGGGTGTGCGTCTGTCCCCCATCACACGCCCATGTGCTAACTTGGTGAGCATCACTAAAACTACAACCCAAGCTTCCA                                              	-	50398	0	SAMPLE1	@50268&#x2F;1</span><br><span class="line">                                                      TCACGCGTGTATGAAGTTTCTCAGGGTGTGCGTCTGTCCCCCATCACACGCCCATGTGCTAACTTGGTGAGCATCACTAAAACTACAACCCAAGCTTCCA                                              	-	50498	37	SAMPLE1	@50268&#x2F;2</span><br></pre></td></tr></table></figure>
<h4 id="bamtest-RP"><a href="#bamtest-RP" class="headerlink" title="bamtest_RP"></a>bamtest_RP</h4><p>sort it by coordinate: <code>$ sort bamtest_RP -k2 -n &gt; bamtest_RP_sort</code><br>some different in content and deviation in coordinate<br><img src="/images/diff_bamtest_RP_sort.png" alt=""></p>
<h2 id="conclusion"><a href="#conclusion" class="headerlink" title="conclusion"></a>conclusion</h2><p>In my opinion, multiply threads may have little influence in SVs but <code>RP</code><br>result data download <a href="/files/differ_pindel_callset_in_multiply_threads.tar.gz">here</a></p>
]]></content>
      <categories>
        <category>生物信息</category>
      </categories>
      <tags>
        <tag>Pindel</tag>
        <tag>call SVs</tag>
      </tags>
  </entry>
  <entry>
    <title>自由上网，仅此而已</title>
    <url>/2016/05/Free-Internet-access-just-do-it.html</url>
    <content><![CDATA[<h1 id="自由上网，仅此而已"><a href="#自由上网，仅此而已" class="headerlink" title="自由上网，仅此而已"></a>自由上网，仅此而已</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>网上搜翻墙工具的时候，有很多”傲慢与偏见”的工具，它们常被用来导流到一些存在”偏见”的网站。我并不喜欢那样的工具，因为它把我们从一种偏见带到了另一种偏见。我们只是向往自由，向往更开放的互联网。 以下多为设置代理方式。通过代理上网相当于代理服务器是你的上级，理论上它可以监控或更改所有流量，所有明文数据都可能被窃取。这个风险需要注意，<code>http</code>协议的网站谨慎输入账号密码等敏感信息。 <img src="/images/beauty/Pixabay_bb493dc09c2d4250_1000h.jpg" alt=""></p>
<a id="more"></a>

<h2 id="hosts"><a href="#hosts" class="headerlink" title="hosts"></a>hosts</h2><p>多年以前，通过简单修改hosts就可以登陆youtube.com、facebook.com这样的网站。但现在好多已经不能用了，不过还是可以试一试，<strong><em><a href="https://github.com/search?utf8=%E2%9C%93&q=hosts" target="_blank" rel="noopener">github上搜索hosts</a></em></strong>可以找到好多资源。</p>
<h2 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h2><p>如果能上IPv6网站，可以通过设置DNS为<code>2001:778::37</code>。该服务将Ipv4的网站转化为IPv6的代理网址，相当于开启了一个IPv6的代理。就目前看，IPv6上的墙还是比较低的。之前写过<strong><em><a href="/2016/05/Use-IPv6-to-touch-Google.html">用IPv6访问Google的文章</a></em></strong>，供参考。</p>
<h2 id="GoAgent"><a href="#GoAgent" class="headerlink" title="GoAgent"></a>GoAgent</h2><p>此为谷歌的代理服务，网上教程很多，如果不想申请GAE账号，可使用<strong><em><a href="https://pan.baidu.com/s/1skNWWOl" target="_blank" rel="noopener">此版本</a></em></strong>（来自<strong><em><a href="http://pan.baidu.com/share/home?uk=3289127818#category/type=0" target="_blank" rel="noopener">龙卷风浏览器加速</a></em></strong>），<code>OmegaOptions.bak</code>为<code>SwitchyOmega</code>规则备份文件（可导入），配合Chrome使用。需要注意,最好导入CA.crt证书，不然代理的网站会报https不信任，Windows导入为受信任的颁发机构，Chrome导入方法: 设置 &gt; HTTPS/SSL &gt; 授权中心 &gt; 导入。</p>
<h2 id="VPN"><a href="#VPN" class="headerlink" title="VPN"></a>VPN</h2><p>推荐使用最新Opera开发者版，自带VPN，<strong><em><a href="http://get.opera.com/ftp/pub/opera-developer/" target="_blank" rel="noopener">获取网址</a></em></strong>。此外可购买VPS自建VPN或直接购买VPN，可信度需要自己评估。</p>
<h2 id="2016-6补充"><a href="#2016-6补充" class="headerlink" title="2016-6补充"></a>2016-6补充</h2><p>之前都致力于寻找免费的翻墙办法，后来终于顿悟，免费的都比较麻烦或体验不好，所以我个人已经开始收费的VPN了，如shadowsocks，这里列几个服务商：</p>
<blockquote>
<ol>
<li><a href="https://shadowsocks.com/" target="_blank" rel="noopener">https://shadowsocks.com/</a></li>
<li><a href="https://infinitysocks.com/" target="_blank" rel="noopener">https://infinitysocks.com/</a></li>
</ol>
</blockquote>
<p>都不贵，一百左右一年，各自有长短处，我并没有都尝试，目前用的最后一个，可无限终端登录。</p>
<h2 id="2017-6再补充"><a href="#2017-6再补充" class="headerlink" title="2017-6再补充"></a>2017-6再补充</h2><p>使用VPS自建服务更为合算，如<a href="http://www.vultr.com/?ref=7181023" target="_blank" rel="noopener">vultr</a>和<a href="https://m.do.co/c/4659f8462bbc" target="_blank" rel="noopener">digitalocean</a>等VPS服务，然后可使用<a href="https://github.com/teddysun/shadowsocks_install" target="_blank" rel="noopener">shadowsocks一键安装脚本</a>安装后，自己使用或多账号分享他人，再进一步可使用<a href="https://github.com/orvice/ss-panel" target="_blank" rel="noopener">ss-panel</a>管理注册账号。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>IPv6</tag>
        <tag>HTTPS</tag>
        <tag>Chrome</tag>
        <tag>break</tag>
        <tag>freedom</tag>
        <tag>VPN</tag>
        <tag>GoAgent</tag>
      </tags>
  </entry>
  <entry>
    <title>Use IPv6 to touch Google</title>
    <url>/2016/05/Use-IPv6-to-touch-Google.html</url>
    <content><![CDATA[<h1 id="Use-IPv6-to-touch-Google"><a href="#Use-IPv6-to-touch-Google" class="headerlink" title="Use IPv6 to touch Google"></a>Use IPv6 to touch Google</h1><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><p>我只是想用谷歌搜索，谷歌学术，以及Chrome能更顺畅的同步用户数据，但还是需要费尽周折。<br>其实谷歌这种网站，目前IPv6可以正常解析，并未被污染，但学校的IPv6并没有自动获取DNS，这里推荐两个DNS服务器：</p>
<blockquote>
<ol>
<li>ordns.he.net: 2001:470:20::2</li>
<li>北邮: 2001:da8:202:10::36</li>
</ol>
</blockquote>
<p><img src="/images/beauty/e835b20e29fc043ed95c4518b74b4195e173eac818b5144497f0c778a3ec_640.jpg" alt=""></p>
<a id="more"></a>

<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="多网卡"><a href="#多网卡" class="headerlink" title="多网卡"></a>多网卡</h3><p>如果是多网卡上网，某网卡IPv6，另网卡（如无线网卡）IPv4，可在设置界面里禁用该网卡不用的协议，避免优先级问题。<br>Linux禁用某网卡的IPv6或IPv4可修改<code>/etc/sysctl.conf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net.ipv6.conf.all.disable_ipv6 &#x3D; 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 &#x3D; 1</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 &#x3D; 1 # lo ipv6 disable</span><br><span class="line">net.ipv6.conf.eth0.disable_ipv6 &#x3D; 1 # eth0 ipv6 disable</span><br></pre></td></tr></table></figure>
<p>然后运行<code>sudo sysctl -p</code>，可用<code>ifconfig</code>或<code>ip a</code>查看网卡信息。</p>
<h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><p>如果是Linux，可能需要设置IPv6优先，可通过修改<code>/etc/gai.conf</code>为如下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">label ::1&#x2F;128       0</span><br><span class="line">label ::&#x2F;0          1</span><br><span class="line">label 2002::&#x2F;16    2</span><br><span class="line">label ::&#x2F;96         3</span><br><span class="line">label ::ffff:0:0&#x2F;96 4</span><br><span class="line">label fec0::&#x2F;10     5</span><br><span class="line">label fc00::&#x2F;7      6</span><br><span class="line">#label 2001:0::&#x2F;32   7</span><br></pre></td></tr></table></figure>
<p>并确保<code>#precedence ::ffff:0:0/96  100</code>行注释掉。</p>
<h3 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h3><p>如果是Chrome，可在<code>chrome://net-internals/#hsts</code>添加<code>www.google.com.hk</code>和数据同步服务器<code>client4.google.com</code>，以确保这两个网站以https协议打开。<br>可在<code>chrome://net-internals/#dns</code>中查看浏览器中DNS信息，在<code>chrome://sync-internals/</code>中查看Chrome用户数据同步信息。</p>
<h3 id="hosts"><a href="#hosts" class="headerlink" title="hosts"></a>hosts</h3><p>如果实在不行，还有下下策，改hosts，参考：</p>
<blockquote>
<p><a href="https://github.com/lennylxx/ipv6-hosts" target="_blank" rel="noopener">https://github.com/lennylxx/ipv6-hosts</a><br><a href="https://github.com/ipv6-hosts/ipv6-hosts" target="_blank" rel="noopener">https://github.com/ipv6-hosts/ipv6-hosts</a></p>
</blockquote>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h3><p>使用该方法，有时还能访问facebook.com和twitter.com等网站，<br>不过大陆的<a href="https://zh.wikipedia.org/wiki/域名服务器缓存污染" target="_blank" rel="noopener">域名服务器缓存污染</a>实在太严重了，还好Google是被放行的，使用UDP的DNS很容易被篡改，可用<a href="https://github.com/jedisct1/dnscrypt-proxy" target="_blank" rel="noopener">DNS代理</a>避免，类似的还有<a href="https://github.com/henices/Tcp-DNS-proxy" target="_blank" rel="noopener">这个</a>等。<br>后来写过<a href="/2016/05/Free-Internet-access-just-do-it.html">自由上网，仅此而已</a>，供参考。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>IPv6</tag>
        <tag>HTTPS</tag>
        <tag>DNS</tag>
        <tag>Google</tag>
        <tag>hosts</tag>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>缘起，网站由来</title>
    <url>/2016/05/The-origin-of-the-site.html</url>
    <content><![CDATA[<h1 id="缘起，网站由来"><a href="#缘起，网站由来" class="headerlink" title="缘起，网站由来"></a>缘起，网站由来</h1><h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><h3 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h3><p>多年前，就想申请一个域名，也曾时不时查一查中意的域名。前几天，上万网随便搜搜，由于自己的网名<code>zz_zigzag</code>，下划线不符合规则（曾因下划线不能注册好多东西，所以一直在考虑是不是要换个名字……）。后来发现<code>xiaodong.site</code>可用，还特价，首年4元，从此开启了我的站长之路。<br><img src="/images/beauty/Pixabay_bb4b3bcd9c2f44415e_1000h.jpg" alt=""></p>
<a id="more"></a>

<h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><p>申请域名的时候就倾向于做一个博客，因为没有其他的东西，所以这是开始。与其说是博客，还不如是随身笔记，我把一切想记的东西记在这里。最最开始，本科的时候，在网易开过博客，大多是转载；后来转到CSDN，主要写ACM/IPCP的一些解题报告。也看过其他人的独立博客，想着哪一天开始自己做一个，现在开始了，虽然有点晚，但终于起步。</p>
<h3 id="选择博客系统"><a href="#选择博客系统" class="headerlink" title="选择博客系统"></a>选择博客系统</h3><p>自己也考察了许多，博客系统从Wordpress、Octopress、Jekyll到最后Hexo，由复杂到简单，博客本来就应该是以写内容为主要工作，管理越简单越好。另外，不需要空间，直接使用GitHub或Coding（原GitCafe）提供的Pages服务。</p>
<h3 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h3><p>网上教程很多，其实最好的是读一遍<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">官方文档</a>，然后选一个主题，我选的是<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT</a>，通读主题网站，基本能很好的搭建出来。</p>
<h3 id="我用的第三方服务"><a href="#我用的第三方服务" class="headerlink" title="我用的第三方服务"></a>我用的第三方服务</h3><ul>
<li>评论系统用的DISQUS，多说也试了，但觉得这个更好，功能更多一些，而且整体使用HTTPS。</li>
<li>流量统计用的百度统计，页脚显示网站PV用的不蒜子统计，博客显示阅读次数用的leancloud，目测不蒜子统计为用url简单区分，且看不到后台数据，换域名会导致数据丢失。而leancloud根据应用key和站内地址统计，且可管理后台数据。</li>
<li>内容分享用的AddThis，原因就是这个UI做的最好看，并且有国内的几个常用分享。</li>
<li>搜索服务目前用的Swiftype，试用15天，到期后如果不能用计划转<a href="https://community.algolia.com/docsearch/" target="_blank" rel="noopener">DocSearch</a>或弄localsearch算了。</li>
<li>提交搜索引擎，参考: <a href="http://tengj.top/2016/03/14/hexo6seo/" target="_blank" rel="noopener">hexo干货系列：（六）hexo提交搜索引擎（百度+谷歌）</a>，需要注意，GitHub Pages禁止百度蜘蛛。</li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="SSL-HTTPS"><a href="#SSL-HTTPS" class="headerlink" title="SSL/HTTPS"></a>SSL/HTTPS</h4><p>GitHub Pages的自定义域名并无SSL证书，我使用了CloudFlare服务，它提供了DNS+CDN服务，原理是用户和CDN服务器间为SSL加密，但CloudFlare和Github之间未加密。CloudFlare有许多功能，可在控制面板上依次查看。</p>
<p>更多参考文章:</p>
<ul>
<li><a href="https://developer.ubuntu.com/zh-cn/blog/2016/02/17/how-host-your-static-site-https-github-pages-and-cloudflare/" target="_blank" rel="noopener">How to host your static site with HTTPS on GitHub Pages and CloudFlare</a></li>
<li><a href="https://sheharyar.me/blog/free-ssl-for-github-pages-with-custom-domains/" target="_blank" rel="noopener">Set Up SSL on Github Pages With Custom Domains for Free</a></li>
<li><a href="https://konklone.com/post/github-pages-now-sorta-supports-https-so-use-it" target="_blank" rel="noopener">GitHub Pages Now (Sorta) Supports HTTPS, So Use It</a></li>
<li><a href="https://blog.keanulee.com/2014/10/11/setting-up-ssl-on-github-pages.html" target="_blank" rel="noopener">Setting up SSL on GitHub Pages</a></li>
</ul>
<p>HTTPS的好处有很多，可以保证用户和网站的通信不容易被窃取或审查（即使是中间人攻击用户也可以察觉）。</p>
<h4 id="关于图片"><a href="#关于图片" class="headerlink" title="关于图片"></a>关于图片</h4><p>图文并茂更有助于提升阅读体验，虽然大部分情况图片并不相关。我使用<a href="http://www.dashmote.com/" target="_blank" rel="noopener">dashmote</a>下载一些免版税的图片，当然也可以在<a href="https://www.flickr.com/" target="_blank" rel="noopener">flickr</a>或<a href="https://www.pinterest.com/" target="_blank" rel="noopener">Pinterest</a>上面下载无版权限制的图片。然后使用<a href="https://tinypng.com/" target="_blank" rel="noopener">tinypng</a>压缩一下，放到<code>source/images</code>目录管理。</p>
<h3 id="主题细节修改"><a href="#主题细节修改" class="headerlink" title="主题细节修改"></a>主题细节修改</h3><p>我稍微修改了一些不太喜欢的样式和显示内容，具体哪些已经记不清了，这些工作都是一次性的，然后就可以畅快的写文章了。</p>
<h4 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h4><p>博客内容同时deploy到GitHub和Coding的pages，网址分别为：</p>
<blockquote>
<p><a href="https://zz-zigzag.github.io" target="_blank" rel="noopener">https://zz-zigzag.github.io</a><br><a href="http://zz_zigzag.coding.me" target="_blank" rel="noopener">http://zz_zigzag.coding.me</a></p>
</blockquote>
<p>本来CNAME国内解析为Coding，海外解析为GitHub，但后来用了CloudFlare，这都作罢。<br>除了<code>public</code>目录会deploy到网站上，还有其他配置和内容文件，这也应做好备份，我把Hexo博客目录整体做了网盘同步，当然排除了<code>public</code>和<code>.deploy_git</code>这两个目录，我个人用的跨平台的同步工具<a href="https://www.jianguoyun.com/" target="_blank" rel="noopener">坚果云</a>。</p>
<h2 id="企业邮箱"><a href="#企业邮箱" class="headerlink" title="企业邮箱"></a>企业邮箱</h2><p>域名有了，顺便弄个企业邮箱吧，我选择的<a href="https://exmail.qq.com/" target="_blank" rel="noopener">腾讯企业邮</a>，免费，像QQ邮箱一样好用。</p>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>5月31日补充，由于CloudFlare大陆访问速度欠佳及经常抽风，已暂时放弃https，等以后有更好的解决方案再使用。同时disqus也换用多说。</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>plugin</tag>
        <tag>Node.js</tag>
        <tag>blog</tag>
        <tag>hexo</tag>
        <tag>HTTPS</tag>
        <tag>github</tag>
        <tag>coding</tag>
      </tags>
  </entry>
  <entry>
    <title>SSH入门用法</title>
    <url>/2016/04/SSH-simple-manual.html</url>
    <content><![CDATA[<h1 id="SSH入门用法"><a href="#SSH入门用法" class="headerlink" title="SSH入门用法"></a>SSH入门用法</h1><h2 id="服务器（当前为Ubuntu）"><a href="#服务器（当前为Ubuntu）" class="headerlink" title="服务器（当前为Ubuntu）"></a>服务器（当前为Ubuntu）</h2><ol>
<li><code>sudo apt-get install openssh-server</code>，会自动运行并开机启动。如果没有则<code>sudo service ssh start</code></li>
<li>配置文件：<code>sudo vi /etc/ssh/sshd_config</code>，其中默认端口<code>Port 22</code>，更多可用<a href="http://www.webmin.com/" target="_blank" rel="noopener">Webmin</a>可视化配置。</li>
<li>需要注意，可能会存在长时间无操作自动断线的问题。可在服务器配置中添加<code>ClientAliveInterval 300</code>和<code>ClientAliveCountMax 5</code>或者在客户端配置文件<code>ssh_config</code>添加<code>ServerAliveInterval 300</code>和<code>ServerAliveCountMax 5</code>两项，意为每300秒发送一次<code>Alive</code>信号保持连接，如果由于网络问题，对方未响应会在5次后断开。不过类似Xshell这种SSH客户端可能不存在此问题。</li>
</ol>
<a id="more"></a>

<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><ul>
<li>可终端使用<code>ssh user@ip</code>或其他工具如<code>Xshell</code>进行远程登陆。</li>
<li>免密码登陆<ol>
<li>使用<code>ssh-keygen</code>生成密钥，默认保存在<code>~/.ssh/</code>目录，<code>id_rsa</code>为私钥（注意保密），<code>id_rsa.pub</code>为公钥。</li>
<li><code>ssh-copy-id user@ip</code>将公钥拷进服务器的<code>~/.ssh/authorized_keys</code>或手动添加<code>cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</code></li>
</ol>
</li>
<li>更简洁登陆<br>可添加如下内容至<code>~/.ssh/config</code>，然后可使用<code>ssh hpc</code>连接。如果日常使用较多可在<code>~/.zshrc(~/.bashrc)</code>中设置别名<code>alias s=&#39;ssh hpc&#39;</code>，可通过<code>s</code>快速登陆。 例如我当前的~/.ssh/config<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Host hpc</span><br><span class="line">HostName 202.4.4.4</span><br><span class="line">Port 22</span><br><span class="line">User zz_zigzag</span><br></pre></td></tr></table></figure></li>
<li>调试：可使用<code>ssh -v user@ip</code>查看登陆详细过程，方便登陆失败时找原因。</li>
</ul>
<h3 id="sftp"><a href="#sftp" class="headerlink" title="sftp"></a>sftp</h3><p>ssh内置sftp服务，可使用<code>scp</code>或<code>sftp</code>命令交互文件，或者使用<code>FileZilla</code>等工具进行可视化操作。</p>
<p>之后写过<a href="/2017/08/ssh-advanced-usage.html">SSH高级用法</a>，供参考</p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>SSH</tag>
        <tag>introduction</tag>
      </tags>
  </entry>
  <entry>
    <title>代码库源配置</title>
    <url>/2016/04/Code-repository-management.html</url>
    <content><![CDATA[<h1 id="代码库源配置"><a href="#代码库源配置" class="headerlink" title="代码库源配置"></a>代码库源配置</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul>
<li>Ubuntu: /etc/apt/sources.list</li>
<li>ArchLinux: /etc/pacman.d/mirrorlist</li>
<li>CentOS: /etc/yum.repo.d/CentOS-Base.repo</li>
</ul>
<a id="more"></a>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a><a href="https://www.python.org/" target="_blank" rel="noopener">Python</a></h2><ul>
<li>Get it by <code>sudo apt-get install python python3</code></li>
<li><a href="https://pypi.python.org/pypi" target="_blank" rel="noopener"><strong>PyPI(PythonPackageIndex)</strong></a><ul>
<li>download <a href="https://pypi.python.org/pypi/pip/" target="_blank" rel="noopener">pip</a></li>
<li><code>python setup.py install</code></li>
<li><code>vi ~/.pip/pip.conf</code><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"><span class="built_in">index</span>-url = http<span class="variable">s:</span>//pypi.tuna.tsinghua.edu.<span class="keyword">cn</span>/simple</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<h2 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a><a href="http://www.cpan.org/src/" target="_blank" rel="noopener">Perl</a></h2><ul>
<li>Get it by <code>sudo apt-get install perl</code></li>
<li><a href="http://www.cpan.org/" target="_blank" rel="noopener">CPAN</a><ul>
<li><code>sudo apt-get install perl-modules</code></li>
<li><code>vi ~/.cpan/CPAN/MyConfig.pm</code></li>
<li>change the urllist in config to mirror like [<a href="http://mirror.bit.edu.cn/CPAN/]" target="_blank" rel="noopener">http://mirror.bit.edu.cn/CPAN/]</a></li>
<li>Install modules <code>perl -MCPAN -e shell</code> or <code>cpan install GD</code> or <code>cpan GD</code></li>
<li>Automatic/manual installation, in <code>~/.cpan/build</code><figure class="highlight bash"><figcaption><span>manual</span></figcaption><table><tr><td class="code"><pre><span class="line">$ perl Makefile.PL</span><br><span class="line">$ make</span><br><span class="line">$ make <span class="built_in">test</span> (optional, <span class="built_in">test</span> dependence and feedback <span class="string">"all test ok"</span>)</span><br><span class="line">$ make install</span><br><span class="line">or</span><br><span class="line">$ perl Build.PL</span><br><span class="line">$ ./Build</span><br><span class="line">$ ./Build <span class="built_in">test</span></span><br><span class="line">$ ./Build install</span><br></pre></td></tr></table></figure>
<h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a><a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js</a></h2></li>
</ul>
</li>
<li>Get it by <code>sudo apt-get install nodejs</code></li>
<li><a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm</a><ul>
<li>Get npm <code>sudo apt-get install npm</code></li>
<li>Taobao镜像: <a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org/</a></li>
<li>配置<ul>
<li><code>npm set registry https://npm.tuna.tsinghua.edu.cn/</code></li>
<li>或者<code>~/.npmrc</code> 添加 <code>registry=https://npm.tuna.tsinghua.edu.cn</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a><a href="http://www.ruby-lang.org" target="_blank" rel="noopener">Ruby</a></h2><ul>
<li>Get Gem <code>sudo apt-get install gem</code><ul>
<li>Taobao镜像: <a href="https://ruby.taobao.org/" target="_blank" rel="noopener">https://ruby.taobao.org/</a></li>
<li><code>gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/</code></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>develop</tag>
        <tag>Linux</tag>
        <tag>library</tag>
        <tag>Python</tag>
        <tag>mirror</tag>
        <tag>repository</tag>
        <tag>open source</tag>
        <tag>Ruby</tag>
        <tag>Node.js</tag>
        <tag>Perl</tag>
      </tags>
  </entry>
  <entry>
    <title>开源镜像</title>
    <url>/2016/04/Open-source-mirror.html</url>
    <content><![CDATA[<h1 id="开源镜像"><a href="#开源镜像" class="headerlink" title="开源镜像"></a>开源镜像</h1><h3 id="BUCT-北京化工大学"><a href="#BUCT-北京化工大学" class="headerlink" title="BUCT(北京化工大学)"></a>BUCT(北京化工大学)</h3><ul>
<li><a href="http://ubuntu.buct.edu.cn" target="_blank" rel="noopener">http://ubuntu.buct.edu.cn</a> (IPv4)</li>
<li><a href="http://ubuntu.buct6.edu.cn" target="_blank" rel="noopener">http://ubuntu.buct6.edu.cn</a> (IPv6)</li>
</ul>
<a id="more"></a>
<h3 id="BIT-北京理工大学"><a href="#BIT-北京理工大学" class="headerlink" title="BIT(北京理工大学)"></a>BIT(北京理工大学)</h3><ul>
<li><a href="http://mirror.bit.edu.cn" target="_blank" rel="noopener">http://mirror.bit.edu.cn</a> (IPv4 only)</li>
<li><a href="http://mirror.bit6.edu.cn" target="_blank" rel="noopener">http://mirror.bit6.edu.cn</a> (IPv6 only)</li>
</ul>
<h3 id="BJTU-北京交通大学"><a href="#BJTU-北京交通大学" class="headerlink" title="BJTU(北京交通大学)"></a>BJTU(北京交通大学)</h3><ul>
<li><a href="http://mirror.bjtu.edu.cn" target="_blank" rel="noopener">http://mirror.bjtu.edu.cn</a> (IPv4 only)</li>
<li><a href="http://mirror6.bjtu.edu.cn" target="_blank" rel="noopener">http://mirror6.bjtu.edu.cn</a> (IPv6 only)</li>
<li><a href="http://debian.bjtu.edu.cn" target="_blank" rel="noopener">http://debian.bjtu.edu.cn</a> (IPv4+IPv6)</li>
</ul>
<h3 id="Tsinghua-清华大学"><a href="#Tsinghua-清华大学" class="headerlink" title="Tsinghua(清华大学)"></a>Tsinghua(清华大学)</h3><ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn</a> (IPv4+IPv6)</li>
<li><a href="https://mirrors6.tuna.tsinghua.edu.cn" target="_blank" rel="noopener">https://mirrors6.tuna.tsinghua.edu.cn</a> (IPv6)</li>
<li><a href="https://mirrors4.tuna.tsinghua.edu.cn" target="_blank" rel="noopener">https://mirrors4.tuna.tsinghua.edu.cn</a> (IPv4)</li>
</ul>
<h3 id="Aliyun-阿里云"><a href="#Aliyun-阿里云" class="headerlink" title="Aliyun(阿里云)"></a>Aliyun(阿里云)</h3><ul>
<li><a href="http://mirrors.aliyun.com/" target="_blank" rel="noopener">http://mirrors.aliyun.com/</a></li>
</ul>
<h3 id="163-网易"><a href="#163-网易" class="headerlink" title="163(网易)"></a>163(网易)</h3><ul>
<li><a href="http://mirrors.163.com/" target="_blank" rel="noopener">http://mirrors.163.com/</a></li>
</ul>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>develop</tag>
        <tag>IPv6</tag>
        <tag>mirror</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 学习备忘</title>
    <url>/2016/04/Python-learning.html</url>
    <content><![CDATA[<h1 id="Python-学习备忘"><a href="#Python-学习备忘" class="headerlink" title="Python 学习备忘"></a>Python 学习备忘</h1><p>学习：<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="noopener">廖雪峰Python教程</a></p>
<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = input();</span><br><span class="line">print(<span class="string">'hello world'</span>)</span><br><span class="line">print(<span class="number">100</span> + <span class="number">200</span>)</span><br><span class="line">a = <span class="string">'zhang'</span></span><br><span class="line">print(<span class="string">'hello'</span>, a)</span><br><span class="line">print(<span class="string">'hello %s'</span> % zhang)</span><br><span class="line">print(<span class="string">'hello %s %s'</span> %(a,<span class="string">'zhang'</span>))</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># list</span></span><br><span class="line">classmates = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line">len(classmates)</span><br><span class="line">classmates[<span class="number">1</span>]</span><br><span class="line">classmates[<span class="number">-1</span>] <span class="comment"># last one, -1 -2 ...</span></span><br><span class="line">classmates.append(<span class="string">'zhang'</span>)</span><br><span class="line">classmates.insert(<span class="number">0</span>, <span class="string">'time'</span>)</span><br><span class="line">classmates.pop()</span><br><span class="line">classmates.pop(<span class="number">1</span>)</span><br><span class="line">classmates[<span class="number">1</span>] = <span class="number">123</span></span><br><span class="line"></span><br><span class="line">a = [<span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>]</span><br><span class="line">a.sort()</span><br><span class="line"></span><br><span class="line"><span class="comment"># tuple, likely const list</span></span><br><span class="line">classmates = (<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># dict likely map in C++</span></span><br><span class="line">d = &#123;<span class="string">'Michael'</span>: <span class="number">95</span>, <span class="string">'Bob'</span>: <span class="number">75</span>, <span class="string">'Tracy'</span>: <span class="number">85</span>&#125;</span><br><span class="line">d[<span class="string">'Jack'</span>] = <span class="number">90</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">'Thomas'</span> <span class="keyword">in</span> d :</span><br><span class="line">    ...</span><br><span class="line">d.get(<span class="string">'Thomas'</span>) <span class="comment"># if not exist, return None and print nothing </span></span><br><span class="line">d.get(<span class="string">'Thomas'</span>, <span class="number">-1</span>) <span class="comment"># if not exist, set -1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#set</span></span><br><span class="line">s = set([<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>])</span><br><span class="line">s.add(<span class="number">4</span>)</span><br><span class="line">s.remove(<span class="number">4</span>)</span><br><span class="line">s1 = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">s2 = set([<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">print(s1 &amp; s2, s1 | s2)</span><br></pre></td></tr></table></figure>

<h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># if else</span></span><br><span class="line">a = input()</span><br><span class="line"><span class="keyword">if</span> a &gt; <span class="number">10</span>:</span><br><span class="line">    print(<span class="string">'good'</span>)</span><br><span class="line"><span class="keyword">elif</span> a &gt; <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'boy'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'!'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># for and while</span></span><br><span class="line">names = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    print(<span class="string">'hello'</span>, name)</span><br><span class="line">    </span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    sum = sum + x</span><br><span class="line">print(sum)</span><br><span class="line"></span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line">n = <span class="number">99</span></span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    sum = sum + n</span><br><span class="line">    n = n - <span class="number">2</span></span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure>

<h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p><code>int(), float(), str(), bool()</code><br><code>list(), tuple(), set()</code></p>
<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br><span class="line"></span><br><span class="line"><span class="comment"># return as return None</span></span><br><span class="line"><span class="comment"># if function in file test.py</span></span><br><span class="line"><span class="keyword">from</span> test <span class="keyword">import</span> my_abs</span><br><span class="line"></span><br><span class="line"><span class="comment"># do nothing</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nothing</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Judge </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isinstance(x, (int, float)):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">'bad operand type'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># return multiply data as tuple</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(x, y, step, angle=<span class="number">0</span>)</span>:</span></span><br><span class="line">    nx = x + step * math.cos(angle)</span><br><span class="line">    ny = y - step * math.sin(angle)</span><br><span class="line">    <span class="keyword">return</span> nx, ny</span><br><span class="line">x, y = move(...)</span><br><span class="line">r = move(...)</span><br><span class="line"></span><br><span class="line"><span class="comment"># something about defalut parameter, need const</span></span><br><span class="line"><span class="comment"># test 1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_end</span><span class="params">(L=[])</span>:</span> <span class="comment"># L = [], object is a var when define the function</span></span><br><span class="line">    L.append(<span class="string">'END'</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"><span class="comment"># test 2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_end</span><span class="params">(L=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> L <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        L = []</span><br><span class="line">    L.append(<span class="string">'END'</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line">    </span><br><span class="line"><span class="comment"># variable parameter</span></span><br><span class="line"><span class="comment"># test 1, numbers as a tuple or list</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(numbers)</span>:</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line">calc([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="comment"># test 2, numbers as a tuple</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(*numbers)</span>:</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line">calc(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">calc(*nums)</span><br><span class="line"></span><br><span class="line"><span class="comment"># keyword parameter</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name, age, **kw)</span>:</span></span><br><span class="line">    print(<span class="string">'name:'</span>, name, <span class="string">'age:'</span>, age, <span class="string">'other:'</span>, kw)</span><br><span class="line">person(<span class="string">'Michael'</span>, <span class="number">30</span>)</span><br><span class="line">person(<span class="string">'Bob'</span>, <span class="number">35</span>, city=<span class="string">'Beijing'</span>)</span><br><span class="line">person(<span class="string">'Adam'</span>, <span class="number">45</span>, gender=<span class="string">'M'</span>, job=<span class="string">'Engineer'</span>)</span><br><span class="line">extra = &#123;<span class="string">'city'</span>: <span class="string">'Beijing'</span>, <span class="string">'job'</span>: <span class="string">'Engineer'</span>&#125;</span><br><span class="line">person(<span class="string">'Jack'</span>, <span class="number">24</span>, **extra)</span><br><span class="line"><span class="comment"># only accept city and job  </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name, age, *, city, job)</span>:</span></span><br><span class="line">    print(name, age, city, job)</span><br><span class="line">person(<span class="string">'Jack'</span>, <span class="number">24</span>, city=<span class="string">'Beijing'</span>, job=<span class="string">'Engineer'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># mix used </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(a, b, c=<span class="number">0</span>, *args, **kw)</span>:</span></span><br><span class="line">    print(<span class="string">'a ='</span>, a, <span class="string">'b ='</span>, b, <span class="string">'c ='</span>, c, <span class="string">'args ='</span>, args, <span class="string">'kw ='</span>, kw)</span><br><span class="line">f1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">'a'</span>, d = <span class="number">1</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">(a, b, c=<span class="number">0</span>, *, d, **kw)</span>:</span></span><br><span class="line">    print(<span class="string">'a ='</span>, a, <span class="string">'b ='</span>, b, <span class="string">'c ='</span>, c, <span class="string">'d ='</span>, d, <span class="string">'kw ='</span>, kw)</span><br><span class="line">f2(<span class="number">1</span>, <span class="number">2</span>, d=<span class="number">99</span>, ext=<span class="literal">None</span>)</span><br><span class="line">args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">f1(*args, **kw)</span><br><span class="line">args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">kw = &#123;<span class="string">'d'</span>: <span class="number">99</span>, <span class="string">'x'</span>: <span class="string">'#'</span>&#125;</span><br><span class="line">f2(*args, **kw)</span><br><span class="line"></span><br><span class="line"><span class="comment"># recursion function</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> n * fact(n - <span class="number">1</span>)</span><br><span class="line">fact(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># tail recursion</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n, temp)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> temp</span><br><span class="line">    <span class="keyword">return</span> fact(n - <span class="number">1</span>, n * temp)</span><br></pre></td></tr></table></figure>

<h2 id="高级特性"><a href="#高级特性" class="headerlink" title="高级特性"></a>高级特性</h2><blockquote>
<ul>
<li>代码越少越好，越简单越好，开发效率越高</li>
<li>1行代码能实现，决不写5行代码</li>
</ul>
</blockquote>
<h3 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Slice</span></span><br><span class="line">L = [<span class="string">'Michael'</span>, <span class="string">'Sarah'</span>, <span class="string">'Tracy'</span>, <span class="string">'Bob'</span>, <span class="string">'Jack'</span>]</span><br><span class="line">S = L[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">S = L[:<span class="number">3</span>]</span><br><span class="line">S = L[<span class="number">-2</span>:]</span><br><span class="line"></span><br><span class="line">L = list(range(<span class="number">100</span>))</span><br><span class="line">S = L[:<span class="number">10</span>:<span class="number">2</span>]</span><br><span class="line">S = L[::<span class="number">5</span>]</span><br><span class="line">S = L[:]</span><br><span class="line"></span><br><span class="line">(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)[:<span class="number">3</span>]</span><br><span class="line"><span class="string">'ABCDEFG'</span>[::<span class="number">2</span>]</span><br><span class="line"><span class="string">'ABCDEFG'</span>[:<span class="number">3</span>]</span><br></pre></td></tr></table></figure>

<h3 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ch <span class="keyword">in</span> <span class="string">'ABC'</span>:</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> d = &#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">3</span>&#125;:</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># can it iterable</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line">isinstance(<span class="string">'abc'</span>, Iterable)</span><br><span class="line">isinstance([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], Iterable)</span><br><span class="line">isinstance(<span class="number">123</span>, Iterable)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, value <span class="keyword">in</span> enumerate([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]):</span><br><span class="line">    print(i, value)</span><br><span class="line"><span class="keyword">for</span> x, y <span class="keyword">in</span> [(<span class="number">1</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">4</span>), (<span class="number">3</span>, <span class="number">9</span>)]:</span><br><span class="line">    print(x, y)</span><br></pre></td></tr></table></figure>

<h3 id="列表生成式"><a href="#列表生成式" class="headerlink" title="列表生成式"></a>列表生成式</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">list(range(<span class="number">1</span>, <span class="number">11</span>))</span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">L = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)</span><br><span class="line">    L.append(x * x)</span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line">[x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line">[x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>) <span class="keyword">if</span> x % <span class="number">2</span>== <span class="number">0</span>]</span><br><span class="line">[m + n <span class="keyword">for</span> m <span class="keyword">in</span> <span class="string">'ABC'</span> <span class="keyword">for</span> n <span class="keyword">in</span> <span class="string">'XYZ'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">[d <span class="keyword">for</span> d <span class="keyword">in</span> os.listdir(<span class="string">'.'</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5</span></span><br><span class="line">d = &#123;<span class="string">'x'</span>: <span class="string">'A'</span>, <span class="string">'y'</span>: <span class="string">'B'</span>, <span class="string">'z'</span>: <span class="string">'C'</span>&#125;</span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> d.items():</span><br><span class="line">    print(k, <span class="string">'='</span>, v)</span><br><span class="line"><span class="comment"># 6</span></span><br><span class="line">d = &#123;<span class="string">'x'</span>: <span class="string">'A'</span>, <span class="string">'y'</span>: <span class="string">'B'</span>, <span class="string">'z'</span>: <span class="string">'C'</span>&#125;</span><br><span class="line">[k + <span class="string">'='</span> + v <span class="keyword">for</span> km v <span class="keyword">in</span> d.items()]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7</span></span><br><span class="line">L = [<span class="string">'Hello'</span>, <span class="string">'World'</span>, <span class="string">'IBM'</span>, <span class="string">'Apple'</span>]</span><br><span class="line">[s.lower() <span class="keyword">for</span> s <span class="keyword">in</span> L]</span><br></pre></td></tr></table></figure>

<h3 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h3><p>列表元素可以动态推算，不用完整的list</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">L = [x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">g = (x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line">next(g)</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> g:</span><br><span class="line">    print(n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flb</span><span class="params">(max)</span></span></span><br><span class="line">    n, a, b = 0, 0, 1</span><br><span class="line">    <span class="keyword">while</span> n &lt; max</span><br><span class="line">        print(b)</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'done'</span></span><br><span class="line">f = fib(<span class="number">6</span>)</span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flb</span><span class="params">(max)</span></span></span><br><span class="line">    n, a, b = 0, 0, 1</span><br><span class="line">    <span class="keyword">while</span> n &lt; max:</span><br><span class="line">        <span class="keyword">yield</span> b</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'done'</span></span><br><span class="line">f = fib(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">odd</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'step 1'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    print(<span class="string">'step 2'</span>)</span><br><span class="line">    <span class="keyword">yield</span>(<span class="number">3</span>)</span><br><span class="line">    print(<span class="string">'step 3'</span>)</span><br><span class="line">    <span class="keyword">yield</span>(<span class="number">5</span>)</span><br><span class="line">o = odd()</span><br><span class="line">next(o)</span><br><span class="line">next(o)</span><br><span class="line">next(o)</span><br><span class="line"></span><br><span class="line"><span class="comment"># call generator manually:</span></span><br><span class="line">g = fib(<span class="number">6</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        x = next(g)</span><br><span class="line">        print(<span class="string">'g:'</span>, x)</span><br><span class="line">    <span class="keyword">except</span> StopIteration <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'Generator return value:'</span>, e.value)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line"><span class="comment"># 杨辉三角</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">triangles</span><span class="params">()</span>:</span></span><br><span class="line">    l = [<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">yield</span> l</span><br><span class="line">        l = [l[i + <span class="number">1</span>] + l[i] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(l) - <span class="number">1</span>)]</span><br></pre></td></tr></table></figure>

<h3 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line"></span><br><span class="line"><span class="comment"># Iterable </span></span><br><span class="line">isinstance([], Iterable)</span><br><span class="line">isinstance(&#123;&#125;, Iterable)</span><br><span class="line">isinstance(<span class="string">'abc'</span>, Iterable)</span><br><span class="line">isinstance((x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)), Iterable)</span><br><span class="line">isinstance(<span class="number">100</span>, Iterable) <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Iterator, which can called by next()</span></span><br><span class="line">isinstance((x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)), Iterator)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string"><span class="meta">&gt;&gt;&gt; </span>isinstance([], Iterator)</span></span><br><span class="line"><span class="string">False</span></span><br><span class="line"><span class="string"><span class="meta">&gt;&gt;&gt; </span>isinstance(&#123;&#125;, Iterator)</span></span><br><span class="line"><span class="string">False</span></span><br><span class="line"><span class="string"><span class="meta">&gt;&gt;&gt; </span>isinstance('abc', Iterator)</span></span><br><span class="line"><span class="string">False</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>
<ul>
<li>凡是可作用于<code>for</code>循环的对象都是<code>Iterable</code>类型</li>
<li>凡是可作用于<code>next()</code>函数的对象都是<code>Iterator</code>类型，它们表示一个惰性计算的序列</li>
<li>集合数据类型如<code>list</code>、<code>dict</code>、<code>str</code>等是<code>Iterable</code>但不是<code>Iterator</code>，不过可以通过<code>iter()</code>函数获得一个<code>Iterator</code>对象。</li>
<li>Python的<code>for</code>循环本质上就是通过不断调用<code>next()</code>函数实现的</li>
</ul>
<h2 id="函数式变成"><a href="#函数式变成" class="headerlink" title="函数式变成"></a>函数式变成</h2><h3 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#变量可以指向函数，函数名也是变量</span></span><br><span class="line">f = abs</span><br><span class="line">f(<span class="number">-10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#传入函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y, f)</span></span></span><br><span class="line"><span class="function">    <span class="title">return</span> <span class="title">f</span><span class="params">(x)</span> + <span class="title">f</span><span class="params">(y)</span></span></span><br><span class="line"><span class="function"><span class="title">add</span><span class="params">(<span class="number">-4</span>, <span class="number">5</span>, abs)</span></span></span><br></pre></td></tr></table></figure>
<h4 id="map-reduce"><a href="#map-reduce" class="headerlink" title="map/reduce"></a>map/reduce</h4><ul>
<li><code>map()</code>接受两个参数，一个是函数，一个是<code>Iterable</code>,<code>map</code>将传入函数作用到序列的每一个元素，并把结果作为新的<code>Iterator</code>返回<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">def <span class="keyword">f</span>(<span class="keyword">x</span>)：</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">x</span>*<span class="keyword">x</span></span><br><span class="line">r = <span class="keyword">map</span>(<span class="keyword">f</span>, <span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">list</span>(r))</span><br><span class="line"># integer <span class="keyword">to</span> str</span><br><span class="line"><span class="keyword">list</span>(<span class="keyword">map</span>(str, <span class="built_in">range</span>(<span class="number">10</span>)))</span><br></pre></td></tr></table></figure></li>
<li><code>reduce()</code>也是两个参数，第一个参数是一个函数，这个函数也有两个参数，<code>reduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">reduce(add, range(<span class="number">10</span>))</span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x * <span class="number">10</span> + y</span><br><span class="line">reduce(fn, range(<span class="number">10</span>))</span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2int</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> x * <span class="number">10</span> + y</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">char2num</span><span class="params">(s)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'0'</span>: <span class="number">0</span>, <span class="string">'1'</span>: <span class="number">1</span>, <span class="string">'2'</span>: <span class="number">2</span>, <span class="string">'3'</span>: <span class="number">3</span>, <span class="string">'4'</span>: <span class="number">4</span>, <span class="string">'5'</span>: <span class="number">5</span>, <span class="string">'6'</span>: <span class="number">6</span>, <span class="string">'7'</span>: <span class="number">7</span>, <span class="string">'8'</span>: <span class="number">8</span>, <span class="string">'9'</span>: <span class="number">9</span>&#125;[s]</span><br><span class="line">    <span class="keyword">return</span> reduce(fn, map(char2num, s))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># lambda</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">char2num</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">'0'</span>: <span class="number">0</span>, <span class="string">'1'</span>: <span class="number">1</span>, <span class="string">'2'</span>: <span class="number">2</span>, <span class="string">'3'</span>: <span class="number">3</span>, <span class="string">'4'</span>: <span class="number">4</span>, <span class="string">'5'</span>: <span class="number">5</span>, <span class="string">'6'</span>: <span class="number">6</span>, <span class="string">'7'</span>: <span class="number">7</span>, <span class="string">'8'</span>: <span class="number">8</span>, <span class="string">'9'</span>: <span class="number">9</span>&#125;[s]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2int</span><span class="params">(s)</span></span></span><br><span class="line"><span class="function">    <span class="title">return</span> <span class="title">reduce</span><span class="params">(lambda x, y: x * <span class="number">10</span> + y, map<span class="params">(char2num, s)</span>)</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function"># <span class="title">test</span> 1</span></span><br><span class="line"><span class="function"><span class="title">def</span> <span class="title">normalize</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> name[<span class="number">0</span>].upper() + name[<span class="number">1</span>:].lower()</span><br><span class="line">L1 = [<span class="string">'adam'</span>, <span class="string">'LISA'</span>, <span class="string">'barT'</span>]</span><br><span class="line">L2 = list(map(normalize, L1))</span><br><span class="line">print(L2)</span><br><span class="line"><span class="comment"># test 2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prod</span><span class="params">(L)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> reduce(<span class="keyword">lambda</span> x, y: x * y, L)</span><br><span class="line">print(<span class="string">'3 * 5 * 7 * 9 ='</span>, prod([<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]))</span><br><span class="line"><span class="comment"># test 3</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2float</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">char2num</span><span class="params">(s)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'0'</span>: <span class="number">0</span>, <span class="string">'1'</span>: <span class="number">1</span>, <span class="string">'2'</span>: <span class="number">2</span>, <span class="string">'3'</span>: <span class="number">3</span>, <span class="string">'4'</span>: <span class="number">4</span>, <span class="string">'5'</span>: <span class="number">5</span>, <span class="string">'6'</span>: <span class="number">6</span>, <span class="string">'7'</span>: <span class="number">7</span>, <span class="string">'8'</span>: <span class="number">8</span>, <span class="string">'9'</span>: <span class="number">9</span>&#125;[s]</span><br><span class="line">    <span class="keyword">return</span> reduce(<span class="keyword">lambda</span> x, y: x * <span class="number">10</span> + y, map(char2num, s.split(<span class="string">'.'</span>)[<span class="number">0</span>])) + reduce(<span class="keyword">lambda</span> x, y: x / <span class="number">10</span> + y, map(char2num, reversed(s.split(<span class="string">'.'</span>)[<span class="number">1</span>])))/<span class="number">10</span></span><br></pre></td></tr></table></figure>

<h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p>和<code>map()</code>类似，<code>filter()</code>把函数作用于每个元素，根据返回值True还是false决定保留或丢弃此元素</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">not_empty</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s <span class="keyword">and</span> s.strip()</span><br><span class="line">list(filter(not_empty, [<span class="string">'A'</span>, <span class="string">''</span>, <span class="string">'B'</span>, <span class="literal">None</span>, <span class="string">'C'</span>, <span class="string">'  '</span>]))</span><br></pre></td></tr></table></figure>

<h4 id="sorted"><a href="#sorted" class="headerlink" title="sorted"></a>sorted</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sorted([<span class="number">36</span>, <span class="number">5</span>, <span class="number">-12</span>, <span class="number">9</span>, <span class="number">-21</span>])</span><br><span class="line">sorted([<span class="number">36</span>, <span class="number">5</span>, <span class="number">-12</span>, <span class="number">9</span>, <span class="number">-21</span>], key = abs)</span><br><span class="line">sorted([<span class="string">'bob'</span>, <span class="string">'about'</span>, <span class="string">'Zoo'</span>, <span class="string">'Credit'</span>], key=str.lower)</span><br><span class="line">sorted([<span class="string">'bob'</span>, <span class="string">'about'</span>, <span class="string">'Zoo'</span>, <span class="string">'Credit'</span>], key=str.lower, reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># test 1</span></span><br><span class="line">L = [(<span class="string">'Bob'</span>, <span class="number">75</span>), (<span class="string">'Adam'</span>, <span class="number">92</span>), (<span class="string">'Bart'</span>, <span class="number">66</span>), (<span class="string">'Lisa'</span>, <span class="number">88</span>)]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">by_name</span><span class="params">(t)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> t[<span class="number">0</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">by_score</span><span class="params">(t)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> t[<span class="number">1</span>]</span><br><span class="line">L2 = sorted(L, key = by_score, reverse = <span class="literal">True</span>)</span><br><span class="line">L2 = sorted(L, key=by_name)</span><br></pre></td></tr></table></figure>

<h4 id="返回函数"><a href="#返回函数" class="headerlink" title="返回函数"></a>返回函数</h4><ul>
<li><strong><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431835236741e42daf5af6514f1a8917b8aaadff31bf000" target="_blank" rel="noopener">高阶函数</a></strong>除了可以接受函数作为参数，还可以作为结果返回函数</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lazy_sum</span><span class="params">(*args)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sum</span><span class="params">()</span>:</span></span><br><span class="line">        ax = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> args:</span><br><span class="line">            ax = ax + n</span><br><span class="line">        <span class="keyword">return</span> ax</span><br><span class="line">    <span class="keyword">return</span> sum</span><br></pre></td></tr></table></figure>

<h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><ul>
<li><code>lambda x: x * x</code> 匿名函数有个限制，就是只能有一个表达式，不用写<code>return</code>。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="keyword">lambda</span> x: x*x</span><br><span class="line">f(<span class="number">5</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span>: x*x + y*y</span><br></pre></td></tr></table></figure>

<h3 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014318435599930270c0381a3b44db991cd6d858064ac0000" target="_blank" rel="noopener">装饰器</a></h3><ul>
<li>函数对象有一个<code>__name__</code>属性，可以拿到函数的名字<code>foo.__name__</code></li>
<li>在函数代码运行期间动态增加功能的方式，成为装饰器<code>Decorator</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(func)</span></span></span><br><span class="line"><span class="function">    @<span class="title">functools</span>.<span class="title">wraps</span><span class="params">(func)</span></span></span><br><span class="line"><span class="function">    <span class="title">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span></span></span><br><span class="line"><span class="function">        <span class="title">print</span><span class="params">(<span class="string">'call %s():'</span> %func.__name__)</span></span></span><br><span class="line"><span class="function">        <span class="title">return</span> <span class="title">func</span><span class="params">(*args, **kw)</span></span></span><br><span class="line"><span class="function">    <span class="title">return</span> <span class="title">wrapper</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line">@log # top of function, same as now = log(now)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">now</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'hello world'</span>)</span><br><span class="line">now()</span><br><span class="line"><span class="comment"># decorator need parameter</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorator</span><span class="params">(func)</span>:</span></span><br><span class="line"><span class="meta">        @functools.wraps(func)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">            print(<span class="string">'%s %s():'</span> % (text, func.__name__))</span><br><span class="line">            <span class="keyword">return</span> func(*args, **kw)</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line">    <span class="keyword">return</span> decorator</span><br><span class="line"><span class="meta">@log('execute')</span></span><br><span class="line"><span class="comment"># now = log('execute')(now)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">now</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'2015-3-25'</span>)</span><br></pre></td></tr></table></figure>

<h3 id="偏函数"><a href="#偏函数" class="headerlink" title="偏函数"></a><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143184474383175eeea92a8b0439fab7b392a8a32f8fa000" target="_blank" rel="noopener">偏函数</a></h3><ul>
<li><code>functools.partial</code>的作用就是，把一个函数的某些参数给固定住，返回一个新的函数。</li>
<li>创建偏函数时，可以接受函数对象、<code>args</code>和<code>**kw</code>这三个参数</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">int(<span class="string">'12345'</span>, base = <span class="number">2</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">int2</span><span class="params">(x, base = <span class="number">2</span>)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> int(x, base)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line">int2 = functools.partial(int , base = <span class="number">2</span>)</span><br><span class="line">int2(<span class="string">'100000'</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">kw = &#123; 'base': 2 &#125;</span></span><br><span class="line"><span class="string">int('10010', **kw)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">max2 = functools.partial(max, <span class="number">10</span>)</span><br><span class="line">max2(<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">args = (10, 5, 6, 7)</span></span><br><span class="line"><span class="string">max(*args)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment"># 3</span></span><br></pre></td></tr></table></figure>

<h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><ul>
<li>包 -&gt; 模块 -&gt; 函数<br><img src="/images/python-%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95-1.png" alt=""></li>
<li>文件名<code>www.py</code>的模块名是<code>mycompany.web.www</code>，<code>utils.py</code>两个文件的模块名分别是<code>mycompany.utils</code>和<code>mycompany.web.utils</code></li>
<li>自己的模块不要和系统自带的冲突即可<h3 id="使用模块"><a href="#使用模块" class="headerlink" title="使用模块"></a>使用模块</h3></li>
<li>任何模块代码的第一个字符串都被视为模块的文档注释</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: uft-8 -*-</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># list: </span></span><br><span class="line">    argv </span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span></span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<ul>
<li>安装第三方模块，用pip或pip3(python3), <code>pip3 install Pillow</code></li>
<li><code>import mymodule</code> 会搜索sys.path下的目录，</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; import sys</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; sys.path</span><br><span class="line">[<span class="string">''</span>, <span class="string">'/usr/lib/python3.4'</span>, <span class="string">'/usr/lib/python3.4/plat-x86_64-linux-gnu'</span>, <span class="string">'/usr/lib/python3.4/lib-dynload'</span>, <span class="string">'/home/zz_zigzag/.local/lib/python3.4/site-packages'</span>, <span class="string">'/usr/local/lib/python3.4/dist-packages'</span>, <span class="string">'/usr/lib/python3/dist-packages'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>或者使用环境变量<code>PYTHONPATH</code>自定义</li>
</ul>
<h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><h3 id="类和实例"><a href="#类和实例" class="headerlink" title="类和实例"></a>类和实例</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="title">object</span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>, name, score)</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">self</span>.name = name</span><br><span class="line">    <span class="keyword">self</span>.score = score</span><br><span class="line">bart = Student(<span class="string">'Bart'</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure>

<h3 id="访问限制"><a href="#访问限制" class="headerlink" title="访问限制"></a>访问限制</h3><ul>
<li>以<code>__</code>开头的变量为私有变量，如果要访问通过<code>_类名__name</code>，</li>
<li><code>_name</code>，“虽然我可以被访问你，但请把我视为私有变量<h3 id="继承和多态"><a href="#继承和多态" class="headerlink" title="继承和多态"></a>继承和多态</h3></li>
<li>对扩展开放：允许新增<code>Animal</code>子类</li>
<li>对修改封闭：不需要修改<code>Animal</code>类型的函数，也可以覆盖</li>
</ul>
<h3 id="获取对象信息"><a href="#获取对象信息" class="headerlink" title="获取对象信息"></a>获取对象信息</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1 type</span></span><br><span class="line">type(<span class="number">123</span>) == type (<span class="number">456</span>)</span><br><span class="line">type(<span class="number">123</span>) == int</span><br><span class="line"><span class="comment"># 2 type</span></span><br><span class="line"><span class="keyword">import</span> types</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">type(fn).types.FunctionType</span><br><span class="line">type(abs)==types.BuiltinFunctionType</span><br><span class="line">type(<span class="keyword">lambda</span> x: x)==types.LambdaType</span><br><span class="line">type((x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)))==types.GeneratorType<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 3 type</span></span><br><span class="line"><span class="string"># object -&gt; Animal -&gt; Dog</span></span><br><span class="line"><span class="string">a = Dog()</span></span><br><span class="line"><span class="string">isinstance(h, Dog)</span></span><br><span class="line"><span class="string">isinstance(h, Animal)</span></span><br><span class="line"><span class="string">isinstance('</span>a<span class="string">', str)</span></span><br><span class="line"><span class="string">isinstance(123, int)</span></span><br><span class="line"><span class="string">isinstance(b'</span>a<span class="string">', bytes)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">isinstance([1, 2, 3], (list, tuple))</span></span><br><span class="line"><span class="string">isinstance((1, 2, 3), (list, tuple))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 4 all</span></span><br><span class="line"><span class="string">print(dir('</span>ABC<span class="string">'))</span></span><br><span class="line"><span class="string">len('</span>ABC<span class="string">') # 函数内部为 '</span>ABC<span class="string">'__len__(), 自己的类如果有这个函数，也可以用len()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># getattr(), setattr() hasattr()</span></span><br><span class="line"><span class="string">class MyObject(object):</span></span><br><span class="line"><span class="string">    pass</span></span><br><span class="line"><span class="string">    def power(self):</span></span><br><span class="line"><span class="string">        pass</span></span><br><span class="line"><span class="string">obj = MyObject()</span></span><br><span class="line"><span class="string">hasattr(obj, '</span>x<span class="string">') # False</span></span><br><span class="line"><span class="string">setattr(obj, '</span>x<span class="string">', 10)</span></span><br><span class="line"><span class="string">getattr(obj, '</span>x<span class="string">')</span></span><br><span class="line"><span class="string">getarrr(obj, '</span>z<span class="string">', 404) # if have no '</span>z<span class="string">', return 404</span></span><br><span class="line"><span class="string">fn = getarrr(ojb, '</span>powe<span class="string">r') # fn() same as obj.power()</span></span><br></pre></td></tr></table></figure>

<h3 id="实例属性和类属性"><a href="#实例属性和类属性" class="headerlink" title="实例属性和类属性"></a>实例属性和类属性</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    name = <span class="string">'Student'</span>    <span class="comment"># 类属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name=<span class="string">'zhang'</span>)</span>:</span> <span class="comment"># 实例属性，不是一回事，而且不要同名</span></span><br><span class="line">        self.name = name</span><br></pre></td></tr></table></figure>

<h2 id="面向对象高级编程"><a href="#面向对象高级编程" class="headerlink" title="面向对象高级编程"></a>面向对象高级编程</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 给实例绑定属性</span></span><br><span class="line">s = Student()</span><br><span class="line">s.age = <span class="number">16</span></span><br><span class="line"><span class="comment"># 给实例绑定方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_age</span><span class="params">(self, age)</span>:</span></span><br><span class="line">    self.age = age</span><br><span class="line"><span class="keyword">from</span> types <span class="keyword">import</span> MethodType</span><br><span class="line">s.set_age = MethodType(set_age, s) <span class="comment"># 对另一实例不起作用</span></span><br><span class="line">s.set_age(<span class="number">25</span>) </span><br><span class="line">Student.set_score = MethodType(set_type, Student) <span class="comment"># 给class绑定方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 限定实例的属性</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    __slots__ = (<span class="string">'name'</span>, <span class="string">'age'</span>)</span><br></pre></td></tr></table></figure>

<h3 id="使用-property"><a href="#使用-property" class="headerlink" title="使用@property"></a>使用@property</h3><ul>
<li>类似于装饰器，可以给函数动态加上功能，<code>@property</code>装饰器就是负责把一个方法变成属性调用</li>
<li>把一个<code>getter</code>方法变成属性，只需要加上<code>@property</code>就可以了，此时<code>@property</code>又创建了另一个装饰器<code>@socre.setter</code>，负责把<code>setter</code>方法变成属性赋值</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._score</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @score.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> isinstance(value, int)</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'score must be an integer!'</span>)</span><br><span class="line">        <span class="keyword">if</span> value &lt; <span class="number">0</span> <span class="keyword">or</span> value &gt; <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'score must between 0 ~ 100!'</span>)</span><br><span class="line">        self._score = value</span><br><span class="line"></span><br><span class="line">s = Student()</span><br><span class="line">s.score = <span class="number">60</span></span><br><span class="line">print(s.score)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 'birth' read and write, 'age' read only</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">birth</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._birth</span><br><span class="line"></span><br><span class="line"><span class="meta">    @birth.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">birth</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self._birth = value</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2015</span> - self._birth</span><br><span class="line"></span><br><span class="line"><span class="comment"># test 1</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Screen</span><span class="params">(object)</span>:</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">width</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._width</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @width.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">width</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> isinstance(value, int):</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'score must be an integer!'</span>)</span><br><span class="line">        self._width = value</span><br><span class="line">        </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">height</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._height</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @height.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">height</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> isinstance(value, int):</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'score must be an integer!'</span>)</span><br><span class="line">        self._height = value</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resolution</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._height * self._width</span><br></pre></td></tr></table></figure>

<h3 id="多重继承"><a href="#多重继承" class="headerlink" title="多重继承"></a>多重继承</h3><ul>
<li>Mixln</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTCPServer</span><span class="params">(TCPServer, ForkingMixIn)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<h3 id="定制类"><a href="#定制类" class="headerlink" title="定制类"></a><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014319098638265527beb24f7840aa97de564ccc7f20f6000" target="_blank" rel="noopener">定制类</a></h3><ul>
<li>类似<code>__xxx__</code>的变量或函数名，有特殊用途</li>
<li><code>__slots__</code>, <code>__len__</code>, <code>__str__</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Student object (name: %s)'</span> % self.name</span><br><span class="line">    __repr__ = __str__ <span class="comment"># __repr__() 返回程序开发者看到的字符串，为调试服务</span></span><br><span class="line">print(Student(<span class="string">'zhang'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2 __iter__ __next__</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fib</span><span class="params">(object)</span></span></span><br><span class="line"><span class="class">    <span class="title">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.a, self.b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.a, self.b = self.b, self.a + self.b</span><br><span class="line">        <span class="keyword">if</span> self.a &gt; <span class="number">100000</span></span><br><span class="line">            <span class="keyword">raise</span> StopIteration();</span><br><span class="line">        <span class="keyword">return</span> self.a</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Filb()</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure>

<h3 id="枚举类"><a href="#枚举类" class="headerlink" title="枚举类"></a>枚举类</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line">Month = Enum(<span class="string">'Month'</span>, (<span class="string">'Jan'</span>, <span class="string">'Feb'</span>, <span class="string">'Mar'</span>, <span class="string">'Apr'</span>, <span class="string">'May'</span>, <span class="string">'Jun'</span>, <span class="string">'Jul'</span>, <span class="string">'Aug'</span>, <span class="string">'Sep'</span>, <span class="string">'Oct'</span>, <span class="string">'Nov'</span>, <span class="string">'Dec'</span>))</span><br><span class="line"><span class="keyword">for</span> name, member <span class="keyword">in</span> Month.__members__.items():</span><br><span class="line">    print(name, <span class="string">'=&gt;'</span>, member, <span class="string">','</span>, member.value)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum, unique</span><br><span class="line"><span class="meta">@unique</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Weekday</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    Sun = <span class="number">0</span> <span class="comment"># Sun的value被设定为0</span></span><br><span class="line">    Mon = <span class="number">1</span></span><br><span class="line">    Tue = <span class="number">2</span></span><br><span class="line">    Wed = <span class="number">3</span></span><br><span class="line">    Thu = <span class="number">4</span></span><br><span class="line">    Fri = <span class="number">5</span></span><br><span class="line">    Sat = <span class="number">6</span></span><br><span class="line"><span class="keyword">for</span> name, member <span class="keyword">in</span> Weekday.__members__.items():</span><br><span class="line">    print(name, <span class="string">'=&gt;'</span>, member, member.value)</span><br></pre></td></tr></table></figure>

<h3 id="使用元类"><a href="#使用元类" class="headerlink" title="使用元类"></a><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014319106919344c4ef8b1e04c48778bb45796e0335839000" target="_blank" rel="noopener">使用元类</a></h3><h2 id="错误、调试和测试"><a href="#错误、调试和测试" class="headerlink" title="错误、调试和测试"></a>错误、调试和测试</h2><ul>
<li><code>try...except...finally</code></li>
<li>try…except捕获错误还有一个巨大的好处，就是可以跨越多层调用</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(<span class="string">'try...'</span>)</span><br><span class="line">    r = <span class="number">10</span> / <span class="number">0</span></span><br><span class="line">    print(<span class="string">'reslut:'</span>, r)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">'except:'</span>, e)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">'finally...'</span>)</span><br><span class="line">print(<span class="string">'END'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(<span class="string">'try...'</span>)</span><br><span class="line">    r = <span class="number">10</span> / int(<span class="string">'a'</span>)</span><br><span class="line">    print(<span class="string">'result:'</span>, r)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">'ValueError:'</span>, e)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">'ZeroDivisionError:'</span>, e)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">'finally...'</span>)</span><br><span class="line">print(<span class="string">'END'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"><span class="comment"># err.py:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">10</span> / int(s)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> foo(s) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    bar(<span class="string">'0'</span>)</span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">$ python3 err.py</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File "err.py", line 11, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    main()</span></span><br><span class="line"><span class="string">  File "err.py", line 9, in main</span></span><br><span class="line"><span class="string">    bar('0')</span></span><br><span class="line"><span class="string">  File "err.py", line 6, in bar</span></span><br><span class="line"><span class="string">    return foo(s) * 2</span></span><br><span class="line"><span class="string">  File "err.py", line 3, in foo</span></span><br><span class="line"><span class="string">    return 10 / int(s)</span></span><br><span class="line"><span class="string">ZeroDivisionError: division by zero</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>CheatSheet</tag>
        <tag>grammar</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>SVM 核函数和参数</title>
    <url>/2016/04/SVM-kernel-function-and-parameters.html</url>
    <content><![CDATA[<h1 id="SVM-核函数和参数"><a href="#SVM-核函数和参数" class="headerlink" title="SVM 核函数和参数"></a>SVM 核函数和参数</h1><h2 id="核函数"><a href="#核函数" class="headerlink" title="核函数"></a>核函数</h2><h3 id="常见核函数"><a href="#常见核函数" class="headerlink" title="常见核函数"></a>常见核函数</h3><ol>
<li>线性核函数<ul>
<li>没有额外的参数，线性核函数是RBF的一个特例。</li>
</ul>
</li>
<li>多项式核函数<ul>
<li>有着良好的全局性质，具有很强的外推能力（推广能力），而且阶数越低，推广能力越强。</li>
<li>参数：-d[3], gamma[1/k], coef0[0]</li>
</ul>
</li>
<li><strong>径向基核函数（RBF）</strong>[合理首选]<ul>
<li>是局部性很强的核函数，其内推能力（学习能力），与gamma成反比</li>
<li>参数：gamma[1/k]</li>
</ul>
</li>
</ol>
<a id="more"></a>

<ol start="4">
<li>Sigmoid核函数<ul>
<li>参数：gamma[1/k], coef0[0]</li>
<li>包含一个隐含层的多层感知器</li>
</ul>
</li>
</ol>
<h3 id="核函数的选择"><a href="#核函数的选择" class="headerlink" title="核函数的选择"></a>核函数的选择</h3><ol>
<li>利用先验只是预先判定核函数</li>
<li>采用Crosss-Validation方法，试用不同核函数</li>
<li>采用混合核函数的方法<a href="http://www.zhizhihu.com/html/y2010/2113." target="_blank" rel="noopener">smits</a>（注：又一方面的研究）</li>
</ol>
<h3 id="首先考虑RBF"><a href="#首先考虑RBF" class="headerlink" title="首先考虑RBF"></a>首先考虑RBF</h3><ol>
<li>RBF可以将样本映射到一个更高维的空间，可以处理非线性的样本，并且与同惩罚因子的线性函数性能相同。</li>
<li>相较于多项式函数，RBF参数更少，数值计算更简单。</li>
<li>对于某些参数，RBF与sigmoid具有相似的性能。</li>
<li>RBF广泛使用，其参数选择研究较多，Sigmoid与自定义核函数，研究较匮乏</li>
</ol>
<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ol>
<li>gamma 太大造成过拟合，即训练准确率很高，但测试准确率不高。</li>
<li>惩罚因子，C，C表示模型有多么重视离群点，过大也会造成过拟合。</li>
<li>不同核函数对SVM性能影响不大，反而核函数的参数和惩罚因子才是关键因素。</li>
</ol>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>machine learning</tag>
        <tag>SVM</tag>
        <tag>kernel function</tag>
        <tag>parameter</tag>
      </tags>
  </entry>
  <entry>
    <title>A bug in MrBayes</title>
    <url>/2016/04/A-bug-in-MrBayes.html</url>
    <content><![CDATA[<h1 id="a-bug-in-MrBayes"><a href="#a-bug-in-MrBayes" class="headerlink" title="a bug in MrBayes"></a>a bug in MrBayes</h1><h2 id="bug-in-MrBayes"><a href="#bug-in-MrBayes" class="headerlink" title="bug in MrBayes"></a>bug in MrBayes</h2><blockquote>
<p>Segmentaion Fault on AMD 64<br>C语言中，32位和64位long各占4个和8个字节，因此造成一个Bug<br>参照: <a href="https://sourceforge.net/p/mrbayes/bugs/55/" target="_blank" rel="noopener">https://sourceforge.net/p/mrbayes/bugs/55/</a></p>
</blockquote>
<h2 id="修改如下"><a href="#修改如下" class="headerlink" title="修改如下"></a>修改如下</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#long unsigned int -&gt; unsigned int</span></span><br><span class="line">$ sed -i <span class="string">'s/long unsigned int/unsigned int/g'</span> *.h *.c</span><br><span class="line"><span class="comment">#long int -&gt; int</span></span><br><span class="line">$ sed -i <span class="string">'s/long int/int/g'</span> *.h *.c</span><br><span class="line"><span class="comment">#long -&gt; int</span></span><br><span class="line">$ sed -i <span class="string">'s/long/int/g'</span> *.h *.c</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>develop</tag>
        <tag>bug</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>sed 学习备忘</title>
    <url>/2016/04/Sed-learning.html</url>
    <content><![CDATA[<h1 id="sed-学习备忘"><a href="#sed-学习备忘" class="headerlink" title="sed 学习备忘"></a>sed 学习备忘</h1><h2 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h2><ul>
<li>sed [选项] {动作脚本} [输入文件]</li>
<li>sed [选项] -f name [输入文件]</li>
</ul>
<h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><ul>
<li>-n: 安静模式</li>
<li>-e: 后跟脚本表达式，可多个</li>
<li>-f: 跟脚本文件</li>
<li>-r: 使用扩展正则表达式</li>
<li>-i: 直接修改文件</li>
</ul>
<a id="more"></a>

<h2 id="动作脚本"><a href="#动作脚本" class="headerlink" title="动作脚本"></a>动作脚本</h2><ul>
<li>a: 新增（后一行）</li>
<li>c: 取代匹配行</li>
<li>d: 删除行</li>
<li>i: 插入（上一行）</li>
<li>p: 打印，如果没有-n默认打印处理后的全部文本，p会打印处理的问题，故经常一起用。</li>
<li>s: 替换</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除</span></span><br><span class="line">sed <span class="string">'2,5d'</span></span><br><span class="line">sed <span class="string">'2d'</span></span><br><span class="line">sed <span class="string">'3,$d'</span></span><br><span class="line"></span><br><span class="line">sed <span class="string">'/root/d'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入</span></span><br><span class="line">sed <span class="string">'2a insert str'</span></span><br><span class="line">sed <span class="string">'2i insert str'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换</span></span><br><span class="line">sed <span class="string">'2,5c No 2-5 number'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示</span></span><br><span class="line">sed -n <span class="string">'5,7p'</span></span><br><span class="line">sed -n <span class="string">'/test/,/check/p'</span> <span class="comment">#打印test和check之间的行</span></span><br><span class="line">sed -n <span class="string">'5,/^test/p'</span></span><br><span class="line"><span class="comment"># 搜索 &amp; 替换</span></span><br><span class="line">sed -n <span class="string">'/root/p'</span> <span class="comment"># grep root</span></span><br><span class="line">sed -n <span class="string">'/root/&#123;s/bash/blueshell/;p&#125;'</span> <span class="comment"># 搜索并执行命令</span></span><br><span class="line">sed <span class="string">'/test/,/check/s/$/test/'</span></span><br><span class="line">sed -n <span class="string">'/root/&#123;s/bash/blueshell/;p;q&#125;'</span> <span class="comment">#替换第一个</span></span><br><span class="line">sed <span class="string">'s/oldstr/newstr/g'</span> <span class="comment"># 如果没有g，则之替换每行第一个匹配</span></span><br><span class="line">sed <span class="string">'s/正则//g'</span> <span class="comment">#删除整行 sed '/正则/d'</span></span><br><span class="line">sed -n <span class="string">'s/^test/my&amp;/gp'</span></span><br><span class="line">sed -n <span class="string">'s/\(love\)able/\1rs/gp'</span> love标记为1</span><br><span class="line">sed <span class="string">'s/s/S/1'</span> my.txt <span class="comment"># 替换第一个s</span></span><br><span class="line">sed <span class="string">'s/s/S/2g'</span> my.txt <span class="comment"># 第二个以后</span></span><br><span class="line"><span class="comment"># 多命令</span></span><br><span class="line">sed -e <span class="string">'3,$d'</span> -e <span class="string">'s/bash/blueshell/'</span></span><br><span class="line">sed <span class="string">'3,$d; s/bash/blueshell/'</span></span><br><span class="line"><span class="comment"># 修改文件</span></span><br><span class="line">sed -i <span class="string">'s/\.$/\!/g'</span> <span class="comment"># 如果行尾为.换为！</span></span><br><span class="line">sed -i <span class="string">'$a str'</span> <span class="comment"># 最后一行加一行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读写其他文件</span></span><br><span class="line">sed <span class="string">'/test/r file'</span></span><br><span class="line">sed -n <span class="string">'/test/w file'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动 n/N</span></span><br><span class="line">sed <span class="string">'/test/&#123;n; s/aa/bb/g;&#125;'</span> <span class="comment">#匹配test的下一行，替换aa为bb</span></span><br><span class="line"><span class="comment"># 变形</span></span><br><span class="line">sed <span class="string">'1,10y/abcde/ABCDE/'</span> <span class="comment">#1-10行内所有abcde转为大写</span></span><br><span class="line"><span class="comment"># 退出</span></span><br><span class="line">sed <span class="string">'10q'</span></span><br></pre></td></tr></table></figure>
<h2 id="Hold-Space"><a href="#Hold-Space" class="headerlink" title="Hold Space"></a>Hold Space</h2><ul>
<li>g： 将hold space中的内容拷贝到pattern space中，原来pattern space里的内容清除</li>
<li>G： 将hold space中的内容append到pattern space\n后</li>
<li>h： 将pattern space中的内容拷贝到hold space中，原来的hold space里的内容被清除</li>
<li>H： 将pattern space中的内容append到hold space\n后</li>
<li>x： 交换pattern space和hold space的内容</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat t.txt</span><br><span class="line">one</span><br><span class="line">two</span><br><span class="line">three</span><br><span class="line">$ sed <span class="string">'H;g'</span> t.txt</span><br><span class="line">one</span><br><span class="line"> </span><br><span class="line">one</span><br><span class="line">two</span><br><span class="line"> </span><br><span class="line">one</span><br><span class="line">two</span><br><span class="line">three</span><br><span class="line">$ sed <span class="string">'1!G;h;$!d'</span> t.txt</span><br><span class="line">three</span><br><span class="line">two</span><br><span class="line">one</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>CheatSheet</tag>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>The lib in Linux</title>
    <url>/2016/04/The-lib-in-linux.html</url>
    <content><![CDATA[<h1 id="lib-in-Linux"><a href="#lib-in-Linux" class="headerlink" title="lib in Linux"></a>lib in Linux</h1><ul>
<li><code>/lib</code>是内核级的，<code>/usr/lib</code>是系统级的，<code>/usr/local/lib</code>是用户级的</li>
<li>通常<code>gcc</code>中链接的时候，如<code>-lz -lm</code>都会寻找<code>/lib</code>和<code>/usr/lib</code>，还会搜索<code>-L/...</code>以及<code>LIBRARY_PATH</code>变量的目录，</li>
<li>linux可执行文件运行时，如果包含共享库，会先后搜索：文件的<code>DT_RPATH</code>段 -&gt; 环境变量<code>LD_LIBRARY_PATH</code> -&gt; <code>/etc/ld.so.cache</code>文件列表 -&gt; <code>/lib</code>和<code>/usr/lib</code>目录找到库并装入内存</li>
<li>可通过将其他目录加入<code>/etc/ld.so.cache</code>，方法：<ul>
<li><code>/etc/ld.so.conf</code>文件内容为<code>include /etc/ld.so.conf.d/*.conf</code></li>
<li>只需在<code>/etc/ld.so.conf.d/</code>添加自定义<code>conf</code>文件即可</li>
<li>运行<code>ldconfig</code>重建<code>/etc/ld.so.cache</code></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>library</tag>
      </tags>
  </entry>
  <entry>
    <title>静态库和动态库/共享库</title>
    <url>/2016/04/Static-ibrary-and-dynamic-library.html</url>
    <content><![CDATA[<h1 id="静态库和动态库-共享库"><a href="#静态库和动态库-共享库" class="headerlink" title="静态库和动态库/共享库"></a>静态库和动态库/共享库</h1><h2 id="静态库"><a href="#静态库" class="headerlink" title="静态库"></a>静态库</h2><ul>
<li>运行时不再需要其存在，移植方便，可执行文件比较大</li>
<li>扩展名：.a .lib</li>
<li>生成：<code>gcc -c xxx.c</code>和<code>ar -crv libxxx.a xxx.o</code></li>
</ul>
<h2 id="动态库-共享库"><a href="#动态库-共享库" class="headerlink" title="动态库/共享库"></a>动态库/共享库</h2><ul>
<li>空间节省，增量更新</li>
<li>拓展名：.so .dll</li>
<li>生成：<code>gcc -fPIC -shared -o libxxx.so xxx.c</code></li>
</ul>
<h2 id="编译时gcc参数"><a href="#编译时gcc参数" class="headerlink" title="编译时gcc参数"></a>编译时gcc参数</h2><ul>
<li><code>-static</code> 禁止使用动态库，<code>-share</code>尽量使用动态库</li>
</ul>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>library</tag>
      </tags>
  </entry>
  <entry>
    <title>我的vim配置</title>
    <url>/2016/04/My-vim-configuration.html</url>
    <content><![CDATA[<h1 id="我的vim配置"><a href="#我的vim配置" class="headerlink" title="我的vim配置"></a>我的vim配置</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul>
<li><a href="https://github.com/zz-zigzag/setups/blob/master/.vimrc" target="_blank" rel="noopener">vimrc</a></li>
<li><a href="https://github.com/zz-zigzag/setups/blob/master/vim-setup.sh" target="_blank" rel="noopener">setup</a></li>
</ul>
<h2 id="主题配色"><a href="#主题配色" class="headerlink" title="主题配色"></a>主题配色</h2><ul>
<li><a href="https://github.com/zz-zigzag/setups/blob/master/molokai.vim" target="_blank" rel="noopener">molokai</a></li>
</ul>
<a id="more"></a>

<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ul>
<li>插件管理：<a href="https://github.com/tpope/vim-pathogen" target="_blank" rel="noopener">Pathogen</a></li>
<li>补全：<a href="https://github.com/ervandew/supertab" target="_blank" rel="noopener">Supertab</a></li>
<li>python代码补全：<a href="https://github.com/davidhalter/jedi-vim" target="_blank" rel="noopener">Jedi-vim</a></li>
<li>注释：<a href="https://github.com/scrooloose/nerdcommenter" target="_blank" rel="noopener">NERDCommenter</a></li>
<li>高亮：<a href="https://github.com/scrooloose/syntastic" target="_blank" rel="noopener">Syntastic</a></li>
<li>括号对：<a href="https://github.com/jiangmiao/auto-pairs" target="_blank" rel="noopener">Auto Pairs</a></li>
<li>文本片段：<a href="https://github.com/msanders/snipmate.vim" target="_blank" rel="noopener">Snipmate</a></li>
<li>文件树：<a href="https://github.com/vim-scripts/The-NERD-tree" target="_blank" rel="noopener">NERDTree</a></li>
<li>Buffer：<a href="https://github.com/fholgado/minibufexpl.vim" target="_blank" rel="noopener">MiniBufferExplorer</a></li>
<li>Undotree：<a href="https://github.com/mbbill/undotree" target="_blank" rel="noopener">Undotree</a></li>
<li>Overview code：<a href="https://github.com/vim-scripts/taglist.vim" target="_blank" rel="noopener">Tag List</a></li>
<li>状态栏：<a href="https://github.com/vim-airline/vim-airline" target="_blank" rel="noopener">vim-airline</a></li>
<li>代码垂直线：<a href="https://github.com/Yggdroot/indentLine" target="_blank" rel="noopener">IndentLine</a></li>
<li>依赖库：<a href="https://github.com/vim-scripts/L9" target="_blank" rel="noopener">L9</a></li>
<li>模糊查找：<a href="https://github.com/vim-scripts/FuzzyFinder" target="_blank" rel="noopener">FuzzyFinder</a></li>
<li>多重选择：<a href="https://github.com/terryma/vim-multiple-cursors" target="_blank" rel="noopener">vim-multiple-cursors</a></li>
</ul>
<p>参考: <a href="https://github.com/rarezhang/simple_vim_setting" target="_blank" rel="noopener">https://github.com/rarezhang/simple_vim_setting</a></p>
]]></content>
      <categories>
        <category>总结备份</category>
      </categories>
      <tags>
        <tag>vim</tag>
        <tag>setting</tag>
        <tag>plugin</tag>
      </tags>
  </entry>
  <entry>
    <title>vim 命令备忘</title>
    <url>/2016/04/Vim-shortcuts-cheateet.html</url>
    <content><![CDATA[<h1 id="vim-命令备忘"><a href="#vim-命令备忘" class="headerlink" title="vim 命令备忘"></a>vim 命令备忘</h1><h2 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h2><ul>
<li>A I</li>
<li>i a</li>
<li>o O</li>
</ul>
<h2 id="modify"><a href="#modify" class="headerlink" title="modify"></a>modify</h2><ul>
<li>r R</li>
<li>gu gU guu gUU Vu VU</li>
<li>J ~</li>
<li>= &lt; &gt;</li>
<li>c C cc cw</li>
<li>p P</li>
</ul>
<a id="more"></a>

<h2 id="motion"><a href="#motion" class="headerlink" title="motion"></a>motion</h2><ul>
<li>h j k l</li>
<li>0 $</li>
<li>^ g_</li>
<li>w W e E b B ge</li>
<li>( ) { }</li>
<li>C-i C-o</li>
<li>C-d C-u</li>
<li>10G/10gg/:10</li>
<li>G gg</li>
<li>H M L</li>
<li>% * #</li>
<li>fa ta Fa Ta</li>
</ul>
<h2 id="deleting-text"><a href="#deleting-text" class="headerlink" title="deleting text"></a>deleting text</h2><ul>
<li>x X</li>
<li>d$/D dG</li>
<li>dd/:d</li>
</ul>
<h2 id="searching"><a href="#searching" class="headerlink" title="searching"></a>searching</h2><ul>
<li>/string ?string n N</li>
<li>s/str/str/g</li>
<li>%s/str/str/gc</li>
</ul>
<h2 id="visual"><a href="#visual" class="headerlink" title="visual"></a>visual</h2><ul>
<li>v</li>
<li>vi( va(</li>
<li>v2i( v2a(</li>
<li>C-v </li>
</ul>
<h2 id="file"><a href="#file" class="headerlink" title="file"></a>file</h2><ul>
<li>:e</li>
<li>:w</li>
<li>:r</li>
<li>:q</li>
<li>:saveas</li>
<li>:x/ZZ/:wq</li>
<li>:n :p</li>
<li>:qa</li>
<li>:bn :bp :n :bd</li>
<li>C-w</li>
</ul>
<h2 id="others"><a href="#others" class="headerlink" title="others"></a>others</h2><ul>
<li>.</li>
<li>C-r u U</li>
<li>100iasd [ESC]</li>
<li>qa, q, @a, aa</li>
</ul>
<h2 id="分屏"><a href="#分屏" class="headerlink" title="分屏"></a>分屏</h2><ul>
<li>vim -On file1 file2</li>
<li>vim -on file1 file2</li>
<li>vim -p file1 fil2 标签页</li>
<li>C-w hjkl</li>
<li>C-w v/s</li>
</ul>
<h2 id="浏览目录"><a href="#浏览目录" class="headerlink" title="浏览目录"></a>浏览目录</h2><ul>
<li>:E</li>
<li>:He! :He 上，下分屏浏览目录 </li>
<li>:Ve :Ve! 左右</li>
<li>:Te tab页浏览目录</li>
<li>gt gT 换页 {i}gt</li>
<li>:tabs</li>
<li>:tabclose</li>
</ul>
<h2 id="保存回话"><a href="#保存回话" class="headerlink" title="保存回话"></a>保存回话</h2><ul>
<li>:mksession file.vim</li>
<li>vim -S file.vim</li>
<li>:qa :wqa</li>
</ul>
<h2 id="quickfix"><a href="#quickfix" class="headerlink" title="quickfix"></a>quickfix</h2><ul>
<li>:cw cwindows 把命令结果取回</li>
<li>:cp :cn 上一个，下一个</li>
<li>:cl 列出所有</li>
<li>:cc 显示详细</li>
</ul>
<h2 id="代码补全"><a href="#代码补全" class="headerlink" title="代码补全"></a>代码补全</h2><ul>
<li>C-n C-p 关键字补全 C-E 退出下拉窗口 C-Y 退出并接受当前选择</li>
<li>C-x</li>
</ul>
<h2 id="其他编程相关"><a href="#其他编程相关" class="headerlink" title="其他编程相关"></a>其他编程相关</h2><ul>
<li>ga 查看光标字符ascii</li>
<li>gf include的文件</li>
<li>[[ ]] 跳到{代码块</li>
<li>gD 调到变量定义处（第一次出现）</li>
<li>跳到上次停靠的地方， C-i C-o</li>
<li>mx 设置书签，x只能a-z</li>
<li>`x</li>
<li><code>&gt;&gt;</code> <code>&lt;&lt;</code></li>
<li><code>&gt;aB</code> <code>&gt;iB</code> 缩进块</li>
<li>选中单词<code>viw</code>，修改光标所在单词<code>ciw</code></li>
</ul>
<h2 id="define"><a href="#define" class="headerlink" title="define"></a>define</h2><ul>
<li>&lt;,undo&gt;</li>
<li>&lt;,tree&gt;</li>
<li>&lt;,line&gt;</li>
<li>&lt;,tag&gt;</li>
<li>&lt;,r&gt; # replace the selected text</li>
<li>&lt;,n&gt; &lt;,p&gt;</li>
<li><code>&lt;F5&gt;</code></li>
</ul>
<h2 id="completion"><a href="#completion" class="headerlink" title="completion"></a>completion</h2><p><code>&lt;C-space&gt;</code> <code>&lt;C-p&gt;</code> <code>&lt;C-n&gt;</code> <code>&lt;Tab&gt;</code></p>
<h2 id="go-definition-assignment"><a href="#go-definition-assignment" class="headerlink" title="go definition/assignment"></a>go definition/assignment</h2><p>&lt;,g&gt; &lt;,d&gt; &lt;,n&gt; &lt;,rname&gt;</p>
<h2 id="find-file"><a href="#find-file" class="headerlink" title="find file"></a>find file</h2><p><code>&lt;C-F&gt;</code></p>
<h2 id="mutiply-select"><a href="#mutiply-select" class="headerlink" title="mutiply select"></a>mutiply select</h2><p><code>&lt;C-N&gt;</code> <code>&lt;C-P&gt;</code> <code>&lt;C-x&gt;</code></p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>CheatSheet</tag>
        <tag>shortcut</tag>
        <tag>vim</tag>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 快捷键备忘</title>
    <url>/2016/04/Linux-shortcuts-cheatsheet.html</url>
    <content><![CDATA[<h1 id="linux-快捷键备忘"><a href="#linux-快捷键备忘" class="headerlink" title="linux 快捷键备忘"></a>linux 快捷键备忘</h1><p>备注: <code>C</code>代表<code>ctrl</code>，<code>S</code>代表<code>shift</code></p>
<h2 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h2><ul>
<li><code>C-;</code></li>
<li><code>C-insert</code> <code>S-insert</code></li>
<li><code>C-S-c</code> <code>C-S-v</code></li>
<li><code>选中</code> <code>中键</code></li>
</ul>
<a id="more"></a>

<h2 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h2><ul>
<li><code>C-c</code> 终止前台进程</li>
<li><code>C-z</code> 挂起，<code>bg</code>、<code>fg</code>、<code>jobs</code></li>
<li><code>C-d</code> 终止输入或退出shell</li>
<li><code>C-\</code> 终止前台进程，生成core文件</li>
<li><code>C-s</code> Suspend output</li>
<li><code>C-q</code> Resume output</li>
<li><code>C-o</code> Discard output</li>
<li><code>C-l</code> clear screen</li>
<li><code>C-r</code> 查找历史命令</li>
<li><code>C-u</code> 删除一行，<code>C-w</code>删除最后一个单词<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2></li>
<li><code>A-&lt;F2&gt;</code></li>
<li><code>C-w</code></li>
<li><code>W-s</code><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2></li>
<li><code>C-s</code> 匹配</li>
<li><code>C-d</code> 添加书签</li>
<li><code>C-h</code> 显示隐藏</li>
</ul>
<h2 id="Dash"><a href="#Dash" class="headerlink" title="Dash"></a>Dash</h2><ul>
<li><code>W-123...</code></li>
<li><code>W-a</code></li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><code>S-prt_sc</code> 截屏</li>
</ul>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>CheatSheet</tag>
        <tag>Linux</tag>
        <tag>shortcut</tag>
      </tags>
  </entry>
  <entry>
    <title>RegExp 常用语法</title>
    <url>/2016/04/RegExp-grammar-introduction.html</url>
    <content><![CDATA[<h1 id="RegExp-常用语法"><a href="#RegExp-常用语法" class="headerlink" title="RegExp 常用语法"></a>RegExp 常用语法</h1><ul>
<li><code>.</code>：除换行以外的任何字符  </li>
<li><code>\w</code>：[a-zA-Z0-9_]</li>
<li><code>\W</code>: ~ <code>\w</code></li>
<li><code>\b</code>: 字符的边界</li>
<li><code>\s</code>: [\n\r\t\f]</li>
<li><code>\S</code>: ~ <code>\s</code></li>
<li><code>\d</code>: [0-9]</li>
<li><code>+</code>: 一次或多次</li>
<li><code>?</code>: 零次或一次、加在数量后面表示最小匹配（非贪婪匹配）</li>
<li><code>*</code>: 零次或多次</li>
<li><code>{n} {n,} {n, m}</code>: </li>
<li><code>^</code>: 开始</li>
<li><code>$</code>: 结束</li>
<li><code>\</code>: 转义</li>
</ul>
<p> 详细入门教程: <a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">http://deerchao.net/tutorials/regex/regex.htm</a></p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>CheatSheet</tag>
        <tag>grammar</tag>
        <tag>RegExp</tag>
        <tag>commonly used</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 常用语法</title>
    <url>/2016/04/Markdown-grammar-introduction.html</url>
    <content><![CDATA[<h1 id="Markdown-常用语法"><a href="#Markdown-常用语法" class="headerlink" title="Markdown 常用语法"></a>Markdown 常用语法</h1><ul>
<li>分级标题： <code>#</code> <code>##</code> <code>===</code> <code>---</code></li>
<li>无序列表：<code>*/-/-</code> </li>
<li>有序列表：<code>1.</code></li>
<li>斜体/粗体：<code>*/**</code>或者<code>_/__</code></li>
<li>删除线：<code>~~</code></li>
<li>引用：<code>&gt;</code></li>
<li>图片：<code>![logo](http://...)</code>或者<code>![logo][id]</code>并在之后加<code>[id]: http://...  &quot;title&quot;</code></li>
<li>超链接：<code>[logo](http://...)</code>或者同上</li>
<li>代码块：缩进或四个空格，短：`code`</li>
<li>高亮代码：<code>``` python \n...\n...\n ```</code></li>
<li>注脚：<code>[^1]</code>并之后<code>[^1]:</code> （有的解释器不能用）</li>
<li>转义：<code>\</code></li>
<li>分割线： 空白行后面加<code>---</code>或者<code>***</code></li>
<li>可使用<code>&lt;html&gt;</code>标签实现更多功能</li>
</ul>
<h2 id="Some-Others"><a href="#Some-Others" class="headerlink" title="Some Others"></a>Some Others</h2><ul>
<li>多个格式同时用时，记得加缩进</li>
<li>离开格式时，可能需要隔空行</li>
<li><code>&lt;&gt;</code>中的会变成超链接，如<code>&lt;zz_zigzag@outlook.com&gt;</code></li>
</ul>
<p>[1]: <a href="http://www.appinn.com/markdown/" target="_blank" rel="noopener">http://www.appinn.com/markdown/</a><br>[2]: <a href="http://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="noopener">http://www.jianshu.com/p/1e402922ee32/</a></p>
]]></content>
      <categories>
        <category>技术学习</category>
      </categories>
      <tags>
        <tag>CheatSheet</tag>
        <tag>markdown</tag>
        <tag>grammar</tag>
        <tag>often</tag>
      </tags>
  </entry>
  <entry>
    <title>新知记录（设置方面）</title>
    <url>/2016/01/log-of-new-knowledge-in-setting.html</url>
    <content><![CDATA[<h1 id="新知记录（设置方面）"><a href="#新知记录（设置方面）" class="headerlink" title="新知记录（设置方面）"></a>新知记录（设置方面）</h1><h2 id="Intel集显，屏幕亮度自动调整"><a href="#Intel集显，屏幕亮度自动调整" class="headerlink" title="Intel集显，屏幕亮度自动调整"></a>Intel集显，屏幕亮度自动调整</h2><p>使用电池时，总时不时觉得屏幕亮度在自动调整，看黑色和白色背景东西时的亮度不同。曾找过几次设置项，不是系统服务（services.msc）的问题，也不是右下角电源设置的问题。后来终于发现：右键-&gt;Intel显卡设置-&gt;电源，禁用显示器节能技术。</p>
<hr>
<h2 id="关于OFFICE版"><a href="#关于OFFICE版" class="headerlink" title="关于OFFICE版"></a>关于OFFICE版</h2><p>当写完各种中英论文，小大论文后，你会对OFFICE使用很有经验，这里以此谨记。</p>
<h3 id="关于版本"><a href="#关于版本" class="headerlink" title="关于版本"></a>关于版本</h3><p>通常软件都为向上兼容，高版本的软件可以打开低版本软件制作的文件。OFFICE也不例外，但是我在写中文论文时发现一个问题。低版本的OFFICE通过打补丁也会兼容高版本OFFICE的一些特性。即，微软并非只集中开发更高版本的OFFICE，低版本OFFICE也不光是一些修复工作，还有功能上的跟进。我用期刊社要求的低版本OFFICE打开高版本OFFICE时存在一些显示问题，但打完SP1类似的补丁之后就显示正常了。</p>
<h3 id="WORD另存为PDF"><a href="#WORD另存为PDF" class="headerlink" title="WORD另存为PDF"></a>WORD另存为PDF</h3><h4 id="英文字符间距不正常"><a href="#英文字符间距不正常" class="headerlink" title="英文字符间距不正常"></a>英文字符间距不正常</h4><p>由于我觉得自己此电脑用不到打印机服务，于是禁用了Print Spooler服务。在另存为PDF时，出现了英文字符间距显示不太正常的情况，打开服务后就正常了。所以，以后还是不要乱禁用系统自带的服务，微软会给你调到最优，没有优化就是最好的优化，而且也不用清理系统垃圾。总之，系统优化方面，节省你鼠标点击和键盘敲击，不要吝啬系统内存、硬盘等资源。</p>
<h4 id="PDF中的图片"><a href="#PDF中的图片" class="headerlink" title="PDF中的图片"></a>PDF中的图片</h4><p>另存为PDF时，选位置的对话框的右下角，有一个工具-&gt;压缩图片，可以选择图片的清晰度。这里多说一点，我发现选择另存为PDF中时，其中的图片，不如选择打印-&gt;打印为PDF文件中的图片清晰。但是后者会消除许多属性，就像打印出来一样，比如目录书签没了，另存为PDF就会保留目录跳转书签。此外，打印为PDF时可能会存在公式显示不正常的情况。另外，在WORD中粘贴图片的时候可以<code>Ctrl-Shift-V</code>进行选择性粘贴，然后放大看看选哪种粘贴会更清晰些。</p>
<h4 id="PDF嵌入字体"><a href="#PDF嵌入字体" class="headerlink" title="PDF嵌入字体"></a>PDF嵌入字体</h4><p>如果使用过PDF eXpress进行PDF文件检测，就会发现一个PDF嵌入字体的问题。只需WORD另存为PDF时，右下角选项-&gt;PDF选项-&gt;勾选符合PDF/A即可。</p>
<hr>
]]></content>
      <categories>
        <category>日志记录</category>
      </categories>
      <tags>
        <tag>log</tag>
      </tags>
  </entry>
  <entry>
    <title>一件小事</title>
    <url>/2014/06/An-incident.html</url>
    <content><![CDATA[<p><img src="/images/beauty/Pixabay_bb423ec99d2d4e50_1000h.jpg" alt=""></p>
<h1 id="一件小事"><a href="#一件小事" class="headerlink" title="一件小事"></a><a href="/files/一件小事.pdf">一件小事</a></h1><p>我昨天经历了一件小事。</p>
<p>学校图书馆有一个自动借书的仪器，但我最近借书时总显示校园卡异常，于是，我准备在午饭前的时间去一趟图书馆，向人工借书处询问一下。</p>
<p>来到服务台，工作人员是一位四五十岁的中年人，面容很是慈祥。我把校园卡递给他并告知此卡借书异常。他不慌不忙，拿过卡去，在仪器上刷了一下，屏幕上出现了一本关于数据挖掘的书。我看了一下，也没多想，许是我曾经借过的书罢。他查询了一下这本书，显示在架可借，然后就在一张纸上抄着什么。</p>
<a id="more"></a>
<p>我以为他在忙别的事情，忍不住提示，“您好，我的校园卡异常。”</p>
<p>他依然不慌不忙：等一下。</p>
<p>终于，他写完了，然后告诉我：你按这个索书号，还有这个标识号，把这本书找到，拿过来。</p>
<p>我不懂什么意思，但也照做，很容易就找到那本书，递到他面前。</p>
<p>他翻开扉页，指着下面，我意识到了有淡淡的水垢印，他又打开书的里面，书籍的褶皱应该是沾水的痕迹。</p>
<p>“你上次用这本书的时候沾水了”。他对我说道。</p>
<p>我对此书并无印象，许是帮别人代借的，所以无从记起，当然也无丝毫怨意，我表现出一番甘愿受罚的脸色。</p>
<p>他很祥和地说：“每一本借出的书，归还后，我们都要检查，这书是你借的吧。”</p>
<p>我连连点头称是。是什么处罚呢，我还没来及想，他已说了，“带零钱了么”。</p>
<p>“带了”，我连忙把口袋里的钱都掏了出来，公交卡也一并掏出了。</p>
<p>他从抽屉里拿出一个小本。我看了一眼，上面是交钱的记录。他让我写，两元。</p>
<p>“大写的二会写吗？”</p>
<p>我记得个大概，于是写了上去。</p>
<p>“没有这一撇”，他给我指出错误，我点头认错。</p>
<p>他又指着那本书上水垢印旁边的红色小章，问我：“认识这个字吗？”</p>
<p>我仔细看了看，没有认出。他说是“污”字，我恍然，正是小篆的“污”字。</p>
<p>我交完钱，他示意我可以走了。我连忙称谢地倒退几步转身离开。</p>
<p>自始至终都是一种很祥和的氛围，尤其是那句：“带零钱了吗？”我深受感动。倘若没带怎么办？是不是就不用交钱了，我想是的。</p>
<p>这是多么和谐的一次“执法”过程，我无丝毫怨意，却无比感激。无独有偶，我想到了六号楼和蔼可亲的宿管阿姨和打扫卫生的可爱大妈。</p>
<p>世上无偶然，我想这是我们的传统罢。无论怎样的社会，依然会有遗世高洁，淳朴憨厚的品格。爱因斯坦说过：“不管时代的潮流和社会的风尚怎样，人总可以凭着自己高尚的品质，超脱时代和社会，走自己正确的道路”。我希望越来越多的人拥有这样的品格，并不被时代和社会的不好方面所同化。</p>
<p>一件小事，我倍受鼓舞，不知怎样形容对他们的敬爱，谨以此祝福。</p>
<p>二〇一四年六月五日</p>
]]></content>
      <categories>
        <category>日常随笔</category>
      </categories>
      <tags>
        <tag>感悟</tag>
        <tag>记事</tag>
      </tags>
  </entry>
  <entry>
    <title>log of zz_zigzag&#39;s Notes</title>
    <url>/2009/09/log-of-zz_zigzag-notes.html</url>
    <content><![CDATA[<h2 id="该网站配置日志"><a href="#该网站配置日志" class="headerlink" title="该网站配置日志"></a>该网站配置日志</h2><hr>
<p>2016-08-18<br>由于URL对中文的支持还得转码，不利于URL复制分享，于是乎把所有文章的文件名改为英文，这直接导致阅读数量清零，因为LeanCloud是根据内部URL来区分的。<br>并且，文章中的相互引用，改一下。</p>
<hr>
<p>2016-09-18<br>增大了文章内容宽度</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$content-desktop                &#x3D; 900px</span><br><span class="line">$content-desktop-large          &#x3D; 1000px</span><br></pre></td></tr></table></figure>

<hr>
<p>2016-09-18<br>修改站点配置文件<code>_config.yml</code></p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="symbol">permalink:</span> /<span class="symbol">:year/</span><span class="symbol">:month/</span><span class="symbol">:title</span>.html -&gt;</span><br><span class="line"><span class="symbol">permalink:</span> notes/<span class="symbol">:year/</span><span class="symbol">:month/</span><span class="symbol">:title</span>.html</span><br></pre></td></tr></table></figure>
<p>之前搜索之后，一直出现xiaodong.site__//__notes/2009/09/log-of-xiaodong-site.html双斜杠，改完之后没了。</p>
<hr>
<p>2016-09-18<br>把图片存储路径进行修改，把文章首部大图放到/images/beauty文件夹中去，更改文章中路径: <code>sed -i &#39;s/\/images\//\/images\/beauty\//g&#39; *</code></p>
<hr>
<p>2016-09-20<br>换了，zz-zigzag.com域名，开启新域名，将xiaodong.site显性URL重定向到notes.zz-zigzag.com上面（阿里云和dnspod域名管理中URL映射都有一些限制，前者需要两个域名备案，后者需要域名在此使用一个月以上。）后来终于找了一个DNS服务商——<a href="http://www.yundun.com" target="_blank" rel="noopener">YUNDUN</a>    可以解决此需求。</p>
]]></content>
      <categories>
        <category>日志记录</category>
      </categories>
      <tags>
        <tag>log</tag>
      </tags>
  </entry>
</search>
